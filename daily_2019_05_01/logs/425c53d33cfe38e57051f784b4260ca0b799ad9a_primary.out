cset: moving following pidspec: 20406
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309476346 seconds)
loading group "string"... done (took 0.58760887 seconds)
loading group "linalg"... done (took 7.18696876 seconds)
loading group "parallel"... done (took 0.164795822 seconds)
loading group "find"... done (took 1.119778094 seconds)
loading group "tuple"... done (took 1.981775267 seconds)
loading group "dates"... done (took 1.264789745 seconds)
loading group "micro"... done (took 0.236043894 seconds)
loading group "io"... done (took 0.964691405 seconds)
loading group "scalar"... done (took 38.345064272 seconds)
loading group "sparse"... done (took 12.337241898 seconds)
loading group "broadcast"... done (took 0.96824702 seconds)
loading group "union"... done (took 13.049020978 seconds)
loading group "simd"... done (took 4.428706525 seconds)
loading group "random"... done (took 8.926171633 seconds)
loading group "problem"... done (took 1.946966928 seconds)
loading group "array"... done (took 21.128598641 seconds)
loading group "misc"... done (took 1.917079269 seconds)
loading group "sort"... done (took 3.206472559 seconds)
loading group "collection"... done (took 17.927102668 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536751673 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142600458 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119622609 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141107192 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185467415 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132632631 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146186372 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085885412 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01891011 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168251129 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140789039 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.482207937 seconds)
done (took 5.068426205 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203271472 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090073207 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097150751 seconds)
  done (took 0.897405452 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06731035 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130266627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081323003 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068969867 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067914425 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082360171 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068238287 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066559676 seconds)
  done (took 1.282998694 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077604134 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069592117 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086269561 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069461109 seconds)
  done (took 1.020731179 seconds)
done (took 4.200658356 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.899464908 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236111458 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191279243 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456743676 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149906899 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19003102 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671390512 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31124559 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213062153 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102336618 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106176401 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380539892 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107271978 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661247273 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07939476 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110755756 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162256037 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423863366 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082184309 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084566174 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105282891 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143434829 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104577864 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08122211 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171078418 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070861605 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149905343 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09640207 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070153693 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.246838361 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191111888 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679554554 seconds)
  done (took 10.489082171 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104763016 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119800035 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070669135 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141215773 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105632124 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089515866 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072568121 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085996789 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092648841 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161420824 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116667353 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107331701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083548248 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071799034 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102780505 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214555082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111472004 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089743153 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089739322 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079543427 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126033568 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086098008 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097337024 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081321813 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156349578 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199885113 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116232701 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115644369 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072567862 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084510317 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135362662 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146969359 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069207033 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085271287 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.144144084 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114733352 seconds)
  done (took 4.675411403 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.052306795 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160548527 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091786509 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153258331 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086608056 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110624229 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084046862 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100032089 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248952455 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.080860886 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.46462746 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130115808 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103331734 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068733852 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085747017 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069206018 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.548973137 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149240597 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.122981981 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088491728 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091096051 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072876911 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359887941 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070131128 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06787134 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088347361 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062374682 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148573329 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070052226 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.243004711 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091230225 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088943873 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103167697 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195930644 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098955594 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129814798 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069348879 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08288705 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172038455 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07642669 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104103408 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067662984 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108477147 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104445569 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125186696 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086501469 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069986694 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184049312 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070657114 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104093958 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.882034231 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166851544 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080889575 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069460365 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300946458 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085658317 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086024011 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06550816 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.240806403 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.158747851 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070107659 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085996823 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067485394 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069134163 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.391616808 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071147359 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732972824 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072529384 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078054981 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087889821 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068623246 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0913241 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073683409 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102038805 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068196992 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10864935 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06831984 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067033576 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086702921 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06988199 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102757301 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06643474 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204106733 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084979748 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06875624 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065707464 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104062594 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11231837 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073928636 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067188563 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117826699 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070103298 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085873443 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103993034 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085883949 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065429195 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103603172 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085526984 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115333937 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086240504 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135136056 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069616766 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114824251 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073554475 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114752405 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098168744 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071031992 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155710966 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066373885 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083844305 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069233362 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066722193 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085867789 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070040959 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099183568 seconds)
  done (took 21.147109969 seconds)
done (took 38.083590382 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.296932506 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093198194 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092275018 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076057928 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094029241 seconds)
  done (took 1.448771731 seconds)
done (took 2.216308326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122142037 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118432845 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064609805 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113826602 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064772363 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118105589 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116682327 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083072959 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121531776 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065418035 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11499996 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065636177 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064668206 seconds)
  done (took 2.030444736 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086270329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087493738 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088080699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082414097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08038917 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084301586 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081585209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106079922 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080983215 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089917212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064861687 seconds)
  done (took 1.694890549 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086165517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086283238 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088066267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083756342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080312305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085081151 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08219307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105206946 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082815768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092643875 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067285971 seconds)
  done (took 1.703565037 seconds)
done (took 6.184931637 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081966354 seconds)
  done (took 0.841031339 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.704565997 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.555215659 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084652063 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135470098 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222848462 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154057985 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.443551513 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11163259 seconds)
  done (took 10.346726323 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092210668 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100765118 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073708956 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089539612 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071050923 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086763245 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073641532 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069905983 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087649954 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074244805 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085370824 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072973869 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085485854 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073924091 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071259487 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086078539 seconds)
  done (took 2.123845972 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096003138 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094485733 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091468557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077736179 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09115806 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07502078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092886393 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076667824 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08931765 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073708303 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093310093 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07638666 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089593244 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066916013 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091634839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078287296 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088434411 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077385104 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092837313 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07809155 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093151507 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067987145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089835557 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076039492 seconds)
  done (took 2.889642312 seconds)
done (took 16.96636256 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13549739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077892692 seconds)
  done (took 0.979650508 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085299978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099334182 seconds)
  done (took 0.956903374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086591731 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083110796 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092159924 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096022639 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082958357 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068209603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103270202 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067727675 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082770734 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068175345 seconds)
  done (took 1.603474253 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072602039 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095758498 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074362842 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099225986 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075311817 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083758098 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074360735 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086812502 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078540426 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079756633 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07294488 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099500488 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072754456 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102275574 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074534073 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085622617 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08922937 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069304586 seconds)
  done (took 2.260743948 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070248205 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069006018 seconds)
  done (took 0.91291731 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070214129 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067475781 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085346219 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06831215 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081146981 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065489254 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080275449 seconds)
  done (took 1.292685318 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403614671 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109730669 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243294778 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088799578 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105654012 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264867227 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084522206 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07340165 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089260893 seconds)
  done (took 2.275668454 seconds)
done (took 11.053857081 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083400885 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088264376 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11209296 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421702718 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106721309 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068790102 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142106922 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.212868256 seconds)
done (took 2.013864558 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128929978 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.623952477 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40433511 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213281222 seconds)
  done (took 2.020933223 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378816765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092665552 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074345701 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067799297 seconds)
  done (took 1.395460857 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06900294 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070700036 seconds)
  done (took 0.922268897 seconds)
done (took 5.249528997 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069143133 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0682424 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.101239308 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065382087 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084481191 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065037278 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065460646 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085115745 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068085813 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067730378 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.083959446 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071657039 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081323747 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064988949 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068104362 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080516891 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066416113 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065496692 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080847529 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067860165 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067735231 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079956531 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065907289 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067684557 seconds)
  done (took 2.570187266 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087990638 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084279315 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074410837 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089790066 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073415164 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090557411 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0739656 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068887017 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088655955 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070865647 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087835537 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072668494 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085838043 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072925167 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086574065 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073143347 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089078505 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071045699 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069828954 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087322708 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074000327 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083554 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073067685 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089762169 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071780299 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088337903 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070359369 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084705466 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073882661 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088842704 seconds)
  done (took 3.182309062 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075486597 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065579238 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082198948 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071600975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065228227 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082168672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066062349 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081804841 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066824473 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065782414 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083640571 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065954403 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065257526 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082167946 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066284806 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084167006 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081548774 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065260059 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081576156 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066433633 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068142052 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081498646 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066277755 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081969733 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064974605 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065462168 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081903995 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065074586 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066757014 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081164771 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068861833 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068792791 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082718654 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071891622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085554205 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065410857 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070029124 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081210651 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067085862 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06538933 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080816001 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065616547 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065580352 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088743026 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066405424 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083220863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065662942 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067611999 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082337768 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068712986 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081918121 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0656197 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067571512 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081956677 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069416962 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064861752 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081988522 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064897141 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082240722 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065885342 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065940192 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081482611 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068140202 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065797861 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096120154 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073112096 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082633363 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06742502 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06746519 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08398739 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068055545 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080029964 seconds)
  done (took 6.064256795 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120571839 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093983936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083843296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06730538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080574734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066364691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070421011 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082776632 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067841602 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087376289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066791487 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067461639 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083380964 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078782217 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082874486 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068023576 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087393559 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064736275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066581572 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086062631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066986809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085098926 seconds)
  done (took 2.517004989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189856664 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089434343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110273633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091535855 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087170672 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075431416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088337561 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073623227 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072876423 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087120022 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070843365 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087639683 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06975843 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085814231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070320662 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086307198 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071981225 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087093919 seconds)
  done (took 2.387824666 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08157185 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069452001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108667643 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067516503 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085165473 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070852521 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090880636 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077307956 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0877138 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070085315 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093663272 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071831325 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088066133 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069482097 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07070158 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084932069 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071130908 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084877378 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076680164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090608395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073543071 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093032809 seconds)
  done (took 2.571991048 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085246586 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069457431 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103406773 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088345111 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064840741 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066901401 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091393281 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068993986 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091315873 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070193188 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06806786 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083374242 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072895087 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084296195 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072502622 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085015519 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070025138 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067968542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087292186 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06397099 seconds)
  done (took 2.350536452 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089940099 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085518671 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069899733 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094791182 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070045896 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08575105 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077959931 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085321053 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070031098 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111211439 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069502294 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085661835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077918708 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090911091 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070111324 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093349729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077174421 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093548134 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069328745 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086579266 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.220013485 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069095466 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093251408 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069277015 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085419947 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068845569 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069668377 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091179566 seconds)
  done (took 3.219660867 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069388057 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068195147 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082327397 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065804519 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065766055 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082428365 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066549149 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066284265 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084481934 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06601966 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06804713 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084186599 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067580571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083909433 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067168896 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068782709 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08388985 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066026539 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065547506 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082224789 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06901334 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068121413 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084361167 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066398539 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082733351 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067391874 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065907637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083121677 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068304598 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066173326 seconds)
  done (took 2.975452288 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080257264 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094483493 seconds)
  done (took 0.976432034 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068245253 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083648755 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082794979 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07235387 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089508701 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068958789 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093520183 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072779275 seconds)
  done (took 1.432227175 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085752457 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080228606 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086339883 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081033364 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096323375 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085003544 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156569792 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086153561 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074990231 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08336092 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081759491 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067113931 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091714507 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068587107 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091347606 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074543784 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066461393 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090461888 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07194989 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08481994 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071142439 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093542591 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070453802 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064961538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087047712 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077285921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095796322 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070701776 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088627736 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076112056 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073547527 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079287046 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069058693 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085660521 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06774575 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094456901 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083111091 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088354771 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076601847 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069146182 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094328756 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064689331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090128587 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074704565 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095033823 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069447013 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068798226 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080781697 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066565731 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08745388 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064027941 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068981565 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080532329 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075762232 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088281306 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079183444 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087866089 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069452268 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071341742 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088395263 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075609673 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086193143 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071067618 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068191845 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094349159 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073468442 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094280188 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064948328 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063315192 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083530346 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078046929 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10683678 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074444338 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087187085 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070292151 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08373752 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071706559 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070088207 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09055293 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074734229 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085969822 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074497943 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092450453 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068351859 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070645439 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093503369 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068417851 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089336006 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066370394 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102009846 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068321397 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084277898 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06637614 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078355576 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088286202 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068073731 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083243465 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074795834 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062448919 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086137141 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070672984 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085710766 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079058432 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089709367 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074834361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093963856 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076613485 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068431821 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088596209 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065293426 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087646606 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067796753 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074435632 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080891057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071175565 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086902565 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06884312 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093492879 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066597575 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069637127 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093657822 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075009238 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084401544 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06685378 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071743183 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086383477 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072428861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09396451 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069929951 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065054408 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082642867 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07338406 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087371997 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073262776 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093090129 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072856497 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064824422 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085285137 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075492706 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096467709 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071119718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068371477 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092877703 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069598382 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085766357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074345143 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088212069 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069120024 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073047728 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086214291 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06465301 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089271323 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072606919 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068666174 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090315848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074094732 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089149396 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072122434 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085781905 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075704175 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070905017 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086027903 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071187997 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086626008 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081249331 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069761434 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080976284 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065959697 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092940859 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06694154 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067795382 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084265105 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070553736 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086588529 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066649054 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069018323 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086735852 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080584006 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091409924 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069961826 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092153463 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081259974 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086398423 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072317782 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070258444 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087624264 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071234669 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095129593 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075853653 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091290967 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07214102 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065203898 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091405825 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076242468 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085411884 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066167754 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067156356 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090331195 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073187504 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090125344 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072278333 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085819749 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070591198 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073191201 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089257716 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071360149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086905935 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076140895 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087649938 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078000891 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071381784 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097769042 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071559075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082497971 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072989483 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083951469 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076195676 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063715601 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084926363 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068805995 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088526722 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069246184 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072764995 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080913088 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077718782 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094694124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069975021 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069342606 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086864673 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07755185 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088212789 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074797002 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072126467 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092995716 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080902616 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085952231 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073458736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097321607 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071735361 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063637532 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092690659 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067006717 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086007634 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067857489 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066948677 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08867603 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077923976 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092665573 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063514682 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087953122 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067951421 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06728848 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081898231 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073453071 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088932595 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069686683 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074066399 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087777729 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069877172 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090487573 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069204968 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068817957 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087446378 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0708277 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086970073 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070962463 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066958316 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088906685 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067792042 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084239329 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070815158 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069014256 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086724864 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074366432 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085676395 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068950546 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088061683 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070396772 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069472508 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086115136 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068414717 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088857021 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069280996 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069350221 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08877722 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064405018 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093064701 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069718304 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075694141 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086127052 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066202429 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091781618 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072199969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073143007 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087316467 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0702181 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087525701 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068852114 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088993091 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075886688 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066819773 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096722072 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075601527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086756941 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071613201 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086445695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069804335 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067273882 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0874685 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070118922 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068374392 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087283983 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073706566 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088486046 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06886076 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069376589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088045446 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068842873 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087288509 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064369563 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067928065 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084860285 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069537169 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095321457 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068946885 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086071966 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068854559 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070445583 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086477033 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067352729 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095334742 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079422971 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087664961 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078242649 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085043511 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070635186 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079175013 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080360273 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067561601 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083593956 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066126567 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07518897 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087160381 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077866184 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086443754 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068546444 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066752943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086776314 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068411059 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062675512 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085682631 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07217018 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085549526 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068379374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069081882 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090157871 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069540039 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095688138 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068614079 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087785809 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069666246 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065664342 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084991894 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068284085 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089560215 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070514156 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06587257 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083776206 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068661795 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069127403 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087660328 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068920744 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08881282 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076056591 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087276446 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073361097 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072817167 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084921802 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072995497 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086770202 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070338227 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068989823 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091328911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074501958 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088593849 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078771329 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086836501 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070911904 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070751244 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086791121 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069911497 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069342154 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088099576 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068929142 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08848455 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078469026 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085481225 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07313284 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070121788 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088808923 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077056704 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088647138 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073217847 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095275327 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070567772 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072084063 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095116877 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074831147 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090464156 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071989321 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070663261 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095049295 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069529801 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093786927 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071454825 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088598404 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072246748 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068484101 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088115681 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071027707 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06921835 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094037512 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070554053 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087672986 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070021528 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084816268 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071317609 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074629685 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09586074 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072971239 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089738903 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066095575 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066654954 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08855406 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068565593 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08925751 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073729902 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07490746 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089788229 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071366027 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087479806 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079457426 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09353816 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073576301 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068318532 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091958551 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072295573 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08992364 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07164254 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070727016 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089672038 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07375052 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088247427 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069080384 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076644337 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090102173 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071495148 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08786956 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070222019 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068065454 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081889511 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069250829 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08880739 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073132045 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069568672 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086838345 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07951238 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083671937 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069328752 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089851992 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069459919 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072980308 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082520338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070009678 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088241161 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071702871 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063732843 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087077016 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068241275 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089035037 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069032718 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065534606 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098263337 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079696338 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090485407 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069841222 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068431307 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083982148 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066290159 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086216874 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072522841 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071810118 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099845214 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069026509 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087285606 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067340033 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068294844 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092045533 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072479472 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085062428 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065500449 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067511464 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090381291 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073583937 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085597092 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06829559 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071501995 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089558349 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066406553 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089492325 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066604687 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089951735 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081320747 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068906624 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088812387 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074764374 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093945213 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069913276 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082530818 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06947547 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071477982 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086634303 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070489298 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088563562 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083599308 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089512134 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067650035 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066919771 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090307104 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067877634 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094551314 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069870875 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069113339 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092088711 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069861686 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096352875 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071923979 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093164096 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071696279 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089725267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068583984 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067871597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084945697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068635652 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08844577 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071339283 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074624227 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096363073 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06913467 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099488362 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079728442 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090689363 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067256909 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068979504 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087291253 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066076325 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089378975 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068712819 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068391384 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087361658 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069719679 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088205646 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076421754 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068929276 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087621253 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069556433 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081159087 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07195058 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070897838 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08721418 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066562846 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06859874 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088231642 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072906162 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090768441 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068911998 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089584491 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072224655 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071261825 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083181372 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076976579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067764889 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090490516 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068617125 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087504629 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069642014 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089963345 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074532183 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069843116 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089277639 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077992826 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090104629 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066737399 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065714481 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092070748 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067452273 seconds)
  done (took 47.626900194 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111323278 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085671607 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065381198 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083104226 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078320095 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08539296 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065510865 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065416951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083228625 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068170445 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081782297 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065083523 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092359335 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088951924 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097238162 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068488356 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084670254 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067219006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083175396 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067287435 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093193329 seconds)
  done (took 2.52892446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07918342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091913777 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078326259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097955321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071637357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093671616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077678383 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093086177 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099945435 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071689725 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098363945 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075193122 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08910511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072207188 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08878903 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073953853 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097708301 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073151567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092438905 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078097426 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092910041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078194928 seconds)
  done (took 2.709721715 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070764374 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069450729 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088490584 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066337682 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068406187 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083865198 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073192651 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085037333 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.082242112 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067474924 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086035558 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067164572 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088636579 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064531669 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068224799 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085077338 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134671275 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074320857 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068787135 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091292924 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065525233 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090087827 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066416302 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065862684 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.088031331 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074508506 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088492473 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068223362 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068978566 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086712473 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070150214 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084607765 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070627828 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069882427 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086037656 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068465212 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068588248 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088714496 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065645483 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085983122 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070374249 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065916605 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088670851 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07078578 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066213645 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085852257 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071934613 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087098637 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065781648 seconds)
  done (took 4.628331707 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088671973 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133708068 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089877806 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092450426 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106657162 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095784613 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072623108 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113084344 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065651492 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086556734 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085230679 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107692497 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089722776 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076124067 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091183141 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070302172 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070159707 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08736732 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07369936 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089126109 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073509594 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09578327 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102662178 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084754878 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092140494 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070031063 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087742225 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075343891 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10142193 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075533911 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093132647 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075888491 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103405717 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072454755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088765529 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.073077242 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105411337 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070549646 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090838116 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068361225 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089798668 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074425854 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095480612 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08680823 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089418331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075860917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089252502 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066746164 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101526153 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072386402 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095670908 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103786168 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074248837 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06873438 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093573797 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101447896 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06899422 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065740285 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090281645 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099327939 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066276615 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071437651 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102044444 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087742616 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075916172 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101709119 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074715901 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090290063 seconds)
  done (took 6.835523974 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078422081 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092520485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08278056 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102569581 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094134516 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076371 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093510094 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075299801 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092512577 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079526366 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093731699 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114139812 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071525514 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096309627 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075400141 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095444483 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075849714 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0954074 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073771526 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094647866 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094465247 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083454807 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092742669 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103347945 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106212098 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088753466 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075762914 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094026568 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08335303 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096632728 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106531652 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076342411 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0952724 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102766521 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088189609 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095130173 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069890025 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093806427 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077521922 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094834463 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072641558 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104217977 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074223939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090135891 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075181093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09475331 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102721558 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087218546 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098111815 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09855779 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075507224 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102422008 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074651028 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095300967 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10255406 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110008627 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103853484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104230891 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07514377 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104024134 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103300359 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110525213 seconds)
  done (took 6.488648495 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090396472 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095683698 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099194723 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064977573 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066669998 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091568372 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06728074 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085453063 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077719604 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095607798 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080307956 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091468301 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075973371 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099946576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091932274 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076057043 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091184124 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072719336 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095363452 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073118787 seconds)
  done (took 2.541191171 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079202853 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105963241 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06972469 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07366968 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091174853 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07502696 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091614995 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071635363 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088203388 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071598258 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097616503 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078936225 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088648334 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074387013 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097219613 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074150876 seconds)
  done (took 2.191128324 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082514869 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097187955 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08278747 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087318602 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066687527 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084964327 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069355914 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063894391 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085249483 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083099109 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088828225 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070924284 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088063364 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067094585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064793389 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091894912 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065778182 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086569484 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069981611 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102751812 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079671267 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086577194 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069588112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06994033 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088556583 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07399219 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089872586 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067347749 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087127964 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070828645 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089115263 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078540181 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086423063 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069180033 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068794123 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087300497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069972999 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088484928 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073368758 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069215093 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087187734 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070760346 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088024173 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071885728 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084107299 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070946587 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064136069 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094153858 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066961558 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088566389 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068401944 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089446871 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070517831 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078420548 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092595136 seconds)
  done (took 5.215813553 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083733355 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071348443 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083675227 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066152861 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090126289 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070171837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07192341 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090191079 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069756843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085299592 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070546083 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090188432 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071086851 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07229958 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089527576 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072146915 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083253139 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07033006 seconds)
  done (took 2.269642693 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077307102 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069727313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094926413 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069950609 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087658995 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072107824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064239471 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086498949 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067395093 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087666871 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069324985 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071537714 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086687318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071156824 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088077188 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069489996 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070974142 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086311955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069609937 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084285063 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072191206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067255317 seconds)
  done (took 2.552840215 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076947208 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095732185 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164985799 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109833768 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085818373 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101759197 seconds)
  done (took 1.504898581 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094958455 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101546442 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069716732 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11007451 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077006732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089427039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071304524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089521416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079237109 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103592899 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0708827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099809618 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098664806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079634943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094345879 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076140204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090305811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070450094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089342227 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11043833 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071404557 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097533736 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070999752 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089479027 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07090539 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098177164 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07950822 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104129558 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089099666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080340902 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096395041 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070279729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099246872 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103655941 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073266065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097756842 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07203304 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10880516 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077198614 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099659818 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071920631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097208339 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098014491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076471666 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098644658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070873419 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095368102 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071162184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091165637 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115032709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07748097 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099325209 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096757205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080387611 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097801931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116971641 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083340844 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098282964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096789369 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085174062 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099227679 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076488199 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099415142 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102995289 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077391166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099434382 seconds)
  done (took 6.760051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089263159 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109026305 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072782901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105825287 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098721778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073747474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090536581 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071593602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090836277 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070238084 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130688901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0713635 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098524746 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098222074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072186051 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09014064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07184303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099103236 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070901838 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11472193 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089566158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078374305 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099225883 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098795708 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084241217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095869731 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070619937 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090160278 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071498883 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090307869 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076107719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091380821 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097332371 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071093275 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097659809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072393388 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090225864 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077195078 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089523982 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076286534 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100158181 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108055787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072023247 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089568953 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085477557 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090721134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070636514 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090770513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070661926 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090103022 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084118366 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10443594 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103271775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097368065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072250752 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090822463 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071400823 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088808088 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072112696 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096285799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079895818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090280244 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11582316 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070924285 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090983281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078886261 seconds)
  done (took 6.648836437 seconds)
done (took 131.532079526 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.224581121 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.209297507 seconds)
  done (took 1.306074902 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072477661 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097250627 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099825125 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129623682 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088648665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10291345 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120981769 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080656274 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068268693 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087504594 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068736545 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090197154 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132881373 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068947371 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087727654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071308117 seconds)
  done (took 2.348027825 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105760061 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.199197762 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110859857 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068050292 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101049028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079962683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086910973 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078325498 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095853653 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06779053 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079911487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097855408 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066945558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09701528 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077073016 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09969748 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066692831 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099570528 seconds)
  done (took 2.560825721 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109227914 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145053937 seconds)
  done (took 1.133340102 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205689988 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123205058 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203042396 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.414076826 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20898497 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283649632 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17281371 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171304178 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154990659 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168200457 seconds)
  done (took 2.980238772 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10448273 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172804085 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316842205 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139116718 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087760453 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116912542 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139897488 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090608069 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103609143 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102495481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082342252 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098764239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100346115 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097327473 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077190885 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098565126 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123125119 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076372919 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097784231 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078706389 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119015903 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069598033 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096165697 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076595631 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079978306 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098671319 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067308591 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088153698 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077662243 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096597913 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080677288 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114678597 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098672775 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132487845 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.084165042 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.133618927 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100434892 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075054127 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096147994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074640603 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098742319 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079337482 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105574748 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097556482 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067616916 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079588734 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08713058 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069468851 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1013233 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079837254 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100471299 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080885725 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.132172178 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098306789 seconds)
  done (took 6.322474544 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.761563979 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112031522 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094611343 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.814033895 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090753373 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107625733 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.713888203 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118515687 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212664999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766414248 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090503849 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100292722 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183794668 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237011438 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878230078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283194551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635469331 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105361122 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109726818 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133463637 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141579304 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17778792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150568987 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434643177 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076612347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094103624 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138632003 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096043368 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141092519 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086454589 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095107464 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15804114 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.22491121 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157092639 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098453675 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070927968 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092106948 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150414896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244987505 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.171935145 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15881228 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069059377 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092253297 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142243486 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134200954 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069783543 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14153138 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173904779 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.150029527 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074733961 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097177137 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145237203 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139420604 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.144299338 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102977471 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269738146 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287581115 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092383638 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100842426 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104925971 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240936033 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08370692 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200632388 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140348527 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168153413 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092624129 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734678695 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146046189 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093912734 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07518261 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11996139 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09620665 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142019248 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14494435 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370525646 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143994325 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073923522 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091439201 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207587644 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10547202 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073040218 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141394692 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097715086 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102502196 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165499254 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145394738 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148248548 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209443643 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140885084 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161897819 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075623804 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125652156 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095135857 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192250678 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.172736584 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140936569 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207902576 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14248743 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144669284 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149643886 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098057188 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151952039 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120428242 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082796597 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138587932 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190963851 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124142179 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083922964 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09621258 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141431092 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126764832 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086681406 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160509862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152965872 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45731076 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146820652 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090328273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088342081 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141524008 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162900511 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076979483 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234525534 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103798643 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16991371 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123011243 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069777378 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120721574 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.142659739 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07802652 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124675448 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160082497 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078676478 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21436599 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.191611522 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078407931 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216336661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162713768 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077115925 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149340274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121629223 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147122724 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099734259 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141146522 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075785902 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776043324 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143813957 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123156282 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074879594 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178605999 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093112979 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085211201 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105760513 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069712692 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753201399 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086667336 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102559451 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105020834 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076473152 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122151858 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138278719 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096243706 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141026004 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183262395 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098056586 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119032891 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084455695 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141080009 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097666567 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1057913 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085666049 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105522953 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122495939 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07610893 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104561397 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147630138 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.143369004 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192923686 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.544660778 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070404486 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105085774 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200670961 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072505637 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263032516 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13959596 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199026687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142626731 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080805549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288177614 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143954566 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.17681534 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106054135 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152496409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070578767 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137529307 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143220614 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092347678 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07728181 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141136311 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165996025 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.145939394 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.945902252 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072526571 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205836305 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068727847 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170512644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078236008 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098084852 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.239207414 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092561443 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148393861 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.144188907 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095031489 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086295219 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67448991 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107374045 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140143609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095998364 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.174029391 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163232648 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13829783 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14038209 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076347378 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139206822 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208401454 seconds)
  done (took 40.685985833 seconds)
done (took 58.215989449 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.264291762 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179490141 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244455537 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145411119 seconds)
  done (took 1.814112076 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146763944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105805131 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118863466 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088408257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104612178 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087788727 seconds)
  done (took 1.554562819 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.418998401 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272661672 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232394849 seconds)
  done (took 1.829627172 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262777695 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217188842 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448074958 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30228831 seconds)
  done (took 2.266693792 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.180345953 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117422137 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069567141 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106842771 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160333828 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.259674146 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133688683 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193744483 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082909492 seconds)
  done (took 2.258515711 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.202289601 seconds)
done (took 10.834516698 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.230285999 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.302537695 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.21414387 seconds)
    (4/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136816625 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.135082612 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073805642 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101654859 seconds)
    (8/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.16808064 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.211037089 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100595019 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.192774825 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078357025 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223829386 seconds)
    (14/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.216608617 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.214212447 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.207793075 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.147954325 seconds)
    (18/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103314086 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.153253378 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.215358597 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.17224421 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081201574 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116648353 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118534603 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111238865 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.183805182 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225213354 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109208076 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107308795 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078882694 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101403991 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053484769 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078651495 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.214669904 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074339887 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.097782653 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075820199 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18352899 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078963344 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093334932 seconds)
    (41/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.141240453 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122142375 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196973453 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.172589803 seconds)
    (45/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072257024 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115834991 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193261374 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074739469 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.119182054 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159612202 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075425486 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115293668 seconds)
    (53/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.149715539 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.176491583 seconds)
    (55/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.19015145 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133821955 seconds)
    (57/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110027807 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160787493 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195686491 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069801319 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.179029001 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075924152 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.096790842 seconds)
    (64/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079272024 seconds)
    (65/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.126699152 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08867774 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075259092 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095646129 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092781358 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137713111 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077237139 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104128952 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202482017 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091395446 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073547023 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099659684 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053671362 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093685473 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.068723455 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.201812098 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140717131 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160010631 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115884101 seconds)
    (84/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113665692 seconds)
    (85/309) benchmarking ("sort", Float32, false)...
    done (took 0.150480196 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084851689 seconds)
    (87/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064986058 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092158006 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147594153 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118390839 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097808188 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076119076 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095176409 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096787577 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067497133 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103648304 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077889512 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.075114835 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076307053 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067748653 seconds)
    (101/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056095977 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090603015 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053286718 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07402716 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116673171 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092940476 seconds)
    (107/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200883223 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094476878 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070036119 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053135704 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.132533473 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.13718461 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.201556542 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070263442 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075360402 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078561789 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05408667 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116561484 seconds)
    (119/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0743165 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171038339 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184349211 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054515809 seconds)
    (123/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157220644 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.116749019 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133821616 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123994055 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090181676 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10380991 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055166582 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063980308 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.160339869 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097647715 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06692655 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073975381 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095905353 seconds)
    (136/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054389755 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192381088 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055288464 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093492769 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097423602 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075476836 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.138231198 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095118658 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166358921 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090026196 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053676109 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093829956 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098111761 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055762679 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054782378 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114125879 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067758913 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097850448 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07726402 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075631193 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194009201 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076787712 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123014644 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.132628868 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076440679 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068787825 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.075991739 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054745436 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069929243 seconds)
    (165/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.076283984 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08007374 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101578895 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176147918 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090591097 seconds)
    (170/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101479456 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069137929 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0775889 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071933915 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067238622 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091231404 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063772429 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109046512 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074498169 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067904199 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096222279 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.147951235 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091577957 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182917328 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079341876 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074863904 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121557544 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068614909 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076760403 seconds)
    (189/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054378508 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077621888 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122936364 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053778013 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098268024 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073913962 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147222001 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067629238 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075594686 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089798816 seconds)
    (199/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211386634 seconds)
    (200/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068648388 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099110242 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 0.166149011 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053583074 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073394061 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.305649782 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078457864 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07422981 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07754249 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06823736 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076231914 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096602954 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072754153 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158689061 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107372277 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102774614 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077129611 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172397484 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054442971 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192935013 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074749383 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145952477 seconds)
    (222/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071350835 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064313352 seconds)
    (224/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.129359276 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159392914 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053721494 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156971721 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066389033 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053703101 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088899279 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093405149 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.172524323 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175296255 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08002659 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067630349 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161270389 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164748851 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067987102 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071123485 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09152954 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053360054 seconds)
    (242/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074569928 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141537467 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067158405 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088850666 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053127065 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053126068 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074455798 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055377263 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.101422827 seconds)
    (251/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079502596 seconds)
    (252/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082002601 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089707196 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067337971 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067616466 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076500567 seconds)
    (257/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077895783 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070957538 seconds)
    (259/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080247941 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07497748 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066573839 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.075574367 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074559097 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052615464 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074408686 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076126968 seconds)
    (267/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054156014 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 0.148446689 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068327418 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107009222 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064237404 seconds)
    (272/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054141642 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10369956 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071255588 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074914088 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.084104884 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147693805 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112110545 seconds)
    (279/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054331977 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097696445 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093451233 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089458526 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115263983 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067211634 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089505241 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054215183 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113782059 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076002753 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068800887 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116989672 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067568462 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090919113 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053107253 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0688223 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096477337 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069553852 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053494812 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.076058712 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053042373 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053525562 seconds)
    (301/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053319081 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099144816 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089224676 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091945968 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105454906 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077447496 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067490635 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093428713 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079709719 seconds)
  done (took 33.61232611 seconds)
done (took 34.531371995 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085229087 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119434123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079369741 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119778017 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085799653 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103002786 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076883987 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080105007 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.107791373 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084676493 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103203924 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057075478 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098500679 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077871651 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098498021 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094851837 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102577671 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075434401 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076312762 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089088382 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076257441 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090189518 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070873825 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057422502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102417157 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075078463 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074335302 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099130051 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067500795 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08981833 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07193871 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074789611 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089486084 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08152018 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095984494 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076541681 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07731167 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101466411 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070627487 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089140988 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075228245 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067402497 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09610601 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075236414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074047622 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094959621 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075643864 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102975595 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093231283 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091842251 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075726217 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10064586 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079493336 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074687709 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094310066 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076236535 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095046424 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094202427 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098083826 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069250833 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075025534 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099577989 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073317049 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098619855 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076196793 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077208258 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100295742 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073154374 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099564081 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073136731 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067300794 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097911331 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071179617 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067410939 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100683486 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078542044 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088912723 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07483656 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074696171 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095544215 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06759354 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090775967 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07058232 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074264032 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091366874 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056979783 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071566156 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095566858 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06726041 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0761436 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095499748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074420949 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090954371 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079268062 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068893546 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09530004 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068601158 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067634201 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092967476 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072148405 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066707867 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092239329 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077518217 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09148881 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074370405 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081371113 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090160577 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074162067 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088630218 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067639597 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085235524 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100071624 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068482259 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091951157 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067165475 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074943133 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089586516 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067499276 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067612348 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089761015 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07388412 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067586152 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091656128 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076005084 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102679619 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067756357 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07165355 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092619818 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069137226 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073021518 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089929808 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068949513 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091595938 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065097732 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070123676 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089644065 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075899253 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070114397 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098415981 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070482 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098286668 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072989707 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073825251 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095255202 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067466776 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061234424 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0933149 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069866556 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070208121 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091042663 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069834968 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068137967 seconds)
done (took 13.467517562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069829963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175493084 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130302276 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098289598 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111924043 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068525055 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102205659 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106675276 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092304175 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129596227 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090045945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109451324 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117053244 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090210729 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067827275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071806724 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093004803 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090852743 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127561764 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088229871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140824214 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090570367 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122632213 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092493288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114305645 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096829506 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091376252 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072461032 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071879914 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126876596 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110346581 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071985788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068140554 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126007714 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119504547 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088624367 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090873417 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087644788 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091455131 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067916432 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117485275 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101751724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108121189 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084223768 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098817228 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0711215 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092256239 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090435149 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117777614 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085033044 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1163322 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140193029 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073537178 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109897946 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067592089 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113589115 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106754361 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071546073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068877351 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09300992 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068261042 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071828669 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114168023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117965857 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072289264 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107526746 seconds)
  done (took 7.416483573 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088335179 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120785288 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087093309 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109340149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068339188 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068996087 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092367535 seconds)
  done (took 1.607248342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070682511 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093509073 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116676692 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09116888 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111344075 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088832897 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101866961 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070114995 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109920819 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070194237 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089944265 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129675062 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070157638 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099200924 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092476554 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092244987 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092817019 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09174876 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072699311 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116491396 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07241537 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113671626 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070714614 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069488966 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106220671 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069094252 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140191116 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074023616 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094354339 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072633404 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068736661 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142659376 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106292265 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080220899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069308626 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106257178 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084750605 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089820664 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085463414 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097318039 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083529793 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071053506 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093866885 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068159914 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07330872 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103017 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070776474 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09265616 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072460884 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089819088 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092173651 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083499726 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092938325 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073801453 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071076322 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098801365 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079276631 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0928608 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089822622 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070627065 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110115423 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085045487 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106954688 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085810084 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095872215 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083178656 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107292691 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071770644 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070609554 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09661942 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086219131 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090114351 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070974174 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080455711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094026844 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09334868 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114524203 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071065749 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10322723 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069748389 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070027462 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092245094 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092946125 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095991822 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06947004 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073126192 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095436921 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06723389 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068250238 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096731771 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068336172 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093224731 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073280201 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070126672 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094336208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085784051 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070011151 seconds)
  done (took 9.489091133 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072404494 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071352865 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094693239 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069506378 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069657564 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092521661 seconds)
  done (took 1.459295641 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103187382 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09745272 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086006884 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099265114 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108021556 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107147546 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085062748 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107734768 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087639098 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104478279 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085440458 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108213362 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090667712 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098637163 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084290142 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097918346 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085338861 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101465169 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081701786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099245108 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090009696 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098129482 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076131861 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108123823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074066917 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074910433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102177232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082160646 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104240323 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085055235 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098733387 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073448114 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096600069 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085553192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107564208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074474087 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097936452 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074224351 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102574847 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07329945 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109166704 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076533499 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081321413 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098356683 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108697462 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073986935 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073725116 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102667117 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083726041 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098314226 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074283595 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097877859 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073486316 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097585752 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074747086 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107818707 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073896561 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108687184 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076095212 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075117103 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095957229 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073597821 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107297409 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072769841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10650464 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073503757 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097731506 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075848467 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099870958 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076131276 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073909652 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095185795 seconds)
  done (took 7.499223102 seconds)
done (took 28.442566352 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.6529773 seconds)
  done (took 1.634532475 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.779197415 seconds)
  done (took 1.763154702 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.773481745 seconds)
  done (took 15.764784124 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622383371 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.760496914 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.815128018 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136633308 seconds)
  done (took 3.318925431 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.892313223 seconds)
  done (took 1.903223403 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240448211 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225798508 seconds)
  done (took 1.457764581 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735960442 seconds)
  done (took 1.734025464 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.295896696 seconds)
  done (took 2.286806933 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327659106 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18313883 seconds)
  done (took 1.511561717 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52725189 seconds)
  done (took 1.526412229 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.597745371 seconds)
  done (took 7.602444566 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235211675 seconds)
  done (took 1.247714895 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275928909 seconds)
  done (took 1.277791835 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.138580599 seconds)
  done (took 4.143733377 seconds)
done (took 48.165372528 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083447461 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08388805 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10636031 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080848523 seconds)
  done (took 1.352640005 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082320989 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075937532 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10255142 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074980385 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102721855 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076235705 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100799613 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079787981 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074856282 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100428893 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075957845 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097528577 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078044191 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101080345 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073117776 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078553187 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101811118 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075172853 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101142506 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076325832 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072921447 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100977947 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078172659 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097516917 seconds)
  done (took 3.088978236 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081782601 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075722889 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099388429 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074964705 seconds)
  done (took 1.337709811 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082151221 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117806606 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091920693 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079439393 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118455044 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112129649 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072333371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07277239 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097841607 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079937406 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093497804 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100565511 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112848054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080260307 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104533564 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068508635 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07149906 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112462616 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08014063 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103452533 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073527483 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082778472 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093595675 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093484197 seconds)
  done (took 3.207463294 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081687085 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129450726 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081102414 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116387427 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093140994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091761246 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07809512 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.116972545 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127013352 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091266087 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073142795 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067847959 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098673593 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067958558 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077686834 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135045846 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.137325098 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070996267 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123404609 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068243922 seconds)
  done (took 2.942399576 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078873378 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072498585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09057703 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070742614 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078678853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0978406 seconds)
  done (took 1.505054197 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071890138 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069840798 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092037315 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068240881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073169052 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092027018 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068385973 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068630237 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092492958 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069349624 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068793108 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090861982 seconds)
  done (took 1.936879685 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.391035473 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093648696 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07094172 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08917201 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07262394 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092523505 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082457779 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069471971 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11674791 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068953314 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092410364 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070928405 seconds)
  done (took 2.327213127 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265060379 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079211184 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326611516 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170214659 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143685841 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15719514 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107358815 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142439878 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19979562 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139913688 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204070474 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22784065 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135932278 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17003918 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117146441 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13490321 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188942836 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223581693 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132365469 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201030521 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209968554 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158449396 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181447886 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129925479 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136146846 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152077565 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074418555 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1071409 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234014682 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162164846 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204514974 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140487127 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099734919 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233508876 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228816252 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196955818 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16467017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086761799 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15920191 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16641531 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259449968 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11648205 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197075753 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13537347 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107315236 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174149681 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148812862 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149837207 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137294082 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11639757 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177076665 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240604339 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168788512 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113592944 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138987271 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145001034 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145785686 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106068234 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271413028 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197913043 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161909429 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097914273 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126345253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18978601 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160914438 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142921702 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155940127 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120840499 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168914599 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213839013 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147614193 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175535922 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181656392 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091699528 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149174976 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196653421 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159322027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229526774 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156701874 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075275675 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155495954 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130919496 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109365964 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147170277 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102767493 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209997708 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127029416 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140640078 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142273704 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136623432 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139264596 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198418711 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20526184 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131594638 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069259922 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132717566 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15230051 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177577856 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116591221 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13700023 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150575961 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106145481 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168871159 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078377986 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154414433 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105602828 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153962011 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165321277 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103852684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159164892 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105411003 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130382022 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166082299 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221934567 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117402522 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0856748 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230232125 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158277529 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133774751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177876175 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215095396 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104255721 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132049993 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207456506 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24471002 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092422501 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225129277 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137343169 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111511892 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090540562 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158168529 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141552442 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151551334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110714288 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156557856 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228837926 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078290654 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123186741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169894083 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108855869 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084817484 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141761747 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129783224 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123641097 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104590437 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135750937 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198319734 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155663077 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135494053 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15692768 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12717499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20264778 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116329178 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13311985 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132935079 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072474903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16703759 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220023206 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08163231 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227977248 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156232205 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13359013 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151394726 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08635898 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19692115 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081711446 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097931193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176768076 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140946649 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138659272 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186018521 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132556739 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157574759 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154555755 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190771241 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164117555 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163662571 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135348541 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09032481 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141795934 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179136903 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075747499 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123294181 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086676349 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133145899 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125447073 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086380433 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200513821 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158216811 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128193673 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142318447 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100189879 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206393476 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080169623 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161214768 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17337171 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098808237 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212652502 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187200932 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192200244 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104352142 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202713388 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074479371 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101654705 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095611374 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18377695 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087092189 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111161598 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147559084 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182070517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159404268 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195342311 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11583685 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15087192 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215144587 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073589173 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145980918 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181059776 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180216724 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.133321925 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115215548 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103125144 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203153117 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138803068 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249445035 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145510718 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154750891 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184652483 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13231938 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108196089 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109211838 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193663359 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134780454 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182515509 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129567757 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117115664 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139757093 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084012432 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132465952 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157195241 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150059955 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189997915 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147232525 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162583612 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079940551 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170961676 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153887003 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151573772 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066583902 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151047206 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223236472 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123300735 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148566438 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187401717 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107331158 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155231236 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240672687 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176415593 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112482052 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138919323 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156646647 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159483216 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149272006 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172689429 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139704814 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16582894 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140473976 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113361392 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091223019 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126766116 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135553152 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098284232 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.16659379 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146986146 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097615907 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16204605 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140203461 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139200704 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148871552 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126173171 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09318536 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125480013 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235929705 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153628304 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236387334 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12929017 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181879382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22940358 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077696682 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106814371 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108970562 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171511277 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087035841 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191817671 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100716037 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134595704 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157161913 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173487846 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124099702 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071480444 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139508552 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19084897 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114898105 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126400411 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134772365 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223995409 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106517993 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107888952 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155274973 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131996918 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106618962 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235529997 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089414833 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100894957 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103897669 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084121475 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159022053 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213486381 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110761136 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.133207813 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144462384 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176341114 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160875297 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130594996 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102816631 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144254141 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207310679 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158218867 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093027542 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142963029 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185968097 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190075927 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134674619 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123451636 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232805703 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18828104 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224067494 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118246826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145489202 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120971598 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138608351 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197670149 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086141201 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228311763 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111281392 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16810356 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135161208 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12193335 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160155607 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127403353 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108647074 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208235253 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150199115 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109316468 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083265259 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148152224 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152653743 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135967454 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103653469 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170891244 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074651406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194209457 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204047609 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109178587 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134481525 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099814797 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110527395 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138280981 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133354181 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114339134 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121940002 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231613595 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118653767 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184010702 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199487659 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145249654 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168755524 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129657393 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665575166 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080939853 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214767418 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15091848 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239996589 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127024782 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149769306 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139748597 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153705744 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176919665 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134006341 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206861227 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163164179 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15029044 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108413637 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132343522 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140236115 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095145841 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136413532 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145096939 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14582108 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130958544 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151632383 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157117059 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110785685 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098807962 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218434022 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147246252 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173799614 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199298981 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087728543 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149304493 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198079705 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083188617 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179114215 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190812408 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137895113 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128097572 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085216407 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135042919 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23372512 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101902691 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197065527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155401029 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140542084 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14371382 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.173702956 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166033278 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138649628 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157440785 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125140361 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143588318 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147117674 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087601077 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10747521 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136052974 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142171239 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102914654 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131913965 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145668967 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186559061 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099486585 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100023188 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133054503 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176845851 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238284894 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118129396 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112141499 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15042183 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143408499 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148207508 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156819465 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084836246 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11180305 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111892953 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115430055 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13893175 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143984714 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134127093 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140679833 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203538618 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114241435 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255842758 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098301367 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136531487 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071615655 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109241172 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125011336 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1009388 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137162366 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129339124 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234013597 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125615265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093896273 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122004945 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076331822 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112677115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161763226 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140033429 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153233175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126459248 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065711963 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141418632 seconds)
  done (took 72.278996874 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13679775 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104815996 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118638064 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173733709 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146843463 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238328968 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182672541 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224342381 seconds)
  done (took 2.420371654 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071855848 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118051819 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103788327 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118204117 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09054194 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070135617 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295594114 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111020923 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068093972 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116028322 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120069455 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092460866 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46948783 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067624747 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095578868 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085540927 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069039553 seconds)
  done (took 3.247579275 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428213687 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630946214 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453820931 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075185189 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.867127813 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10804411 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.381067827 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162988267 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091541354 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.431532913 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.721838267 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149012202 seconds)
  done (took 17.597372136 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078793642 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070832339 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11080132 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085371041 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100215663 seconds)
  done (took 1.545287594 seconds)
done (took 115.787098048 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08405701 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34507205 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05476955 seconds)
  done (took 1.532932857 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086319118 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085636087 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110942817 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083930656 seconds)
  done (took 1.472723871 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079503144 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078469295 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11198906 seconds)
  done (took 1.373323182 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279325021 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16687732 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089114291 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086213329 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079921163 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10553706 seconds)
  done (took 1.377403502 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076147731 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077446985 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101228525 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07915232 seconds)
  done (took 1.43179092 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078634757 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053926679 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056832361 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083589162 seconds)
  done (took 1.378270284 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093702895 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107090301 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082649698 seconds)
  done (took 1.385359664 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110595547 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113617988 seconds)
  done (took 1.331279646 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084306094 seconds)
  done (took 1.183568253 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098238581 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140187215 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158040147 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138316976 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166608144 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138525419 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113979299 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090004219 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104575637 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.11620451 seconds)
  done (took 2.370119568 seconds)
done (took 16.551427121 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081454934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.482358741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361689501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118130371 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669174597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358813231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004621303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120584087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121887622 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09561281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084856041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675473663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969101744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439001653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957367835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323714555 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675868744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069600558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09492782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069140617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965542093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094599567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069056879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069906059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674543446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372253687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096054376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322432362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069333556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097202677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356715463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096618862 seconds)
  done (took 16.152791763 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073454914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145493597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076203819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085951149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098625558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071142054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.09950509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071205875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153743083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06921163 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112655894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069909825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100041882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070049981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088880706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095887948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0703207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069844841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096335932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07018157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113992024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069516235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069702784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095425091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070041323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107209199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070205737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069304107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095415461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071104681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098749374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070404102 seconds)
  done (took 3.895726385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118819248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153986402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075619501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129844076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115036048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098190082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171986253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094855229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156913869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069923572 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113425354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069973238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128567283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070974281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11543181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069904948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070463945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096766043 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069442564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095888629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089187516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094659567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06961064 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070074867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097414328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082976272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095073022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070250226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06998427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097741485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072485477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096030684 seconds)
  done (took 4.206243351 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076471357 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076704488 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110530747 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085767799 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097884142 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073631192 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075067119 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097752676 seconds)
  done (took 1.803053483 seconds)
done (took 27.158748984 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082578177 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071986206 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101086725 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083614232 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100645816 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080612772 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069950759 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103014142 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078728242 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074978106 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.1053259 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070055066 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099003982 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070540621 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07629944 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095609443 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081266938 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100318322 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081018476 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080863601 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098341066 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079756501 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102398433 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081786896 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107847082 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082248161 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08417843 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102349487 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072001132 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098111176 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078991502 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112079513 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070484719 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081448223 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096661675 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071040325 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069854893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095457023 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081497917 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102115028 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073421747 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102108017 seconds)
  done (took 4.754410578 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092176128 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092698822 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112997431 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066783267 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098493025 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066630143 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117265635 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064943034 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061099671 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117411234 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057337887 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060827479 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090743511 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056197916 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060631003 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058284189 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090018219 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058491015 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060809333 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087617162 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059643123 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056431863 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088792731 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065446353 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058497979 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.089177249 seconds)
  done (took 3.103972526 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080160527 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085165202 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116165313 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131085257 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134333276 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078611979 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106696901 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089481342 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114484183 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069689836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072907201 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125874001 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089533997 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103265078 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069243635 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116433671 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083938431 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070993228 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101922672 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092128419 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112691488 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07954122 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120538637 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082061577 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069413963 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099246408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074033132 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.10925404 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075323466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079065255 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100836488 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07334425 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097665484 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080930779 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073512305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098636482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092682338 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105423916 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080659694 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069551849 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099963516 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070596999 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116651856 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115557844 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096161429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078009119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112723559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078345399 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070978947 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114980337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078923353 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09557156 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072875246 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068821221 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096462264 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083759619 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072209608 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098958891 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079158382 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099184478 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082030758 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073077344 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112216294 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068803169 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103975912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069095245 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070623193 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094518147 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092470981 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097122576 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110665289 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098045425 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070731479 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07864402 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103085086 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074732171 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096760726 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084568152 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079375737 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099388219 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077809041 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099623106 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072058788 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089071505 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098491899 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071525928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070745302 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.1020338 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071760654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097531112 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082094501 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070303661 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098231473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08634964 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095487337 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071118478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075490043 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100997715 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068901157 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108144544 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075463844 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096166766 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078550566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068729317 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099121705 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079038081 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100892955 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068950876 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074715426 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102466342 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070133098 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07008519 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099382904 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070886677 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10584331 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07561073 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074239754 seconds)
  done (took 11.503960795 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.195996955 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.188383549 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071852846 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18024774 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07811247 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109260807 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18281586 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098156109 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097786744 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070414916 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070445439 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.13230162 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125824191 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108591594 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106553235 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070016818 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116240423 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107313811 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184645057 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178822579 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117887604 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077761972 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071104641 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098813791 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071889745 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078417926 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114021624 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078315214 seconds)
  done (took 4.317631242 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08499842 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130332476 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075435327 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089773704 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120384005 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070555137 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102888895 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07095348 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109267896 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081733795 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096537577 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075361805 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076293972 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107835512 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070136607 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106482864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079810027 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071386643 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100127966 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075576203 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10594427 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081933112 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100681263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068597238 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076483535 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096240271 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067813213 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115324153 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070432303 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11910353 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068014441 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07641126 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110336619 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071677727 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097340934 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073558266 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073429764 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100593779 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071490189 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06801837 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096064541 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06061014 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068258547 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109239782 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076131628 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08837376 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074892358 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075776773 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102262868 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067557253 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099521686 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072992119 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072393046 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105500017 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074946556 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074934045 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100562577 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067475837 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104224102 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073407439 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065772552 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095125663 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074461988 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068299907 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104612473 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074575794 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09582427 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072575268 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074753119 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103258867 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073346115 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071612253 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094608556 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071525956 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.10133658 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075118547 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074249902 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096130936 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069356524 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070253474 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084823761 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069699606 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056419125 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10035303 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068962595 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068295621 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100177568 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07538047 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110290807 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071569881 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103506089 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070608664 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068697822 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099451535 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065417152 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072412266 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11346105 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113498641 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069610676 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068500923 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111893376 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074326474 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068507556 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08606008 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076805289 seconds)
  done (took 10.01200713 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100465771 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094482713 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098867919 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085443556 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124995189 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09538964 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104884455 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076855647 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071107141 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113954087 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070048388 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105242817 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070140522 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078666599 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126013739 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078703575 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099007427 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079078086 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074180619 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136614563 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084908842 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111074598 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081709743 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097350618 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073992158 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081713393 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125476411 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081262996 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108456251 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086514169 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080750741 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125046317 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087595925 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100885526 seconds)
  done (took 4.357614602 seconds)
done (took 39.159496452 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.200058463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.402583585 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18727825 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.055773044 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.234925081 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.194453742 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197916233 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.190695563 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.332274657 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188906991 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467789025 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.78472835 seconds)
done (took 58.575554166 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.209855147 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.33904444 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461911577 seconds)
  done (took 3.934934688 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.612882104 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.087204416 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445917556 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191623914 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.19569529 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.477321 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.783193794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.005238083 seconds)
  done (took 27.319979582 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196379859 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.548242742 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.496734497 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.510357967 seconds)
  done (took 17.88584432 seconds)
done (took 59.097977715 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.177768576 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.235546215 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.228566295 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.174689282 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29643957 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.2202279 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.511601932 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.212011176 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.188895797 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177074759 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.212514989 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190146702 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204304306 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.543472416 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.202894798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.19215171 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.278080105 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.724061446 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.569722258 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203076662 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.199905933 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.202433278 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.207584098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205367492 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.204730932 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.189777226 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188003598 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209528976 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.353082171 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.193852915 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.275983647 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.702087213 seconds)
  done (took 190.009762277 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192037351 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.325704135 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.40643483 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.22234138 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.83038474 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383242716 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.325213296 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.878333515 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.199242709 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.213876495 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.520870969 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.185112952 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.581087786 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.187734335 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196792858 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.30056051 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.512712189 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541876945 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.198452063 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.460167984 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.216977178 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.541292844 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.484007059 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.436528353 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.215777182 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.20010128 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.199075634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.22543163 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.378772616 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.464079339 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.186125941 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.227661424 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.73547231 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.046503654 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.211690077 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.21019446 seconds)
  done (took 150.77437903 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.446163145 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188771975 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188199357 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189078055 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218125492 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.188204406 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.69663459 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.697494329 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.690397851 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.352009471 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.247872984 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.407628931 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189553975 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280563013 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200346199 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.187496515 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204411904 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.214383474 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187024198 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190009691 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.695876217 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.202880143 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.21463171 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196267881 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189932016 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218377929 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.583505743 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187165266 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218970028 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.502432052 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.229638983 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186454373 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.466099156 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.032570677 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297553756 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188466499 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219739187 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189888689 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.457404537 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187578092 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189991653 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.192240044 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.193189451 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.749309023 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.191118642 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.698924765 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191900381 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.082389319 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191497262 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191936579 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.732170607 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.61118457 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191446205 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191286611 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194015056 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190501458 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191357856 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220449979 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.638904834 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286512401 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.191382717 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194944113 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220159308 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19195392 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.358209742 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191297012 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.313346362 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.247825364 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.301642022 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.699377379 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191905412 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283401892 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306363192 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189219487 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.192285063 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191295664 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191475526 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.296459571 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189500151 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192883646 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.572089314 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189424038 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197668742 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.1933354 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249469197 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284149063 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188795724 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.473172667 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193487845 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19283918 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917609034 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283956153 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189315494 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.192830369 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192392603 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193420316 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.574355295 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.700116181 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.352336397 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195327673 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.668349937 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190867585 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.58687762 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.681132458 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.78802839 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195134485 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299626521 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194500782 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195722522 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194582215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224443922 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.196720723 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254393666 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19429959 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.58827736 seconds)
  done (took 343.957663193 seconds)
done (took 687.322778543 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.877858004 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85653199 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.963844742 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.853260364 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.840087095 seconds)
  done (took 10.52699653 seconds)
done (took 11.663106854 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.367199803 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.364623935 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24641472 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.366731448 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219210797 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.385300004 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.346424477 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.210747934 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.288327089 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.262137507 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.289256009 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237872319 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221312203 seconds)
  done (took 17.941287789 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498224508 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.493830611 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257012827 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497303745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233179433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.49871853 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387216962 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395959546 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.378443823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207578524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209535184 seconds)
  done (took 16.195862764 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.499579678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491701724 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259091594 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497492346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235011617 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524502013 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387322043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392909058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381986967 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207975041 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20958443 seconds)
  done (took 16.224821176 seconds)
done (took 51.499614628 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.205028684 seconds)
  done (took 2.343091891 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237043493 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.395709478 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218141395 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209461501 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204220183 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206775976 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210024822 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204618371 seconds)
  done (took 11.02566506 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202226687 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.205551467 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205204331 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.205001321 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.201989751 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.201755322 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20586915 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.202064261 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205635753 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206294233 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204845325 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.205944374 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204200683 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205607257 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.204358955 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204448949 seconds)
  done (took 20.410953273 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204771003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.203919231 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20396629 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20436379 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203322875 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.204227757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.205534423 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204398278 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203358444 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204282624 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.203961459 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.203280317 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204228927 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203807649 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.204860469 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204109546 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204406152 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204414165 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207885118 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205316496 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204943142 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203931043 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205677715 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204609689 seconds)
  done (took 30.049442328 seconds)
done (took 64.967621914 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.259974375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.746319458 seconds)
  done (took 9.146493016 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.207371173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.20703471 seconds)
  done (took 3.555430976 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.207294455 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20589811 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.20769518 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207063267 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207161698 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206881433 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206726377 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207264463 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207060628 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207363341 seconds)
  done (took 13.211529929 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207960879 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.208372862 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205190143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209299913 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207228356 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205641183 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.208219088 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209044306 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.208506893 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206057829 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.209064593 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206272953 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207472014 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207540097 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.207974688 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206864884 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205413191 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206401284 seconds)
  done (took 22.874641852 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208740503 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209247676 seconds)
  done (took 3.560157457 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.206806468 seconds)
    (2/7) benchmarking "second"...
    done (took 1.206149407 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205963549 seconds)
    (4/7) benchmarking "year"...
    done (took 1.206504451 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.205529036 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207255651 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206387593 seconds)
  done (took 9.587424054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209815091 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384155475 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.466663878 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.777095725 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211312491 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213515545 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.003436952 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213892295 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215918837 seconds)
  done (took 13.838649518 seconds)
done (took 76.915837 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.184075371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.197280903 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.006910546 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.218231692 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.213026806 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.544389923 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.23120366 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.320432547 seconds)
done (took 37.060630674 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212703002 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.923997406 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.930130106 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.204257403 seconds)
  done (took 11.202520422 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.18942206 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.07133693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.188010413 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.201203163 seconds)
  done (took 17.79581829 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.786040516 seconds)
    (2/2) benchmarking "read"...
    done (took 1.530310486 seconds)
  done (took 4.460728866 seconds)
done (took 40.815536911 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211453783 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211757916 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209397406 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.210094566 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209561722 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.209286878 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209104166 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.211114986 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211962488 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.211547363 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.210743504 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211872481 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208875256 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208961661 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211881052 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208504079 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208812569 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209052031 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208767344 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212374506 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212237799 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.2088849 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210889326 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211964078 seconds)
  done (took 30.193493759 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211973063 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209569085 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212152243 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211755148 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208937338 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212278073 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212610559 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210958818 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211612997 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212175722 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210951145 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210445785 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212396168 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209648383 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212184425 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209754413 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212530349 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210163394 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212637517 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209670993 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212756036 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211096994 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210101394 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213426596 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210089961 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209397709 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212430364 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211460234 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213013396 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21083814 seconds)
  done (took 37.485520852 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21860215 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221040999 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214276358 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214190063 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2132203 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212748915 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213927207 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.214649818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213859088 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213485736 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213745926 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213805319 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215233977 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213308474 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214280972 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213985759 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214592979 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214463718 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214982322 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214069925 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213559764 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214357882 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214545811 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214313825 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216034543 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215352795 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215766134 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216221546 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215313803 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214988307 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214817886 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21507058 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215422321 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216097923 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216016994 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212847646 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.219859033 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.223717549 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215307702 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.215703646 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21559349 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216197455 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215744317 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217351939 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216497824 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215232187 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216050168 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216054048 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214569398 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215313572 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216362018 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216668897 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215613421 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215331287 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215816314 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215812691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215818845 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215534074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216196462 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.215187734 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215982159 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215769041 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21561838 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21719844 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.217162031 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216208794 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216995054 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215959605 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216431978 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216691249 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215530637 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216928848 seconds)
  done (took 88.670413947 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216716641 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215096335 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213793215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214984372 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215306338 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216962233 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214833308 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217125687 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214728813 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216802759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217573143 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215576299 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215847033 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217244856 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218455562 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215159805 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2177625 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215153356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216159007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219539978 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217699975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215222986 seconds)
  done (took 27.908502613 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218929877 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218133846 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216274656 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.219137469 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214867979 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219809353 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219680637 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217905983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219882952 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218240442 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21758802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218926579 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215725965 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215985276 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21678069 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215922426 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218983747 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216999743 seconds)
  done (took 23.071330632 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216335831 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21556242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218949779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216703535 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216570798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219701481 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217565631 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220344012 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219878824 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216569805 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.219338452 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219865193 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219079511 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21715131 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218649267 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21765556 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221358333 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216671506 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221119609 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217089279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21665058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219866543 seconds)
  done (took 27.956109122 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219289287 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220865607 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217901125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21812811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217667661 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221384819 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220274874 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21782308 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220591349 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221538781 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218143976 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219107221 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218441493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218678772 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.21794162 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217555066 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220983511 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218090683 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22109161 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218027604 seconds)
  done (took 25.53700214 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221095393 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221747405 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223013804 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222748741 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221680411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221930825 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220894371 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222590171 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222082496 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221962174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222438559 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220800218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222460022 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222090248 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221985002 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223016455 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222878889 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22216688 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222321327 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223120755 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222862063 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2233149 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222898009 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223063766 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223661938 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223056389 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222737101 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222708568 seconds)
  done (took 35.381846755 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22212953 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22197716 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219661988 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220285571 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221278064 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221206809 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220614565 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220189431 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224122721 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220427069 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222838769 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223666229 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223318623 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223697224 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222558272 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223534608 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224908894 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222177305 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222027957 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221643871 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.223407843 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223917652 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223867593 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222854589 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221557394 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224832693 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220782949 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221826788 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224676939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222083876 seconds)
  done (took 37.829456528 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242504755 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242386838 seconds)
  done (took 3.641889504 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221742716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224828341 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223817668 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222419573 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222706542 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223996019 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224958043 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222436453 seconds)
  done (took 10.945619869 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223871629 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.22536267 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22416576 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223704433 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225197629 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225748206 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234087705 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24004156 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224806927 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225492207 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231195337 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23352166 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230549704 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225872841 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225154662 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227765899 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225206413 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226297544 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225892819 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225964036 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226311227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22890192 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227788069 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222765611 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226343506 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239424554 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.232172507 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.225840338 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225827769 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.231599151 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225358542 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223196682 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225368447 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226578522 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226965774 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225521111 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237351242 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239365647 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235811946 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22485047 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224101936 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224129271 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228779507 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228993775 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228514796 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226903522 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227273083 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223942894 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226791254 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.229081518 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233685328 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226461448 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22512041 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233954461 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227728559 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235297092 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.241187438 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.229871162 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237324298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241697774 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.241387697 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.236808896 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230214969 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227989785 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237378758 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253970411 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237567499 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.23940733 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225318113 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.228112222 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.237962517 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240900373 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.238543387 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227430383 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227929116 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227793991 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228831172 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228825895 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238262492 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.246644893 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228649162 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228293386 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23863849 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25143318 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.226866813 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229447608 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229547048 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.227893036 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229742043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242252541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.244015317 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230612016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228273662 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229614032 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233109474 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228385526 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229132727 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230901913 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228737406 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230648064 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231063764 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233816205 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239668431 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228714709 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230154226 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.237301268 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.229391768 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228179492 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240724931 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231032118 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229818559 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230628374 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238771743 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228429015 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233775626 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240507564 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230959524 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.232938953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.230180206 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.232622795 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241061627 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.260573013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.231306019 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232129042 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23603658 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243498005 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231258644 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.235905007 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.232194501 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.229543583 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230115716 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233463249 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.232051122 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233532391 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231459901 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234972185 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.229701832 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.23268084 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.231992719 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.232608607 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235059545 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232539558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234194557 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235770846 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232187378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234379981 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.239673278 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232808267 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.233286297 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23420572 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.230599675 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234370372 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234792862 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232855387 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.234258924 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23206661 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23276046 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2329152 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233391443 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.233800016 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23307338 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.233336722 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23676256 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233454521 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2385403 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231577503 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.23062474 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.234509647 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.234746257 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.232793301 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234507405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.232879366 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236183262 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241131205 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233834884 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23466392 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.237391914 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233637234 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23435034 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234533331 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.236752569 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244175279 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.234559786 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244158176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.234127345 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23458624 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.235588266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235378683 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233445486 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234618265 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237396086 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.243186964 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248747663 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24643082 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.236186937 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.239378915 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236852296 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.239201463 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.242187821 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.234619947 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235746722 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2355122 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23311687 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235881703 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.237514193 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234573685 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.235698315 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236545901 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236723923 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235971474 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237219166 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237293797 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237106863 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.234804734 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237140928 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235556592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235192213 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.233183416 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.234944274 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235516207 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.23658943 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237074395 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248395728 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236144546 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239711144 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238988696 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238483637 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.237280092 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238177858 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240823815 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237643073 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245689907 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.252589319 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239376271 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246937778 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252572819 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237048414 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.240892784 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.239108243 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2355006 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240642375 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24747104 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.238778214 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238296845 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.238786592 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237998741 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238993436 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246727567 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.235686513 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236777064 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.239860327 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241669588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.235794705 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.239614569 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.238820517 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.238467052 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241951942 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238691707 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239387901 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240654779 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.237930596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.239010066 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.237858273 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241261224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.247148306 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245722638 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240527542 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241306621 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238175011 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243695916 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.239951927 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.23871178 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.238673165 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253709113 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250351464 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248101472 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.242766657 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.239688778 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247223158 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240340551 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.24456378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239494678 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241293395 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240170024 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.238994298 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.236195215 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239863777 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.241041067 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240695268 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.239684298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.244761903 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.239538309 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.238989039 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241457033 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240636903 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241522206 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240332666 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.24149475 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.244960628 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244091555 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240969525 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241084177 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250249949 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25510182 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242820789 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240947859 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.240036953 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238686386 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242140355 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.239320025 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.242369973 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250159782 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.243597826 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252520977 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.243928015 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252671539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2411548 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.243311983 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250895623 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.240105433 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241266292 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.242964953 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.241048993 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249595991 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.256220393 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.241499046 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247116222 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240216446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.241567301 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24127102 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.240771299 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241359778 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242044817 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252695759 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.25737645 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.246977176 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243430556 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.23886438 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.241092456 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.241711056 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241146883 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247636599 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242685907 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.243339661 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.241800872 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24285035 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.242528075 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.241457811 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.2419852 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240261121 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.244434918 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251960355 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.259367641 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247409068 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.244845778 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254716076 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243618173 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252287126 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.258514664 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244123739 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.242511932 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244486098 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.247577186 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.242626087 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.245559389 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.242879554 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244028191 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248168938 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.242604345 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.246102087 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.243991712 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245437006 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.242740995 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254074286 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269949819 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245514195 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248626327 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.240949749 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.246454669 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.250143371 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.244031461 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244406096 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248602137 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257234548 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25629191 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246719359 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.247824483 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246803097 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245978875 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.247260008 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.245907592 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.245708298 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243939757 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248095631 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.243992209 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251315048 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245158734 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245487605 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246976336 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.245801153 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.259059951 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246745428 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.247408381 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245900748 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.244995841 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.247344435 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.245687751 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.245000941 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247286871 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245870829 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.246537542 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253077806 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.252470189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.24904114 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.245098609 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.244338958 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.246581891 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.246486672 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244725324 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.246728042 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246504079 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.246460763 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.245884361 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.248091861 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.243945431 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.245417318 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.246906344 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246587897 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249490144 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.253898321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246463945 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.243390053 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.246661905 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246055075 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.245879878 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246547365 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263959488 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25043956 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.257899583 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25761523 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252287637 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.24685593 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248993156 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255892656 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.247261943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.247069083 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.246652595 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24884674 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247171697 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252428752 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249424062 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.256503422 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.249744964 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.249627901 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259554764 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.265506752 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25024753 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25048004 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.254057734 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249601802 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248000424 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248828168 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.247582703 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258532095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.265900836 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249536201 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251396222 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.246006075 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24895035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254424649 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250928511 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.250891089 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247879527 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250668719 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250275825 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247680881 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.245814066 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.248917388 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.249226119 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.252473641 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258719286 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.247508141 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251661925 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.248629038 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.251430604 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248996667 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24912912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.247465135 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.24603419 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.249592636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2491254 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.249119366 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.252679665 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.248049422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25113207 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.253130753 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251272254 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255050319 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262944442 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.259434102 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.24971609 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.250196458 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.252766736 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254054542 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250742348 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.251671767 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251350998 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255044738 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.252223058 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252333182 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.252921321 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.255353796 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271511421 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.266072766 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252401108 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.251206182 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258955772 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.2522305 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.248309734 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252292047 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.25451943 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.254431049 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.260231576 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.250820324 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259517804 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26683871 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.252625566 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2571369 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.255691975 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260437452 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.255683963 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251279957 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.251739533 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.256175334 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271975854 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252676787 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262080433 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285502829 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.267990936 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254116483 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.251924278 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250418449 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253589036 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.255113096 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.252626968 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.253377295 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252912279 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.251506639 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.254120727 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259421937 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.254292268 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.252996871 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.253082285 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255268992 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.255508915 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.250787733 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.252719637 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.254092922 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.253657894 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.252524941 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.251412445 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.253668988 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269740476 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265160376 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.253873534 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.253372254 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25067848 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259072423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.255763887 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26545544 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.263096622 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.253287663 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.2536577 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.254540158 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254000553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252915652 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.255403183 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.253564458 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254667803 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252966744 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269534521 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263561652 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.2618211 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.255306872 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254484064 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.254720384 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257819611 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254606777 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25478278 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.257465915 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.255024002 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26021492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.254698701 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256319392 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.258324331 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.265430196 seconds)
  done (took 741.936634769 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254899741 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254199005 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254241176 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252793463 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253290729 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254039875 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254080884 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253510761 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254831833 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253702996 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253620373 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254273359 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253753608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254910712 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253110435 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25438956 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253577795 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254280822 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253232159 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253154555 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254072082 seconds)
  done (took 27.520756661 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.257551373 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.254656495 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254217315 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.256381935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254739591 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257188643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254511481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257291182 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.257302127 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254209257 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.25694374 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257943272 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254619311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.255147915 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255387245 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25780215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.257718222 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25607787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.256603141 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255575816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258003162 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254867094 seconds)
  done (took 28.82588308 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.258435997 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.257929271 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256601572 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25557097 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257862259 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.256109816 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257563362 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.257324101 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259147619 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.260287773 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.257335642 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.25852203 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.26639585 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.265416823 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.26060252 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.258452467 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.402605433 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.257056597 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.258473035 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.258208931 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.255626595 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267092584 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.256279383 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.256840846 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.258160802 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.257859276 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.258379992 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.259328108 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.258063073 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.257946951 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.265369613 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.259038069 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26015237 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.261320885 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.258555326 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.259924241 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.263739155 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259531078 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.25814539 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.25914385 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.269626055 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.282528737 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.260122017 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268109658 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.259175283 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.259738402 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.264227101 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269110269 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.25766823 seconds)
  done (took 63.093411034 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.260095698 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.260924967 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.258148054 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260987262 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.260789273 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.260996916 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.261879823 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260761448 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.258656843 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.258260694 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.261898996 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.258962114 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.258274818 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261157258 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.261195781 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258203731 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25835755 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257769905 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.258860145 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258161083 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.258208292 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.260489473 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.262088078 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.259497493 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.261639095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257883417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.258418523 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.261871712 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260112595 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.258351731 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.261202713 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.261618786 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.261893118 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.25959684 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258764364 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.261677781 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.261652657 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258696843 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262061925 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.259865629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.261519853 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261335827 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.26234186 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.263444165 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259636628 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.260477567 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259991824 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260635461 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.26111079 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.262981167 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.262359523 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260697403 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.263219535 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260647807 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262491648 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.263554234 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.260541054 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.260405556 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.263530324 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.261113636 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.260641033 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264064168 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.260411476 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.263278664 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.263360941 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.261157233 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.26087469 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.263693523 seconds)
  done (took 86.925164369 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263073461 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263624485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262187043 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262726411 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262849604 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26291092 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264008563 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.262746602 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264356033 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263622805 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263972062 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264352767 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263206252 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264541002 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263215643 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263557981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264087735 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264272193 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263229663 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263128268 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.263601607 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263267712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264237454 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263825774 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265218313 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264612935 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264397483 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264245759 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265242022 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264054891 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264871045 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.265709578 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264496755 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264463998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.264639493 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264591861 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264861312 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264765943 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265736615 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264985852 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.265236976 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265103885 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264123753 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.264894817 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265406801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267876692 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267378555 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.267464139 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267448183 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267769446 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269167103 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268464571 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271144418 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267096831 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266992056 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.269141725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270500211 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269451756 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2712749 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270352228 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269081282 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.269064296 seconds)
  done (took 79.654671691 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269474238 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.268278748 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.264438033 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264798631 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267404466 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263256493 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267624961 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266708155 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268007531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.26866836 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26800021 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266631034 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265956089 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269075886 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266479354 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265235941 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266019015 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264626945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269001753 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265535517 seconds)
  done (took 26.536852143 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.266930142 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267486302 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265989593 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265764466 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268430299 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266469078 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268874234 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267737496 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266492175 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268840426 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269134581 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268964855 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266870063 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26715051 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268939869 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267080706 seconds)
  done (took 21.481936578 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.266829442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.271136513 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2695472 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.272150019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269651273 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.269436844 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.272939931 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268806368 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.270501717 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273154262 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272763164 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273353914 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272558992 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.273003732 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271026813 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.275873399 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.272477849 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.272418767 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.275429371 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.27447214 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.272830452 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.271408783 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273945579 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.273827811 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268535304 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.270020016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267502894 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268163854 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.268768432 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.272063069 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.267773246 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.267610321 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268179089 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.269483296 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269084781 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267400814 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.269718052 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.271833621 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270590722 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.269863016 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.270783974 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.26867125 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27021383 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.2712395 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268273772 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.271115644 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.26870635 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.269499564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268398307 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268081389 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.271011972 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.271731865 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.270761578 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271851507 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.271558265 seconds)
  done (took 71.09181654 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271498611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271551758 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268796306 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271985532 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272649552 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270865686 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272631255 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26967163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270178454 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27275184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270613735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272718244 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270135352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272872475 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27156044 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27440322 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271127292 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271342304 seconds)
  done (took 24.091470315 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271539295 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272149443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273049331 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270410984 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.269711805 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273115368 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270231976 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274616063 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273554734 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270672207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270902311 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.273767253 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273908802 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27421648 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271896395 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271652575 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.273813184 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272802567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.27049584 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269961599 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274190528 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273841394 seconds)
  done (took 29.196410356 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.273069525 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.271657043 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.29036657 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.318448258 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.304893317 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.271859676 seconds)
  done (took 8.936739325 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272529672 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273634333 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272053649 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275440971 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275049555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271788786 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271487072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271720401 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275305917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272398565 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272874237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27501096 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275760157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273472299 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276885502 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275383509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272384017 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27203034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273537435 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275934688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272361174 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274350758 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272594702 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275116725 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273652626 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274681956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277272755 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275922632 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274739193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275612484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275465117 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27331842 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274742571 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274084098 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277002967 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275632818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27301272 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276481766 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275735238 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272881517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275756361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275910403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276483147 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274256362 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276387192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273942901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274605481 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273680203 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27518128 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27755362 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27575727 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273985855 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277833825 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277073821 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278033023 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277750345 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275446814 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275044944 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277797314 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274701973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274924599 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278112308 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274887198 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275070911 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278224855 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275445069 seconds)
  done (took 85.351678887 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276749264 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275733822 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274993266 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275237527 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275832057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274424061 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275474961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275070017 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276093565 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275695603 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27962553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276777622 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276277043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276988904 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277514003 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277300959 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27713303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27582348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277700817 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281494756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277507407 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277754013 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276176672 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276912541 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276815126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279299196 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276322981 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275944724 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276281761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276702625 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276697912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275999216 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276123549 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277835102 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27799527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278618602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278551839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278540174 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278544983 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281474034 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279156746 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282232893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279666621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279094951 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279915403 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281076724 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280474086 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278997505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279799865 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279668404 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280204124 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280460985 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279965211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280482891 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280400633 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279013488 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279617004 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279373635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278785738 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281890488 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27907229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279464656 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283100055 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279295963 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280117429 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279682921 seconds)
  done (took 85.574371255 seconds)
done (took 1729.983186689 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.328434491 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.362440213 seconds)
  done (took 13.902728472 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.441461625 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.393828761 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28019436 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.308239086 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.277243586 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.297556971 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.27169179 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.277529325 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.27997066 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.278889284 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279364366 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.465845965 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.335823514 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.278858484 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279886903 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372098155 seconds)
  done (took 42.341014266 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.309651846 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.285681871 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.39279642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.303197696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309318827 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.458525889 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336595104 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.284579869 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.450192685 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.324858293 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.779882907 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.304839966 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.285652141 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.393383504 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.299743947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.457239953 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.526479932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.786458333 seconds)
  done (took 29.502896923 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.716333372 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.298789479 seconds)
  done (took 9.230414836 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.308775181 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.2834139 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.281294708 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.293769494 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.279159744 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.33002025 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.313341855 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.308977847 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.311464731 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.32523682 seconds)
  done (took 64.259397535 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.303189419 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.287870633 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.286806738 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.28455391 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.281368575 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.275062955 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.2839308 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.28737003 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.760246376 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.407833797 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300862629 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.29150532 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.2866144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287632892 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283517181 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.322496904 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.415673539 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.2837439 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.282737833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291494791 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286143583 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422350785 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.324123062 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285273969 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.405439516 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.78536791 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.288054783 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.29190554 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.405341533 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.28273365 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.285094138 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288491026 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.286015421 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.841613647 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785110676 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.303349698 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.307507954 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.295584848 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.283300588 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.468266599 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.285370147 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.293775986 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.280555957 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.766630018 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.447336195 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.394767144 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.503433822 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.284988366 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.287052976 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351829478 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.288885172 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.287994939 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.315706715 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.047671811 seconds)
  done (took 108.47986253 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.284665476 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.765384444 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448221419 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.297481083 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.057268675 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971552498 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.282657209 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558751281 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.302205686 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279113632 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614530533 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776301228 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.286672997 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.281554047 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.379331035 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362983108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.280893797 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.040579542 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.281016787 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.281368675 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.695787012 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297169444 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.292145417 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305700888 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.319332877 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.736454737 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.72858468 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.738752036 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.283061609 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.278771825 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.739688904 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.286876065 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.32675304 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281860106 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.554469462 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.627532333 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.60582482 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.284614024 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298709067 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.279198653 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311937294 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.733121909 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.615613943 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.279035926 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.288155677 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.73669949 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.280045888 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.286573399 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.285433456 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.482474013 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.219054071 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.281661251 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.730440916 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.282924967 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.627754491 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.348196523 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.360595294 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764397323 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281074347 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.356749934 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29015828 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.283137506 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284027672 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287655575 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.280871286 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.619246353 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.678005812 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.28359471 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623570411 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.734809538 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.280241626 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810659247 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.143536425 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.304987224 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.327541178 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.282725253 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.853049267 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760855971 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309488677 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281314926 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606245991 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.284362337 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603968594 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.293931912 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.281513535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707427921 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30468 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.291915486 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.28372562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.285204623 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.90857959 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.285031358 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.547118854 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.329550664 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.283956803 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.28343435 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.299748123 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.281875976 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2832442 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.289640458 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.795398901 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.285207325 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.578565971 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303025319 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285579813 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285919188 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.287317586 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.285888984 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500918123 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.739910425 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.290052299 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.28677526 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.284196943 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.285571912 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.53250069 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.287979979 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.58199769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285826677 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292719003 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.284398906 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991616915 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.323893835 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284712351 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.290085596 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.138845428 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.493766818 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301218426 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.284529398 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284665829 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.300801308 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.621790556 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.285433919 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.309388516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.28691838 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989070338 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306713875 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320152805 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.889220735 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.289615836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.28722609 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.296255745 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.286759772 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.591805866 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.56301078 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.60679202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.285873389 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.302327177 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954711362 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.341130773 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.420185914 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302057155 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306168813 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487543477 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.546476268 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.287066236 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.866858386 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.287894977 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500053246 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.288075132 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620629756 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767119357 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.286101615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.290234508 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983667317 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.961494267 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.894206346 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.292144454 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619571038 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.254035602 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.73802665 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.287208611 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.289544693 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.735272574 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.287697794 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.2943614 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.28666054 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.288736951 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357165125 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464293269 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.953638007 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.288085272 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739937191 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.295896945 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286501547 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.2923894 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.287642193 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.64317799 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368056092 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.289274627 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.306611658 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.289135163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.297787455 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752020529 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.180835405 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.291489052 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.442890608 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910851646 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.28716789 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.289890077 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.886598564 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.567293172 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789027241 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.327131628 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.591268845 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.290933766 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.329991595 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998273472 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.349178277 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.75726037 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291388065 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.291532746 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872531657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.289648421 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.342537579 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.290561382 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.290180318 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.81604954 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.292771965 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.294158242 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.686889665 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290523314 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53613887 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.289853001 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.303600634 seconds)
  done (took 1100.144971975 seconds)
done (took 1369.074433809 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.293510971 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.292561726 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.280759416 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292015634 seconds)
  done (took 26.388240857 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300359244 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.298259629 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.297654209 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.295963141 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299803534 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.296411231 seconds)
  done (took 9.020531797 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.39929823 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.293803704 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.293997891 seconds)
  done (took 19.218909548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.513904035 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.519529298 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.657320508 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.401742468 seconds)
  done (took 10.324162445 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.300590399 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.299281129 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.299284996 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.301271756 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.301702311 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.303212396 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.301679363 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.302288913 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.303289583 seconds)
  done (took 12.942287501 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.138760404 seconds)
done (took 84.262992329 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.453512099 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.717120706 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.875776327 seconds)
    (4/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.02628984 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321470394 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.571278297 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.345996347 seconds)
    (8/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.491842317 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.786514664 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337841834 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.059063475 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.293214064 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.356237772 seconds)
    (14/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.276060124 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.653858231 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.873874723 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.340977956 seconds)
    (18/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.411860967 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.052439884 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.91713387 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.587278635 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.380770018 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.746843156 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.781613315 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.281513355 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.157755539 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.045049461 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.219849422 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.127958549 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.380360274 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.364404217 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.044769796 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332837895 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.300407818 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344631175 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.633812986 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.400722051 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.69904272 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.305061974 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.381285041 seconds)
    (41/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.508672931 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.854384505 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.294197124 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.186448669 seconds)
    (45/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.361685431 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.28501816 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.165091313 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.303105464 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.148521853 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.588454862 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.410136329 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.577593866 seconds)
    (53/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.840511375 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.896390936 seconds)
    (55/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.897722713 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.310542708 seconds)
    (57/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.75906495 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.319862922 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.308215294 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.351191295 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.317138053 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.323181045 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.140913453 seconds)
    (64/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.41591372 seconds)
    (65/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.285950202 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.734036533 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.322706334 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.580039975 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341360888 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.731952202 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.36347184 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.297169794 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.299790052 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.704828865 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.400651042 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.35783766 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.155015959 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.050449339 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.522796795 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.310939083 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.393621957 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.569455215 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.781132977 seconds)
    (84/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.110686892 seconds)
    (85/309) benchmarking ("sort", Float32, false)...
    done (took 5.296247695 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.647538713 seconds)
    (87/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.590165833 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.913890773 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.870053871 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.710861931 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.504013416 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.892480185 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.379448399 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.295961768 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.969891772 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.017854201 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.311446387 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.4211941 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.910061586 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701424093 seconds)
    (101/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.302112223 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.388894492 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.882179348 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.673780993 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.495131129 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.316686478 seconds)
    (107/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.137808716 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.050175422 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.406669762 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.95195093 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.617275664 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.622281773 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.293964078 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.402321922 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.598381338 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.715712047 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.758846779 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.313121741 seconds)
    (119/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.380932931 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.298342601 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.946997369 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.285239025 seconds)
    (123/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.537668855 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.120385261 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.298140613 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.297703063 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.729685597 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.512946661 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.32817999 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.661369049 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.810612384 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.324539233 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.051789727 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.315252014 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.582323994 seconds)
    (136/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.678292478 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.373058381 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.941121138 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044797793 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.347326358 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.561157081 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.37292681 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.151484212 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.317941666 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.299833191 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.732109541 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.661472109 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.40315932 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.285173483 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.285855114 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.303140994 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.047962746 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.32621509 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.32704811 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.301809789 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.353231898 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.079955928 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.311755505 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.042706483 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.321747389 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.300633091 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.212316838 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.45129579 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.327551057 seconds)
    (165/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.676314096 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.934796204 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.29966329 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.300274038 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.880954579 seconds)
    (170/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.903077454 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.427749061 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.531626767 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.365243317 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.152144245 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.301588679 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.684505595 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.649470044 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.328194533 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.666367353 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.3449261 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.499571431 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.418005509 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.793241606 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.386018355 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.32935291 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.302679369 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.35934292 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.66022019 seconds)
    (189/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.922604534 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.34595843 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.438787515 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.136711553 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.384443749 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.751752205 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.287489079 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442169746 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.332441083 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.361007411 seconds)
    (199/309) benchmarking ("sort", BigInt, false)...
    done (took 6.30359388 seconds)
    (200/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444341496 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.430952273 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 4.355495408 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.873281558 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.384702743 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.517717113 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.322862451 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.329037605 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.198140918 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.206144105 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.838678587 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52076327 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.389549212 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.678656196 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.670319737 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.555450796 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.31329797 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.303761695 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.531646696 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.290476709 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.325387189 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.330169672 seconds)
    (222/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368918785 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.295776066 seconds)
    (224/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.673452044 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.306971496 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.791254598 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.400077066 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.346555008 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.075680088 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.660940978 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.886547333 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.291542265 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.304188167 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.328759601 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.778593944 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.637076896 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.304860248 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.172689511 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.323895965 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303357346 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.660889447 seconds)
    (242/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.38880209 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.401632625 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.682459925 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.215782316 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.58956407 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.882552317 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.444212754 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.291440649 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.291997666 seconds)
    (251/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.368545575 seconds)
    (252/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.32474141 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.221110266 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.518799067 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.330039039 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.291754555 seconds)
    (257/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.415196123 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.36125396 seconds)
    (259/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.633148168 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.332291785 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.943279657 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.494499671 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.332499176 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.628903228 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.662991523 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.694198845 seconds)
    (267/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.928171832 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 5.60223767 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.723988472 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.685611016 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.573554324 seconds)
    (272/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.358102577 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.458753289 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.430242677 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.33249174 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.671752249 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.409195511 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.322427492 seconds)
    (279/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.117739877 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.389760693 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.409675271 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.402906149 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.384336828 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.950368008 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.415737543 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.293694833 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.307207145 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.570992367 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.433742402 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.356004759 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.064551718 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.316803655 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.888435403 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.30974857 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.374443418 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.41734509 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.62429968 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.500126093 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.918812644 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.728186268 seconds)
    (301/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.938575789 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.332059066 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.823088903 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.309878111 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.381432736 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.63087947 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.324310281 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.689410337 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.309256236 seconds)
  done (took 915.596539222 seconds)
done (took 916.830158274 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.341451558 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336274849 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.318806591 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.341623414 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.432833048 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.349724806 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.330759702 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.322034373 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.367164655 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.369093591 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.321370034 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.347644543 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.322197477 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.320497105 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.319283229 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335843455 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.350018979 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.323916179 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.336902139 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33043871 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.337160872 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.320750828 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.370612916 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.350165096 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.32461217 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.325199343 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.324422447 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.340833452 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.431142346 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.324637825 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.323757762 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.33211762 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.351794491 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.319482532 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.316248083 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.340669123 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.332727197 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.331210416 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.325063097 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.353790077 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.71305527 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.320786005 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.324429389 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.322715264 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.322757591 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.325864534 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.325162186 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.32819533 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336298743 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336112821 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.706214865 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.335224465 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.324483326 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.323251053 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.333268942 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.323369128 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.326463163 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338926002 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.342310732 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338894392 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.345773821 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.329152364 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.325084896 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.339829161 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.331172137 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.815794813 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.319581252 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.327757727 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.76144968 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.328586233 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.817819299 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.33167152 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.324545712 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.337391804 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.355333231 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.357617524 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.319459667 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.321968462 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.332560929 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.322054207 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.333391684 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337586297 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.327950373 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.323671683 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338985502 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.352713125 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.335566024 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.325988049 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.335820271 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.344890119 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.332439083 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.337500326 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.32831459 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.321599444 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.335511189 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.329549697 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.328607772 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.326739169 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.330259818 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.335760389 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.765977288 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343785172 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.32152879 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.321555772 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.325305623 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.340186503 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.760766407 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.326608503 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.347888083 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.372883253 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327056964 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.353643273 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.32986875 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342432663 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.334592846 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.329686309 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.322004826 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.353527236 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.776314909 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.341384686 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.328607764 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.325765106 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344004574 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.328741873 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.323677982 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.362822915 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.328132892 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340653621 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.447850968 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.337366466 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.357748903 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.326396228 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.330169424 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.35595407 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342779876 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.358620252 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.329514936 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344306044 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.344090789 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323083993 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.340014373 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.336993976 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.3295342 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.335360092 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322195433 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.361133283 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3416519 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340070481 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.348953495 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.44779389 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.32442463 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.357146468 seconds)
done (took 224.008047441 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.387313844 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.322344076 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434594687 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.326664638 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.423881089 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.426258151 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.322600724 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.323888642 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.323128711 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.701131875 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.323164505 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.324006839 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.322990968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324371459 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.407391958 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.326269616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.323349003 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.663366358 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.325686102 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.400088432 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.322893666 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.323026732 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.325964504 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.707320876 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.322531295 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.326397563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.399819585 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.325518473 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.67314705 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.321621457 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.325302809 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.673100066 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.414414585 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344754948 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.336408508 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.333977202 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.425621746 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.346457375 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.407259253 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.408623347 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435095325 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.364682386 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.318865545 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.328682899 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.32975052 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.329082713 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.325224103 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.355122225 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.323056783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.325892715 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.665818749 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.337736762 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.325841568 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326749517 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.326495273 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.356052991 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.325506534 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.328514445 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.415194853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.328653353 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.389746909 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.715139737 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.70284822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.328091638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.326239738 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326168018 seconds)
  done (took 148.013366817 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.393533105 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.401818022 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.441562441 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.329382901 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376763118 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.447347724 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.329699159 seconds)
  done (took 10.979895984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.334164638 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329817783 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.378861821 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377540367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.330444912 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.476066868 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330578834 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.340557527 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.32613675 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.381994231 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.331559485 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330885886 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.336972835 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.324435842 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377982947 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.340980108 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.443146959 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.328782542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.329863488 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.483857592 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328013843 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.337880165 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.380990447 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.341392035 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.331863912 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.335914247 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898866879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329848385 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328744758 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.332334448 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329431263 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.368580852 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.332291633 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.330393379 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328641944 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44605789 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.331384644 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32928135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.331792071 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.326453142 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.332507352 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.332935139 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.331905688 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.329540991 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.332947198 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355388407 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.332029438 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.331781963 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.332923022 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33189301 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.382350705 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332780579 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.32971969 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.329359348 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.388116652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339551319 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.333463655 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329227068 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333229257 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330546706 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.485170016 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.3804326 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.332814607 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37876888 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332697164 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.333946231 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.334670528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.33257036 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387242801 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.332757931 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380025543 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330798973 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.486079475 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355873319 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334592542 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.334312709 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334832526 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333233878 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.325582438 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.338452947 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.330718831 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.333797028 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.339278657 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331071722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331165255 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.434496684 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441439093 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.331898229 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.345768725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.340592805 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.331145309 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.386358837 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.33435026 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.331937799 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387020716 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.448975044 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.387373493 seconds)
  done (took 153.022656783 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.337888783 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.340858041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.33395666 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.348992055 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.33428414 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.333655534 seconds)
  done (took 9.295545489 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.335433841 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.335989919 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.334952226 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.335123211 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334372135 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.336142789 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.333563104 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335857098 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338574263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335625566 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.338099947 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.336467183 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.337113334 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.335027711 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335400127 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335090213 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336184774 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33298247 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.336166991 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335405148 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.440920574 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.33509147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335023417 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.33545331 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.340391708 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.336504838 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3425262 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.335350535 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.335552501 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.341181953 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.339489791 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.337238562 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338761266 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.34183082 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.342562815 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.337397066 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339931272 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.338086695 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334827288 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.337007229 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.339074886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338965976 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.336861059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.33967796 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.33861151 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341380361 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.342703354 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.344038353 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.337047499 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338988877 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.338592398 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.338580442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.338225579 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.339441455 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.342783823 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342259982 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.34412489 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.338158287 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337185184 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.337400158 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.339912015 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.337576999 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.339300985 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.340938961 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336459524 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.340876474 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.339564126 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342857422 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337509668 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.338401879 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341133887 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.336529217 seconds)
  done (took 98.712509138 seconds)
done (took 421.279866837 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.68038794 seconds)
  done (took 7.94825812 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.414445033 seconds)
  done (took 7.683603984 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.623684814 seconds)
  done (took 21.900946955 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.368145308 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.437588814 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.343672022 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.333325819 seconds)
  done (took 26.752770991 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.880558219 seconds)
  done (took 8.149944795 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.33318588 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.344886446 seconds)
  done (took 13.94923329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.365308077 seconds)
  done (took 7.634120962 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.787742524 seconds)
  done (took 8.062276396 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.356692734 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.365407508 seconds)
  done (took 14.260485629 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.318062974 seconds)
  done (took 7.589159896 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.293648215 seconds)
  done (took 8.563378274 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.344493217 seconds)
  done (took 7.614996667 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.354993825 seconds)
  done (took 7.624911746 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.275609249 seconds)
  done (took 9.546050677 seconds)
done (took 158.550177827 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.33170222 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.332503247 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.335275984 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.332268591 seconds)
  done (took 26.600966993 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.373070607 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.373628533 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.375526997 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.384083058 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.376608587 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.374200763 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.365879055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.366089438 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.384372011 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.377818015 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.375040432 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.375517296 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.373416235 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.365631143 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.37622127 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.376360815 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.386551039 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.376049984 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.367796535 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.376893772 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.341661432 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.384675161 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.377326194 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.341869708 seconds)
  done (took 34.21862959 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.545376926 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.418739851 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.497011994 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.395194812 seconds)
  done (took 7.126162796 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.393020191 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.395568211 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.406223059 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.445205638 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.477940019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.404107535 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.368206677 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.36240087 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.349159041 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.395725383 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.469510193 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.410971819 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.480196389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.341823993 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.524162815 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.340012965 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.341776402 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.393640283 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.44560396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.471234691 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.342214701 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.393249901 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.398086776 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.412010987 seconds)
  done (took 35.033190965 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.340572258 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.348768547 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.347060937 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.341326866 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.343321087 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.341903106 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.348920137 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.343517033 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.362670526 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.343220828 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.341159033 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.342703377 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.340929102 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.342436922 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.342203805 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.355257326 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.356447132 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.342170786 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.345240547 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.347942284 seconds)
  done (took 28.190880025 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.336220827 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.206498536 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.687111634 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.592349815 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.336488036 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.338401971 seconds)
  done (took 28.770028274 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.411031695 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.544226455 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.34073236 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.698725317 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.771317304 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.340578108 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.341916447 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.577372063 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.886150533 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.888133429 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.397623253 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.408834712 seconds)
  done (took 19.882607993 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.348439721 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.337647242 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.336947272 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.354316301 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.397324463 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.344267088 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.348309533 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.336340394 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.398416738 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.399454376 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.345294092 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.398866402 seconds)
  done (took 37.62288654 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425462999 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389887438 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.353810829 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209173886 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.723205618 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549311356 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.21740507 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778464748 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.342235767 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612168642 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338955827 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428499764 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596137957 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33721629 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342112644 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36916282 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566865512 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841311349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342290051 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.316143414 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364791344 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349828553 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.41212634 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366566422 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551714236 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.473935399 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600766474 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340409224 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621267692 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350066555 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349903627 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340155344 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613315873 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013733174 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431910911 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351656402 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211281847 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.054445711 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.325622296 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.328936166 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266244852 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.340557035 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352049073 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340682987 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276037897 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346205479 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791323823 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345625181 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.051583149 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339493987 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352972506 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435949542 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.34598162 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.157453345 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481346268 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341809306 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.340530593 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346630641 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915675492 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.884629819 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351512135 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.275707061 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507870138 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.331227575 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963197315 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.443263949 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.346287887 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346420103 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277269625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.416121021 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361732704 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485394418 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.36217496 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036496324 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08651134 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352159726 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272400386 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911879403 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353217227 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.277805705 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571727242 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342924517 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283985365 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.299573714 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276726498 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076079698 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353239819 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.775796887 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352007307 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.784750232 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.354502858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361385747 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367266138 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.568669393 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.227141228 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343894653 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.315203713 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478850742 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365205077 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784152386 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279264549 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.347888555 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601995878 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.556506291 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348842156 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371302283 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549172681 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359276852 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.360598415 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351523504 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.355411299 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.928373218 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357863722 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874660001 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362199805 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344223736 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116338499 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348374658 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.446645327 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345671797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614062275 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.153482654 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348022262 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428654259 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347006127 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346842088 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.431594008 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865560235 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347221655 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.347185272 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35907011 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356879771 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.345168582 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306266431 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.342647718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35322365 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.346513415 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570373436 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346617334 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622501819 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281478217 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488264348 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476183401 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.568850086 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.543008688 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.34344604 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606745917 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359805277 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361206098 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360190567 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366059373 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444837099 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369603395 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.347158627 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.606799961 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.350701588 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35093695 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.448596074 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.812652393 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350561171 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.353011795 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240524766 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942601058 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338118977 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356321525 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242731943 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.360702649 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4116662 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3543809 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.357298358 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.19884657 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337830396 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.351478522 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.357800629 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573397696 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359179902 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.422049761 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424950048 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.549386697 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934759129 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36263319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.281952257 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.058362968 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.039684215 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348453724 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.284301252 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348197304 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356955444 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358447811 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668532327 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93946824 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350157647 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.327516557 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.354272124 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358526985 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.352113817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348504721 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.152946414 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880665655 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358932102 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.360213571 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491999425 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.361508523 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.28225612 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.350521703 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35287643 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347640076 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348334406 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382058332 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.345313981 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847518502 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608249575 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.170831569 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362541734 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.516831816 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379305829 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.351070195 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363529077 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351442563 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.373035811 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355931151 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.360315191 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.394347664 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062607762 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92030654 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12766893 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88447488 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346998431 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.354036231 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351297293 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794432934 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284176841 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908940243 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542423024 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795546216 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306968697 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553145907 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.543010753 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123571466 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359396939 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581006884 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29458999 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.364648464 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364240742 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563238445 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386066163 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351443848 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281684911 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.640789832 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591144764 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361530089 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430544462 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79831846 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341006661 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366622357 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.3488523 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.739458197 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529382515 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.072311926 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531405174 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363391552 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365719703 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847476578 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361132798 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.581686131 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97176712 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359651277 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.553820717 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291769625 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.362806472 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.363513121 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.353537059 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.658104021 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.349418957 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.607039958 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361509076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286757586 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352522497 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88600035 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.209780198 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.359852555 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352258307 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121403162 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354349085 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635777966 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.363300509 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.144123687 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356947758 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288988792 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288086206 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.045631562 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357561657 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340184052 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857881734 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.464022749 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.475458381 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371630886 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205060869 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610727415 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.368447014 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939298718 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580987797 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.291771616 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377352146 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.455946286 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35493046 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.340091284 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356129008 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591956619 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240394573 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579007222 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.400963431 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.266742988 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353342775 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566304926 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354922417 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35601892 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603951994 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.064902096 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.368312999 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106202066 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381130675 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367280368 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303397571 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519680439 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361624889 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435664904 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366116943 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.367300653 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.365426391 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528475994 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357611802 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357031371 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.370175203 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450091517 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.898937184 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.156999766 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.358310817 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956143697 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115956666 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950300326 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369608891 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35738338 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358163229 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292191246 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504532038 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587046113 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629738126 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479045921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.567201048 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378513917 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358807408 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370089778 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569669924 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631630753 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.256995291 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357601045 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371542357 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.357693069 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367989061 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.567934193 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868452566 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937879007 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483873604 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358800157 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.80280028 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631215549 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358388941 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357803321 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953175563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.36424242 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.759640393 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.365296539 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37018967 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504459252 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368131274 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035894862 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368664887 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.514647949 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.13209024 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.464185674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614509115 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.832863414 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.368879946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952725325 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073538147 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624991784 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426042755 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369517862 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.476582265 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50608696 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.362866719 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359818267 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359907016 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208385691 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.068624069 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.36901424 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967682898 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625904928 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.356804924 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.362454146 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382975936 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.370330192 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584402274 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101958305 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586336566 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370956807 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363160092 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.177928389 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956233923 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373547172 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295358235 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.363041932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606517405 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598095842 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380366917 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.812589821 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.071855059 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938616678 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.33692273 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38312067 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360119165 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.078019727 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956798445 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.162612961 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869363968 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922960573 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375781395 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636120342 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.366149588 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363273553 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637339667 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.364081955 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36917009 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374303791 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.954873245 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138511155 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.36026057 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.375156694 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.298831982 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707525864 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066552746 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297538738 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363553624 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.55177033 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365687553 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489867566 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372326607 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.360657029 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36559394 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.097037052 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672337634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.36618766 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.346953304 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.366500431 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365156841 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369711454 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602518052 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370079329 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.030064107 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.716623038 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621747704 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369036522 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.348666425 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.367927321 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365156621 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362204014 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.569697292 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.684093072 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941678924 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.375749564 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.37589438 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368273938 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.580705864 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575609022 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37188138 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373684718 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377363548 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379853172 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.274961092 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.899691086 seconds)
  done (took 1605.031679334 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394681615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.395626301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.394051278 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.457962402 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421497485 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483513644 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.369376808 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.50015334 seconds)
  done (took 52.715637453 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.372607846 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.586906799 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.392122074 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.362783038 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.371554866 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.36331954 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.820403502 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.36692298 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.371567124 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.373372896 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.372842003 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.364661001 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.000413566 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.374595728 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.363593828 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.36186187 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.371351692 seconds)
  done (took 65.896712858 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.365695475 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.423675437 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.475427083 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.368647884 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.469413775 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.365866607 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.437449509 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.386269616 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.379783355 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.386069941 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.028908935 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.375380819 seconds)
  done (took 79.763954671 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.374096975 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.373397692 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.373644162 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.374498581 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.375629347 seconds)
  done (took 8.173124245 seconds)
done (took 2030.298469158 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.620365848 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.07609553 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.04361546 seconds)
  done (took 5.422292209 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.514546542 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.564067197 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.715222986 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.707092422 seconds)
  done (took 7.802903253 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.640989744 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.735179958 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.54378962 seconds)
  done (took 6.221283117 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.790291172 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.372109851 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.441040337 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.365870366 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.366861649 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.368632796 seconds)
  done (took 20.405061861 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.370627584 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.3740049 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.371242331 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.376118557 seconds)
  done (took 6.795377073 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.353500325 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.104269686 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.355972705 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.371239563 seconds)
  done (took 18.488344658 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.118910664 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.13026594 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.1165077 seconds)
  done (took 7.668024533 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.367308524 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.211178295 seconds)
  done (took 9.88172111 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.676577442 seconds)
  done (took 2.979188066 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.503249606 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.640254887 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.41008479 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.357004485 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.442760403 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.300838501 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.046694968 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.619202575 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.344311559 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.610301408 seconds)
  done (took 28.579206536 seconds)
done (took 127.770416434 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.202327677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.767656441 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.570598729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.173590608 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.598947512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.57075823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.648411025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.143267444 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.684349373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.669594814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.215200187 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.600309218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.593540784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.768840836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.59440139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38548094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.604328901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.245376677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.864873591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.072649258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.649490326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.812486173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.049971226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.002644599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.603503516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.523459057 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.389619409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384478589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.036143683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.581457216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.523437957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.240474933 seconds)
  done (took 192.075965192 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.36889868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.376062114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.368206443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.368909571 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.384137102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.369313938 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.370163295 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.369279454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.372398809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.367560671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.368550781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.368276879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.369235161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.36733408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.368851073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381328797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.376123541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.376444447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.368486877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.369597601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.387402731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.388788844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.368708372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.369666798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.370654471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.369321564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.378824679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.368663116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.379695742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.368720211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.383847729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.371152028 seconds)
  done (took 205.241253539 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.38064769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.368626991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.370472071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.369005353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.368528175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.370722166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38151283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.37797732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.370423586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.370227858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382103711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.39215408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.370423155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.38326884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.373058893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.383620463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.383935917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.372975002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.370044567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.370281597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.382264052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.384061421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371043573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.393169834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.372268632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.372722446 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.372216023 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.370020271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.385360476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.379600645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.374415774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.383830054 seconds)
  done (took 205.358942954 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.571466573 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.381128112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.382901274 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.323167232 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.381335173 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.381823875 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380602334 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.572929626 seconds)
  done (took 14.683115724 seconds)
done (took 618.663935788 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.678215084 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.399677319 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.578562146 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.402632386 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.166779088 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.401679931 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.402755465 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.57649959 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.327294632 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.579368995 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.657062197 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.396316789 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.781231475 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.398127115 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.657974173 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.496966578 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.313337368 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.436606333 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.721984601 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.975322917 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.658046362 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.898069916 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.577134184 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.323838159 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.794184617 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.855426421 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.074597026 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.309867289 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.399881469 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.726454509 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.09349778 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.45875047 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459511567 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.443274665 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.496808672 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.479684956 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.35095457 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.440415428 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.583446806 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.648908439 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.944812601 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.123247201 seconds)
  done (took 93.798122033 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.370761605 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.370931607 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.369934404 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.371614163 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.372048933 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.372067295 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.369387479 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.37126772 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.371630798 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.370635249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.369761136 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.37115267 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.371233132 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.371621412 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.370037265 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.371140625 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.37142176 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.373724008 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.370405695 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.370777326 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.371929786 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.370645865 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.371794197 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.371743596 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.372197805 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.372533628 seconds)
  done (took 36.964723273 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.385516293 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.621252426 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.806206011 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.391034104 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.384461648 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.387820269 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.463413829 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.386414634 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.388832098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.387172225 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.540180038 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.387339284 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421158755 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.81909987 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.387701932 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.386267753 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.386546706 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.385711854 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.627092589 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.392532793 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.464464066 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385970031 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.46422912 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.394774907 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.390419317 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385813244 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.389861038 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.879456719 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.387107744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.542614727 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.169159517 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.462860782 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.831423872 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.816493154 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.171896108 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.388333692 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.387479974 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.547394514 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.3878078 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.386709207 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.463796505 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.385957859 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.81721723 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.015857506 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401257011 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.388631293 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.913212559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.545402412 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.638294628 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.395038796 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.836810823 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.390146141 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.388930473 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.388207925 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.639276146 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.395033523 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.386413158 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.926408658 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.39299203 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.466096044 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.389014957 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.388211569 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.639178154 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.385914355 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.62593975 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.38720879 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.395001005 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.389277396 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.820337305 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.390120812 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.032094564 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.402944446 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.388923152 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.546120576 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.626577626 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.933261392 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388804978 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.643642553 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.847702455 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.465066557 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.390847561 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.875666768 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.470575996 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393684762 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.392074898 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.390583951 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.390211861 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.43437189 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.465128538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.97174579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028252023 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.944291454 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.470027226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.401392278 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.390438121 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.932578791 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.405572132 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.39059893 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.813788462 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037041133 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.406212992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.397491681 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.022485979 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.406480891 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.469296794 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.395152124 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.825544436 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.390808837 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.434453759 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.390954112 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.397519383 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.394228871 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.469588399 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.393207586 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.389787989 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.015314351 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.569084929 seconds)
  done (took 181.904546932 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.396803347 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.380788098 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.39557341 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.38187938 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.383627385 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.389965364 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.383832283 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.38440372 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.390164402 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.384228419 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.384948923 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.383544642 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.387051388 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.39173202 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.393106452 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.392481479 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.042420929 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.386338144 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.389368805 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.382059673 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.187166101 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.386696164 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.38675731 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.381792288 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.384065329 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.38675896 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.391178863 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.385332848 seconds)
  done (took 153.614179983 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.393700728 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.987041708 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.393728232 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.524325355 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.414372167 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.391557313 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.523727092 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.449996805 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.394852541 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.391443786 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.391274044 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.712054071 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.396031291 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932278175 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.581979215 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.527100817 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.927711615 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.395561099 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.392201203 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.392771011 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.527445187 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.401856274 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.711416367 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.989132893 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.395894175 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.989794997 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.383589577 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.394201914 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.392020441 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.989206899 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.393056881 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.713048043 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.472536257 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.454373266 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.992316613 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.935527615 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.937826849 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.538922704 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.391749738 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.39348227 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.392740429 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.383412405 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.989815832 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396480623 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.393554199 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984560155 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409404348 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.395914993 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.403465911 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.392389577 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.454364014 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455801932 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.717802553 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.997908382 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.47315627 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.41584908 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.525205208 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.794144155 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.395645052 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.934761754 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.383602226 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.971007769 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396441227 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.384016984 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.395458909 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.4019422 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.54855541 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.526446263 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.935443065 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.396492916 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937819 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.549409633 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.393207703 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.393733274 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.396979714 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.966988183 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.937544023 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.54803199 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.532548767 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.589389851 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.385540581 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.39536193 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.3844413 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.474829822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.395131245 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.971580213 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.938876757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399820232 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.397134498 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.39647791 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.398646631 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.573989917 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.970559957 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.47339511 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.932956092 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.71743966 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.70156609 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.397034866 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.457118403 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.396187753 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.703497624 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.396615647 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.455746609 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.862751877 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.703488476 seconds)
  done (took 166.40866298 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.641324931 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.636422992 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.490171819 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.509577053 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.925870558 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.977774507 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.620320312 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.517641202 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.503398894 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.644088846 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.558554619 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.48721406 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.586958912 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.473124965 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.105207348 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.463853156 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.493622211 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.527870066 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.510446807 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.42087818 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.02343552 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.682192907 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.571160094 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.500685924 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.491445147 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.159648165 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.943202578 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.910766469 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.567641165 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.651173243 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.899978396 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.519237835 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.34583914 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.062160625 seconds)
  done (took 66.749792517 seconds)
done (took 700.749107439 seconds)
SAVING RESULT...
DONE!
