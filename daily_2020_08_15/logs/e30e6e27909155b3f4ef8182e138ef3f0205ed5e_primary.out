cset: moving following pidspec: 26985
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.685980096 seconds)
loading group "shootout"... done (took 1.250966867 seconds)
loading group "string"... done (took 0.428473218 seconds)
loading group "linalg"... done (took 7.925923677 seconds)
loading group "parallel"... done (took 0.15943346 seconds)
loading group "find"... done (took 1.406254488 seconds)
loading group "tuple"... done (took 1.977957577 seconds)
loading group "union"... done (took 12.726978553 seconds)
loading group "dates"... done (took 1.351763772 seconds)
loading group "micro"... done (took 0.201083236 seconds)
loading group "simd"... done (took 4.362114447 seconds)
loading group "io"... done (took 1.042750368 seconds)
loading group "random"... done (took 8.836895257 seconds)
loading group "problem"... done (took 1.595465805 seconds)
loading group "array"... done (took 19.655286528 seconds)
loading group "misc"... done (took 1.580066318 seconds)
loading group "scalar"... done (took 39.72586375 seconds)
loading group "sort"... done (took 2.998682682 seconds)
loading group "sparse"... done (took 12.006056542 seconds)
loading group "collection"... done (took 16.638680203 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537048896 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131455384 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13451176 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123785241 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149889051 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.126005222 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133754981 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089423191 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.937392022 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151629873 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116232656 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.449146839 seconds)
done (took 5.636693077 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169067015 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092265 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082388024 seconds)
  done (took 1.50066748 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067242483 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142823439 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069017513 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068599396 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068326824 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068107378 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066956866 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066796637 seconds)
  done (took 1.878986928 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074679585 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069668416 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066638677 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069032409 seconds)
  done (took 1.6096202 seconds)
done (took 6.570729519 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.245783487 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.103202254 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.290621296 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.400850461 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.463178934 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092249205 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073913787 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070051272 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128694752 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330631284 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105178907 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.1841562 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089926744 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175818135 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.007666773 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.121243623 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084990897 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.123843202 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092339472 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130558092 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.41865754 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077722911 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073475033 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069449056 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066992266 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.635011274 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668355551 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129820869 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082444039 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100404379 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115863938 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.643142677 seconds)
  done (took 10.759194128 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09602005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093665415 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068756478 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125003764 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095379806 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070537562 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07489665 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067431518 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092230931 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126048108 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091908146 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101699625 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066638507 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069424139 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.075662841 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199000426 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078854293 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080257694 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068236873 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080718746 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111648252 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079854675 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079737878 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079656135 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129689536 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171424842 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098370386 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098686979 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066497138 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080531955 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11494641 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127861753 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06688787 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065239689 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122044687 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095648736 seconds)
  done (took 4.80000327 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.96930986 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093418412 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103501627 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.629983521 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064307801 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.151500658 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244444174 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073990528 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.433296619 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.146678469 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14275133 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148123989 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117593978 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067892853 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.236834357 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.114841138 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.410193725 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066759419 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065707187 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064711713 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084495742 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067604009 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.0668471 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063392205 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070483946 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095442746 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.08872223 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063791601 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.167251908 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951476874 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.249946389 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06820681 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16619614 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084211264 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.374362854 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070674331 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.084504633 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.416724769 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122636173 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06362836 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168234412 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118691051 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065095755 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119486263 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079112389 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069864346 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070789979 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071036765 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071841648 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079106852 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102136685 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066182782 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064786378 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166416219 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064426077 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.0662266 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068034155 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064169025 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14951836 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065101063 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.14279987 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064161715 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068571753 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.101950119 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069267914 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090196717 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064142001 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.102043073 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338244869 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.035413605 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066487222 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.019557656 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078272421 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066398951 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070924903 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06512374 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066511378 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067130506 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074415766 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070560571 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067102768 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107579521 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064829551 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068507475 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065397659 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073964518 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097936957 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064459262 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.476908808 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095966758 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064963613 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075646489 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103837852 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065414499 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070858177 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065929733 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065786508 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065406379 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066971397 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07008055 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095974835 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069728887 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111049647 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.026104041 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067647736 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064865927 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070878279 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069143223 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068963681 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064829575 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067748221 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066180786 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064478238 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.111877643 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067594377 seconds)
  done (took 21.829916662 seconds)
done (took 39.685908747 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262808774 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081831522 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081812622 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08183417 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081944205 seconds)
  done (took 2.016225039 seconds)
done (took 3.464423802 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.110613959 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063748355 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100452144 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100200552 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06628239 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06438372 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098683853 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064005391 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098702576 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.101074821 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102762592 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.102144161 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064084879 seconds)
  done (took 2.555442558 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070545575 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081449595 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084046265 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062038214 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072718388 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082010741 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062102039 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081259725 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087714553 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081690486 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083882473 seconds)
  done (took 2.258195209 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070725271 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081408956 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083358994 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061560624 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073473055 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082459815 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061869467 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081283646 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084869756 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08191377 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082223 seconds)
  done (took 2.247149627 seconds)
done (took 8.46207417 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.068355817 seconds)
  done (took 1.452321812 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.537208409 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.594017563 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067681475 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.089277033 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192604249 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.099158734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.224830115 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072290972 seconds)
  done (took 8.445629619 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101788172 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069493103 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067810578 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069525632 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069352363 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069224916 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068380951 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068085981 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068710035 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068450523 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067671188 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067811997 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068203442 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069757155 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070103218 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068393122 seconds)
  done (took 2.612750277 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098923796 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097914195 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073422659 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07367412 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071820937 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07107401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073550928 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073691895 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070164415 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071326238 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073695905 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072646672 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072183694 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063801896 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074108578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074696056 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070482096 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074231556 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074273746 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075348368 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074115212 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063682105 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072210103 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073738548 seconds)
  done (took 3.298320001 seconds)
done (took 17.211953747 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116777818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076233087 seconds)
  done (took 1.581360414 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.070508792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071118825 seconds)
  done (took 1.54472891 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076993882 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061523405 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082689976 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.072895364 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061907328 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06136177 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081386171 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062151272 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06127895 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061602993 seconds)
  done (took 2.087581117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064687683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071788644 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068748016 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.071207695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068320738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062203391 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066031368 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063319856 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070959198 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060490952 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065267037 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081062221 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06492725 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083031743 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064897157 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065661569 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067570856 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064673055 seconds)
  done (took 2.63653947 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062107649 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062984509 seconds)
  done (took 1.54062078 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066280566 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062566606 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065518056 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064898656 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062369342 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06097812 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06124885 seconds)
  done (took 1.851082653 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.423427858 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120643142 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.347757219 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069372396 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078701959 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255435942 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063326688 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068203653 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068013802 seconds)
  done (took 2.947559886 seconds)
done (took 15.608090401 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082365152 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084312807 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.090653747 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4288452 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092913937 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066876928 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112817421 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176576806 seconds)
done (took 2.566675061 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216262467 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.397393494 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.938808302 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064713956 seconds)
  done (took 3.81679401 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341564647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085864548 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078033296 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067892877 seconds)
  done (took 1.997995713 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065453657 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0719312 seconds)
  done (took 1.562258427 seconds)
done (took 9.023687597 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064574109 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063576008 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09097457 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063696556 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063653417 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063803131 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063460451 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063083124 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063297297 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.063328333 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.063190669 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063401296 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063453939 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063415042 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063474279 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063041095 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06368649 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063693591 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063578436 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063092531 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063554995 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063027688 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063494014 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063298759 seconds)
  done (took 3.001881449 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081374723 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066060797 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067233662 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067204286 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068109697 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067193417 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067062962 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065869222 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067415496 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065486529 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067440236 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067824601 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065455787 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067819462 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065587092 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067815213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06732625 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065636245 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065291998 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068016643 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066753656 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065653646 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067347956 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067099375 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067235281 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067959524 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065198752 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065570701 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067260868 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067908728 seconds)
  done (took 3.457460915 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065015527 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059860148 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060869737 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069023893 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060545514 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061076485 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060894532 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059862296 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060321481 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061558715 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060773902 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060356521 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061025656 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059858349 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06009366 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061024781 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063928242 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078388336 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060154878 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059858748 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064506497 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059909607 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060108565 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060130931 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060617108 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059828195 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059673594 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060345606 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060271558 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060882421 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059906994 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072986732 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064833074 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059836799 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06948553 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065246511 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060151602 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064033978 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061174153 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059896216 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.05947218 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059909071 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059787918 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059848037 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069371191 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060073439 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06117566 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060451269 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060198933 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059627982 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060083203 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062263928 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06554778 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061650882 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059760063 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06107852 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059885203 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060763423 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060190033 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059473261 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059761386 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063261457 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061719229 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061127856 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078513422 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061889757 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069270382 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060040993 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063571001 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063187872 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060795112 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076426084 seconds)
  done (took 5.924712414 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086736423 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089304092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065733976 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066011984 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061189744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060938327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068402913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060774445 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064919486 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080404985 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060579133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064789378 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06486841 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064989221 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060848864 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065028484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069683854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061015849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060667568 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064452797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060662478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068183046 seconds)
  done (took 2.921902259 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.142340914 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066904328 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104953976 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077170584 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069328786 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077256055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066395129 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06617024 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0660498 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067056817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066981727 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066332609 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069012683 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067218931 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067058899 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067307187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066462401 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066633727 seconds)
  done (took 2.783738707 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07851949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065942004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089255807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065994059 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065854771 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065781442 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070509528 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071072071 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065441009 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065841118 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070484037 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065457128 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065786372 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065787145 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065842491 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065896605 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065398459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066030012 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070624559 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06998171 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069903993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070813086 seconds)
  done (took 2.95776332 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075996707 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064927192 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07887822 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067141906 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061090743 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060724372 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066038904 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064972033 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065686738 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064262778 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06518787 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060769499 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067075818 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065450995 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067037094 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06485928 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064605921 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06532165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064616583 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060342911 seconds)
  done (took 2.757537015 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087844255 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063644145 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063500617 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081977475 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063185286 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063530864 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082279205 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06324033 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063813265 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084638551 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063200327 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063437919 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082671866 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082245044 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063205621 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082272071 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082184546 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082647494 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063788042 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063490676 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085168833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063528772 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081978621 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063582725 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06334584 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063946711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063193169 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082229294 seconds)
  done (took 3.457652888 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06426253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06277953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063492662 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063322772 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063232265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063117518 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063222316 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063328881 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062894796 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063781284 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063103596 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062865989 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06357306 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063419529 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063951231 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063019629 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063118056 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06346127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063481326 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063413904 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062983042 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063053155 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063115166 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06345779 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063246634 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062937757 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063286621 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063725077 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062834303 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063200392 seconds)
  done (took 3.347953956 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074999305 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07251356 seconds)
  done (took 1.596951703 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063213991 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077390003 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060306354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071049205 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070017623 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063723064 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070422991 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069408829 seconds)
  done (took 1.988860713 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.068124307 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.091292302 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.06242557 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062832841 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066348776 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122034309 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.077372528 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072778851 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.077652992 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064030372 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062816283 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07435795 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061697904 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074082192 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063752751 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070010579 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068353917 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073557838 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073825929 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060273309 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073559305 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062913564 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060581122 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063037896 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061983611 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068220967 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077078627 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073317527 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069843857 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05960263 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080385214 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060754993 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061996651 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070002051 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06581374 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060681972 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097387868 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061122343 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066963168 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060445108 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07295243 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08087488 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075253659 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078207926 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062829069 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063123745 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060884251 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063322583 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0640898 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069390813 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060559575 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067788496 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060344344 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.063249905 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070914119 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061070467 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067193421 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069600456 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073468652 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071086866 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069270774 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075475845 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069287563 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069124745 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061572505 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078928323 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061640194 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071826465 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073567978 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060926054 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073100965 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059064656 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05851222 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06000176 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092912789 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062803607 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.06180681 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060897813 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06071842 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062321464 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069817609 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066668822 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06737304 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064691135 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076000044 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067821767 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059152042 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067157981 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077181599 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062795442 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059858679 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075487473 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062830705 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059489738 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076959938 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068834507 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061699748 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060718654 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062436979 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073645565 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062597851 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059790627 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068648356 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062737848 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063941132 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066210802 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067793183 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060609242 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070415964 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.066388617 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062609198 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059316344 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065153391 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061695701 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063426787 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069585755 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060786026 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075826626 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066737173 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074774808 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075004748 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070961304 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076802413 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060727711 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059743562 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078804279 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.199105727 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061050492 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07818 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059320189 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071311952 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060593995 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063081084 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070196674 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059946951 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063151147 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061461221 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067683352 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.0630195 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063579068 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065604573 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06906777 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073629546 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06286006 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069747514 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061385073 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076150626 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070059577 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065011848 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065607203 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061939134 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073756835 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067193233 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070503648 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061056852 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061872911 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061202912 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0716826 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070114815 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063067046 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069952358 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06516859 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061802145 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061190195 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062017254 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064011845 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065634949 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061468741 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068282454 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068903334 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074940698 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071779199 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069426666 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059483954 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06033762 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062675088 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060165624 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064776638 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069734867 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075536806 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072335323 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081231337 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060920916 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070141478 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062438808 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07738208 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073688478 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061840861 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066594661 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059387148 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061314782 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068453578 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070669578 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073134715 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073649949 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063743017 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063843115 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060511621 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075090209 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061069268 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069074844 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070071264 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066560565 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.06072014 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0625692 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069619416 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065051602 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060874109 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075908928 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068047835 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060911627 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074867477 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061516256 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072118194 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060440284 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064101931 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0656974 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063139146 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069626198 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075913826 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05974472 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061519112 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076513036 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063095809 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063230863 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068608508 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07458527 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063962358 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067413365 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069976665 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068943014 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064137455 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068668995 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061171737 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068569793 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063403751 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071140553 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059830664 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076860236 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058752655 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07405239 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060303667 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070848107 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060257471 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068680392 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060819101 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076264071 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061324166 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061044215 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071264753 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058422147 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068734125 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059444149 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064091578 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065853432 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068655794 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061707089 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.203432684 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06290686 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069274694 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064523225 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068373289 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.0694416 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06516537 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060722945 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06901738 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072355097 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069415688 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063238166 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063361719 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061871074 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070980133 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063098799 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063086393 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068762196 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065511042 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066762459 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063450382 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062754292 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.06268905 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068309894 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069634431 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077412041 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068402534 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06671278 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068573197 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059328611 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07476642 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.05961759 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066876052 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058886344 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06714269 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068864764 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.06058651 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078457885 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061437345 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067643934 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072010641 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067980721 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063170329 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077957558 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064215062 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068847049 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068458774 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064660487 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067121923 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063173756 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06859711 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069670715 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071255299 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061885199 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068199117 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069480652 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062977143 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070474366 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063357144 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069045777 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062780597 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060084202 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065154117 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072275596 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064499183 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064936831 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06006646 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058927952 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060319196 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067527361 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063745913 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067870542 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074879224 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059196444 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061121069 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059920667 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066745299 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078898968 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070460919 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06792701 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065364339 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060565497 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063174615 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063174872 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061352626 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065212506 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060005221 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059761297 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069928268 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061702935 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064593877 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060994391 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06107668 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069182806 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066960028 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061461697 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067683141 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060855666 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065577831 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059975616 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062838715 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065410635 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059770454 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063564159 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070337478 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075669188 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066003792 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067938311 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060539416 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067109312 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074312602 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068297275 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06078587 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068944828 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058984246 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077587796 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068606656 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068336166 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070692358 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062129223 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077623205 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063874642 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069087683 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075613007 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06167683 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068890321 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060523914 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075426958 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064120842 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060328255 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068389674 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067721295 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066158846 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072837464 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061638327 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068761729 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067074745 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064122705 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063267321 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062675483 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069243395 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076339875 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061756717 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065913036 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068138572 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068556629 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06480337 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072935943 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068185955 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061814618 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062789638 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063943353 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061349916 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073046769 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060147131 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063902055 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064319454 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06033873 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066783014 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075405242 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068067069 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06792046 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058662928 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058542451 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076142583 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062179124 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062767726 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066900618 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067754514 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071031177 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068501917 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074830158 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.05990762 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064924678 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070838078 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060152215 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059447921 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06317671 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061195675 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067871828 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068792479 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066112595 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061099314 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065386343 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071360851 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06025108 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062964712 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063730952 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059169273 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068122896 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066021853 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066816081 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060047303 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058194461 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061500281 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06655079 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065339664 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066776937 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059903587 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065689283 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071528872 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065521937 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062276954 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058131012 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062397137 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067381585 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063714848 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058673896 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063075541 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062172196 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066160466 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067474646 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062629663 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05810447 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074984682 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066165945 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066897035 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060358467 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060527469 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059519226 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059288584 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069751668 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059633774 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062430457 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064619908 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061417142 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076435014 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067288861 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074883785 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060679553 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063829789 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058984315 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068921314 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063953533 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059808159 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06952245 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059015777 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074329179 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.07119799 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068205776 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059567367 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064629886 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068111009 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073557018 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067314824 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067319345 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062248211 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067638624 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060628765 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068828453 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058661463 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057857803 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069809963 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067894642 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071636504 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059398082 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069512385 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061147579 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067109934 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067419336 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062429265 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061688858 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061490185 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.317963103 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066984411 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072182536 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065701801 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077480736 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.06304744 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073244621 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070857079 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.073340748 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075061179 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073930911 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068874864 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062018303 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068348701 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069409304 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062379556 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066491748 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065036365 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083183155 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062752122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063170882 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075183336 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068487975 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061338463 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068875687 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064912581 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070803442 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061293032 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070556188 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064969096 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062206857 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064680929 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064590994 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0593029 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059925617 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060434293 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069957841 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064096367 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060513823 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079691472 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062053573 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068619796 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071415224 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067331322 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063192086 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059930228 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061987396 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072680824 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076172726 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063280507 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068356311 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0620627 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069190027 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05878029 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068845766 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084788684 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067809182 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059897006 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060343503 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073953082 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075123693 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064380661 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068977236 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068840791 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061634633 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081015433 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069177788 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061168503 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070338318 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062572403 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059203965 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059076396 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062096597 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071585386 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059673014 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063120025 seconds)
  done (took 41.643513819 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10169592 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062595905 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060802952 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060707808 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073266066 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061657833 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060888072 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062083869 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062129711 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064585095 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061323458 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06102304 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073479209 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075733298 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072320871 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065417293 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061403637 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062980051 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061079727 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061912936 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070328111 seconds)
  done (took 2.963300991 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069572328 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077391966 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073837911 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078733592 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070292188 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065862795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07349723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066036658 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074826838 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072194468 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074406281 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066489208 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071520293 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071485014 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071369314 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066632998 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073975381 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070037515 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066166916 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073574905 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066318287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073647574 seconds)
  done (took 3.107536262 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063267423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06154175 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068500019 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059294831 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05929093 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063236462 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059149944 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063749182 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064019672 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064493635 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069582771 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062344861 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.06120586 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066849195 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060667149 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061964567 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105743321 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061841879 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061877255 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060468231 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065981114 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068431054 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059408132 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059867794 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063809382 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063062345 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059485415 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062605507 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060999773 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064926382 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061737306 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060726257 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069257505 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068546905 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064657515 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064400641 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062620032 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061438432 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060558599 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060584365 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06870188 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062030442 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060962308 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061872016 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069345395 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060448501 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060598098 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068915946 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060396858 seconds)
  done (took 4.681133692 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07361541 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112281348 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066695971 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092234618 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075163683 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068376738 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066689667 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09315093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062053496 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06281015 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076326646 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076729123 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06445038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066445083 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068127777 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064501961 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064923891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063135747 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067362931 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063667434 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066556698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06671445 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07358074 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073852992 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063908745 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062018498 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062430336 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064570353 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073485131 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066987779 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065533103 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065292035 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074008411 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065271075 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062311137 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06248633 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074389315 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062976846 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06334817 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060924106 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062634371 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066264445 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066822247 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074873201 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06275493 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067176402 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063098231 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060490041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073777836 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062572371 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067030883 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.0749567 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063972058 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063289381 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064064078 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073546078 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062842695 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061248397 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06294797 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073395525 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061203501 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063699027 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074714761 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062342527 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066509534 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074505168 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06737623 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064070965 seconds)
  done (took 6.328357686 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072405992 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093674044 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073259209 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072963777 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07217126 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072361013 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072146621 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072253831 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072120888 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073092762 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072446376 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111924652 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067600909 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077379203 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071842603 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071712526 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070745019 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070319321 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071904099 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071908529 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071645551 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073117626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072398541 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07261877 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075199056 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068615613 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071964309 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072069063 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073295872 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07217844 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075041035 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072008646 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072237534 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073112301 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075980936 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072012761 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061938945 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071787691 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072612161 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072023111 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06806631 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071345516 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070197328 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06624079 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070403348 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070543295 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071344405 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073337247 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078563694 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070852259 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070289527 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071470965 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070504758 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070586967 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071284489 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079164014 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0717057 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071117162 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070756677 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071319249 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071386436 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078981102 seconds)
  done (took 6.103482635 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078311354 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069171427 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082016071 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063226675 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060259206 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070778425 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061218931 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060546488 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069214868 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06954906 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07130054 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071449487 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073516823 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071537699 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070912604 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073267585 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069505984 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069128856 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067355399 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069108552 seconds)
  done (took 2.962891544 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074596287 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079197837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067493244 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07106918 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066263003 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071090638 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065633208 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066947825 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06736591 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067207957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072506722 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072580489 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066853631 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070854071 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07248498 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070976261 seconds)
  done (took 2.686912254 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068500246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.0695281 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068897795 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062624596 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066077745 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06162636 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062159419 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060485862 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060865328 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075475324 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062446579 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073526638 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062393232 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061091367 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06181235 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068155071 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061357853 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062020079 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062167671 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067395252 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068682571 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062165794 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064522614 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060796599 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065761963 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068041685 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062452095 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064959386 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061717721 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062588302 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067926101 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06871761 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061593092 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062587456 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060842814 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061983812 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062097492 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062926301 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067483769 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061685268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060245604 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066004777 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06124248 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06276177 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061216595 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062733406 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061152654 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067666162 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062262241 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067056835 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061851182 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063817163 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061857739 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068874984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063250284 seconds)
  done (took 5.093648671 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076931611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066408249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060964485 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060739482 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066293426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066551204 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066473397 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066719257 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0670085 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061234814 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066470903 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065658098 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067032354 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066132786 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066754277 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066359602 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06037744 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065985941 seconds)
  done (took 2.761784193 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07266154 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06620686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070488725 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066121413 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065790557 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065051421 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06157253 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060821336 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06115441 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065364239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065405794 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064974019 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061081998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065112408 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065401418 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065498676 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065570157 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061535688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065382519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061091106 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064899834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061248457 seconds)
  done (took 2.993868019 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.090431431 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085296497 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.126317375 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080082502 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088013475 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071924921 seconds)
  done (took 2.112081341 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092272432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104266988 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065720384 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065746972 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076500447 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069610519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069390381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069581436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076214321 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074518862 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069581721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076191305 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076436001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071509764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076631426 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079393207 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069909359 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069552382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06581602 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079368469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068779976 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07583679 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06839393 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06768048 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068601105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069673848 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07762754 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072763925 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069919037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074784039 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077770809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067944173 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075063637 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072552839 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064318148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075475596 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068900202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077660861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074448784 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070079638 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064134193 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07478893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074746161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069861961 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077739672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069112448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070207642 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069455525 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069930635 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08197517 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076926894 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070114035 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076212592 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079435406 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078589178 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081766458 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076811184 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070174988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075005999 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072830833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070367654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074725953 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070089313 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073289003 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078638672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070319158 seconds)
  done (took 6.426124198 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099764895 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066529468 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070418802 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074627888 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071824767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069827246 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069886667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06977371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069960225 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066660056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104757282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070890022 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072052911 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072220989 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070357846 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069507321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069862641 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071754639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066902628 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08213872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070135906 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07188796 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071841354 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071986269 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074462692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079903996 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069502945 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069273497 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069694868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069564182 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071679449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069914151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071992347 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066385551 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071876604 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069666836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06963509 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0719072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069416683 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076787364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071575368 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079648983 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068712027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069809446 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074466877 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070080025 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069438435 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066328647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069916814 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066119187 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074106911 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074381253 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074508901 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071795392 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069880499 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069845153 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069593216 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069941094 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070052784 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079514409 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072017521 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069638405 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082072312 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070068866 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070047682 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072330312 seconds)
  done (took 6.3595058 seconds)
done (took 131.848380336 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.2116063 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182343642 seconds)
  done (took 1.94516342 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074567376 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097765486 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075677388 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13353581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070030448 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103227221 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10287263 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07407569 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069425437 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070492597 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070325968 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07201242 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13499831 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069254192 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069012828 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071934586 seconds)
  done (took 2.92757416 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107110968 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.186967522 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111888953 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068746931 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106309794 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076286702 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06854825 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080053295 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073050997 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072666187 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076626253 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074867014 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071841189 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074763217 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072755255 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076107114 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071672227 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076244161 seconds)
  done (took 3.122589002 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095174457 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085971727 seconds)
  done (took 1.761516694 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159650473 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103108568 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142966067 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.324131783 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133025117 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279270754 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128454901 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125752401 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10912924 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12253551 seconds)
  done (took 3.199200928 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104307697 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168267211 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305549165 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11814868 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07343816 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.085332645 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120527126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079096739 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078230645 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079506377 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080116742 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079427822 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098376138 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076070313 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076283577 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07656569 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102051936 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075317025 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075185964 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076349501 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10149473 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069534481 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076449319 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075296095 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077884484 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078020713 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07090212 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069050574 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075882826 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075449483 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078458067 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.084006819 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078126583 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102997293 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07402702 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104219667 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074693761 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074061313 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075173183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073934435 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077025679 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077262822 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078154823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076447763 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070843924 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074523085 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070512323 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069398281 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079476899 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070751022 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07938235 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07695497 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100689975 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069393157 seconds)
  done (took 6.289504805 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111533268 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105853533 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069031886 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114162102 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104662719 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072626761 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106158873 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100638316 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109218625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069404258 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068676308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068871495 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077333619 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082100735 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115297865 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107394938 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069718728 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068478994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108747578 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109120428 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068744947 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1024201 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098554678 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108738503 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067809732 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069846227 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067829743 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068420509 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074857926 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076200676 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068652665 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076992586 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084973575 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07405638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06720545 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067847181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067873617 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076351292 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07722292 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077447953 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076289837 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067587778 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067871217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068515808 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069371472 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067187246 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07571355 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076778918 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075913917 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068013614 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068768977 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067771905 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068835427 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076735203 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075675289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078191751 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075982533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067812998 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068258749 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070204659 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077576743 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07857118 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077576921 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069955059 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078485931 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068258794 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079180292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081443924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068473409 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068502509 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068098627 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068145787 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068736835 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07576819 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075688685 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069236993 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068050398 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067784391 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077994477 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076016807 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068234543 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075406318 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06755742 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068562716 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068960538 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068672988 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075395433 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077278991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069519282 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068010932 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067921203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068142048 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067963535 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.0757259 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077116185 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077353008 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07619703 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069139802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077404397 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076419877 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069124084 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076038068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068783584 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068574093 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069010329 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076309533 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075573001 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077879854 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068704533 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068117377 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076192945 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.206623519 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067126763 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074126901 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076948316 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075888813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068249654 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081297821 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069654544 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078611467 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069134597 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078370038 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069082043 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076286006 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068859661 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067455674 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06873128 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076385041 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069523232 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068679998 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068863242 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068036609 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076450807 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080290802 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069987348 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076524271 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077297423 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069055871 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076536642 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068754891 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077217713 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068561398 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068760659 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067803361 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078694779 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068913332 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069207666 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068127755 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078408917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069319134 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078724248 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076218204 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0681246 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082089475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07876653 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075817309 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078209978 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067815835 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06703712 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066755207 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066499285 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07533664 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076238434 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06900106 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068537023 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07483269 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077904169 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068223625 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075924071 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075449363 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076101555 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068870301 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067903352 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078666043 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078539793 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076127045 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074887742 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075243519 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068838104 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075729508 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076284648 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068548648 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082205905 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069094215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080381951 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076791803 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075500239 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076850662 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078033019 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078518084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07886717 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081009064 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068326317 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068200921 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076389412 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068215774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06832844 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075892692 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068761396 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0684714 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081308604 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067302331 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076752404 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067919005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07706531 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068275275 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068750085 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081221679 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06919626 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068775379 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076474568 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068709185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075776847 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07960611 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076490221 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068260612 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068896628 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077112209 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077179337 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068782898 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068362679 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068936022 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076294305 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075851029 seconds)
  done (took 18.521365554 seconds)
done (took 39.360430881 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212019616 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164512574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19805979 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117359586 seconds)
  done (took 2.364232324 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.098676709 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099164175 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.078761954 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06536562 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.084767518 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064879008 seconds)
  done (took 2.107351178 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284207671 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197239971 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175974192 seconds)
  done (took 2.260698592 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221517701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2002062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.483439483 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298997443 seconds)
  done (took 2.914690503 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.135244486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081841313 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063820934 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.074911079 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.113031541 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145730633 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091666743 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.115243977 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075285452 seconds)
  done (took 2.5665729 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.134736925 seconds)
done (took 13.98009801 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101855013 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.255790913 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.241878627 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.112276673 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077058383 seconds)
    (6/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.174496457 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072032806 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 0.259996485 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067728729 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.281379794 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194668521 seconds)
    (12/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.184851541 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076095141 seconds)
    (14/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.178792506 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07489008 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078639997 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069973378 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073976277 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.405817082 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07219007 seconds)
    (21/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063756806 seconds)
    (22/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069434445 seconds)
    (23/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.174984242 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145057978 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082926873 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.177282589 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074683351 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.185042308 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076261944 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.244028456 seconds)
    (31/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.151952224 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127527934 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084846372 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169309995 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073060447 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.127510525 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079857861 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062894255 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06535728 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078473555 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13127047 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174244384 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064471572 seconds)
    (44/309) benchmarking ("sort", Float64, false)...
    done (took 0.131226876 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161978126 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078006199 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072260706 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184904712 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.150123294 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095734259 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195733923 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068402276 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.065198585 seconds)
    (54/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240836701 seconds)
    (55/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072957179 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.150851023 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078090282 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09265741 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1240977 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170294264 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06460889 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083276753 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074334921 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09195217 seconds)
    (65/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.187586209 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063529666 seconds)
    (67/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065977998 seconds)
    (68/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079204165 seconds)
    (69/309) benchmarking ("sort", Float32, false)...
    done (took 0.133438798 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08523154 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066564031 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079940146 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076524703 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162267912 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075954044 seconds)
    (76/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.076902269 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17119215 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076835748 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067200975 seconds)
    (80/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.074373515 seconds)
    (81/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.191589077 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095067164 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.373102002 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077614131 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065091388 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.145351117 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07839004 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064793354 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073833017 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126727479 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159980254 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.197418301 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.092312768 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081486357 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095406234 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193234876 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159106369 seconds)
    (98/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1475322 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067339979 seconds)
    (100/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.188990972 seconds)
    (101/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066187213 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072037497 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065314177 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210407204 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072088493 seconds)
    (106/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070690901 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086581037 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072549169 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062463734 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068461621 seconds)
    (111/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075051427 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066822352 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161373298 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065699756 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088737351 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.223895901 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078319332 seconds)
    (118/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074145512 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074186034 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064566552 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080513775 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092139278 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078221888 seconds)
    (124/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067689385 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065544914 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064232749 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.210955426 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143795305 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.164591747 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07540033 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065624227 seconds)
    (132/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.144194179 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064262652 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064361568 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076798672 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087950342 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063875255 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066053183 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.135526459 seconds)
    (140/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065195799 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07157061 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074642092 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130580524 seconds)
    (144/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063234057 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.20674216 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063947302 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072318005 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064928899 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064004987 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07565285 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065615475 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065172215 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063290623 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06426654 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116857742 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113607656 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080404067 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066527546 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074000185 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089046519 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090349323 seconds)
    (162/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071298476 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146170393 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176842916 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070487867 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145133692 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063019026 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070678588 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066637171 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063421833 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063706252 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066252998 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086167755 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06581661 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142573354 seconds)
    (176/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063620631 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072148792 seconds)
    (178/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070331487 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064944778 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063040722 seconds)
    (181/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.127555742 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064222434 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065722531 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065471404 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073185396 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06719996 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089308764 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081332294 seconds)
    (189/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065706135 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065050992 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.152850364 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091734156 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219825143 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127314639 seconds)
    (195/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.223286556 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.149678093 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065896425 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14819017 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073043866 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072053528 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138191822 seconds)
    (202/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.094873673 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165594398 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065256531 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064626737 seconds)
    (206/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.219006665 seconds)
    (207/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.082142393 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063038037 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064025833 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071090385 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119709113 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141161323 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06327065 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092557591 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070896302 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112626402 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087552184 seconds)
    (218/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076281669 seconds)
    (219/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063302998 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064379514 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075043263 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075891123 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141385282 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074622774 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230469478 seconds)
    (226/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.150699116 seconds)
    (227/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074860313 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065788866 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064684528 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063858337 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176651598 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072348446 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206237486 seconds)
    (234/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065552725 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065888957 seconds)
    (236/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078849801 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0646538 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065172752 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075149977 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064852684 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121532338 seconds)
    (242/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064094754 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121204298 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072537521 seconds)
    (245/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065155449 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068176394 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171165658 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066295651 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179813986 seconds)
    (250/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066644213 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06804253 seconds)
    (252/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.065070556 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064059289 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064267856 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065896356 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162293832 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090835042 seconds)
    (258/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093172075 seconds)
    (259/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066280792 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071889934 seconds)
    (261/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066123918 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067605995 seconds)
    (263/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.149502415 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064720232 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150453945 seconds)
    (266/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080809128 seconds)
    (267/309) benchmarking ("sort", Int8, false)...
    done (took 0.17058719 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072947232 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086294077 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071569027 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08664398 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066125069 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064132141 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06577322 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129338301 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066115397 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064455646 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064537902 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063893569 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06408076 seconds)
    (281/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065485872 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064909436 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064349831 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065852264 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066156852 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064401638 seconds)
    (287/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064856127 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065125047 seconds)
    (289/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079766598 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065106505 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076042571 seconds)
    (292/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069558576 seconds)
    (293/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073256914 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071031612 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064667166 seconds)
    (296/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066283238 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065912934 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064803121 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066044284 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072753758 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065088564 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091364744 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067581653 seconds)
    (304/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069516516 seconds)
    (305/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.06528326 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06766056 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064712057 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065580614 seconds)
    (309/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066433065 seconds)
  done (took 33.169506856 seconds)
done (took 34.796727061 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087121934 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091938441 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073422291 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.086053097 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08172703 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097253846 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073704399 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078656461 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080716148 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079399495 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07943089 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072680307 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075308136 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075260005 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072983531 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089473817 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080704802 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073920622 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074103532 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064731813 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073814549 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065413347 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064382866 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071856502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077059764 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0731078 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075254784 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07533359 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066407484 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066088552 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070482682 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074846183 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067942328 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077507897 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07373266 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074383721 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075765658 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078306482 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064494106 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065577716 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077748905 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065668751 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074061653 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072189859 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070517208 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072723758 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074012552 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077756275 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089567889 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069991142 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076365508 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076507281 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077243274 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071220196 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070624582 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074273563 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071347864 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089241619 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074088248 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070010121 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075568959 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074907565 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072750066 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073877997 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074181658 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077083606 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077779785 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072383872 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076589662 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072754443 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064771003 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071928036 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068329256 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063592552 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075819355 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077547921 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06352261 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06928729 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073676222 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074017537 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064155218 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068878054 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062605323 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068441796 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067828004 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069949307 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068788267 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071391707 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062780855 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072757819 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072150058 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073460126 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064070944 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077881074 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064678562 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071733461 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065827282 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065413719 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064102995 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070592964 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065398696 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070002643 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073339809 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064051113 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070005716 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079602411 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064875311 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072806224 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064341706 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064239037 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076856798 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076297817 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065371411 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070146408 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064517136 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070587029 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064538227 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065199478 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06479447 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065918459 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069510202 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065223549 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069736781 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070322 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07833778 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064589798 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070013129 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069929719 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065288963 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072482394 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065697124 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065383602 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06425455 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078903228 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070047364 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065695255 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070697092 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070308201 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074094936 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064299116 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074714313 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071596324 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205818552 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070538819 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064564739 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076402498 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069607283 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070175406 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065424147 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065655494 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064306785 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065068538 seconds)
done (took 12.807022051 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066892284 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.095427143 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.074888088 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.082995431 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077592564 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064956914 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068759983 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08249946 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068972873 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086202074 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087684393 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086960297 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.094359321 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064398325 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065137252 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065913443 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064387859 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072114384 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080245237 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086576058 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094712754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064661215 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074984531 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081747842 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076516672 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.085692991 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066746389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066105097 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068324483 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082437885 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090539625 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065755889 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066785231 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080612121 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080152938 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073557968 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066745609 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07035012 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067078194 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06572125 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067527878 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080814522 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070244306 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074840553 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066558396 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066832064 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066915494 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.069167662 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077073739 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06973938 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073891381 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.078430852 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06803761 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065986804 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064155462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069927104 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065534709 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066220385 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066058446 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065611002 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065813263 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068255553 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066505444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066297834 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069554089 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068930661 seconds)
  done (took 6.484757593 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084856716 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095889268 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083675312 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083580676 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06622351 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066501196 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066480262 seconds)
  done (took 2.260119637 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067470844 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07976923 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083350886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082634856 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073609413 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083339805 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064745781 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096668561 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064814618 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077470639 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.112688969 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083273618 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067902396 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076248493 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06486211 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.073820283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066523304 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074811619 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074989788 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083020745 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070467975 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094361702 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080248493 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066504635 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.087246441 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0711642 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065175918 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066665383 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067481415 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067067999 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067163211 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106286915 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.070571693 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080839596 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067514601 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065689203 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072944906 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069410487 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069387836 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073067885 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07212945 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067732221 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064678873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06720636 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068954708 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070432794 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064700078 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067407713 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067024504 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078509563 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065291986 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.070511091 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069690498 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071492057 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073005469 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070921125 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074398026 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067676992 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079031476 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074503227 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067337234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076147228 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106742884 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072138801 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075236815 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070913788 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069388322 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069929891 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065875043 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066837599 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066152626 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07435624 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065379168 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068153527 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069360676 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06817362 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.070765199 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.083678216 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084053597 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079258406 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067483511 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067071878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070800499 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.083493032 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071114861 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06701057 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069846796 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065505479 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070745607 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067559704 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072675398 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067593554 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074707809 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068973418 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070114734 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074378648 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066195826 seconds)
  done (took 8.797951422 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070323983 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067831737 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069361281 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067756199 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067895075 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066699283 seconds)
  done (took 2.154224007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09163904 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066940036 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080838084 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067366587 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102745446 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072487731 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074347837 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076390856 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07930332 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077989618 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073232332 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07531203 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073632979 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066910884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072844512 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066438414 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072583069 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068933303 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07945919 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068986267 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081395892 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06852587 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068701749 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079614308 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07010666 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068079492 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067256167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079113929 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078802148 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078688785 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068812711 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070124131 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075372006 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076328108 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.074485273 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074729326 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066600439 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072647983 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068975862 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069727735 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.07686585 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069093421 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069213565 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072628388 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07568173 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075109377 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07278749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070699353 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.074259007 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072764364 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073003193 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067693028 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070494143 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072899221 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07515965 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07616408 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073137027 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07440954 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068579994 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074904063 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06659216 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070093017 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0754535 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069911004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07109111 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072538218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075614251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068730111 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068817652 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06737662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072661507 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066630991 seconds)
  done (took 6.978069801 seconds)
done (took 28.371131845 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.982064294 seconds)
  done (took 2.669818124 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.571775902 seconds)
  done (took 2.301927636 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.681061378 seconds)
  done (took 8.408287188 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.290766663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.329729781 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731696582 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134682522 seconds)
  done (took 3.237467878 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715187517 seconds)
  done (took 2.453327951 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236474293 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226465094 seconds)
  done (took 2.199144146 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.353187873 seconds)
  done (took 2.08259423 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.142543012 seconds)
  done (took 2.865350224 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.232587635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158061039 seconds)
  done (took 2.124391747 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47339455 seconds)
  done (took 2.19902888 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.482407814 seconds)
  done (took 6.211338843 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240884846 seconds)
  done (took 2.009992129 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236515829 seconds)
  done (took 1.969073719 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744905066 seconds)
  done (took 3.471882366 seconds)
done (took 45.943059429 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083342152 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0847053 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083195299 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078497359 seconds)
  done (took 2.035253629 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.074984702 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.07008636 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073963018 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073062536 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071562779 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070111506 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070801547 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067602401 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069265429 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069583763 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068522162 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.06992716 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072521626 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069455821 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072233303 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073578149 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069480038 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069522439 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072827159 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069473871 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072494355 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069439557 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067660654 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06896556 seconds)
  done (took 3.426760174 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079528832 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07261378 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075505484 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071304682 seconds)
  done (took 2.038394069 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076832551 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085714758 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.08766701 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.093812295 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076433037 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076954591 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084351055 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085202956 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064836197 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088070021 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067514423 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066108311 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065896269 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087816095 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.084086856 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062419924 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064157912 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076883548 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075872559 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07813661 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067599219 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065183382 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076214082 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076433229 seconds)
  done (took 3.573764107 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080425373 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065344243 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079855026 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091198007 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092663496 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063414968 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077678024 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093411766 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140749093 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064604668 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070760094 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064800261 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107008057 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065248344 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081428949 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112005523 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115747564 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069267196 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098243198 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065302373 seconds)
  done (took 3.448981378 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078230325 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069225426 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07014951 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065198717 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076746502 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073066018 seconds)
  done (took 2.183612791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069232835 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067313996 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067033511 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066490556 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072533858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067206565 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065959843 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067468663 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067790576 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067222886 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06680141 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065966746 seconds)
  done (took 2.552970604 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.166360384 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069587337 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070969629 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0688383 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071623493 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066226543 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081346417 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068269622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086399093 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066368996 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066309496 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068846362 seconds)
  done (took 2.694584389 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10077582 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131669572 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097130641 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073185664 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16975234 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092094758 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.08913336 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121138575 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091193705 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067666004 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091633249 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136942002 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096383755 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09886133 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082433795 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125661486 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111474611 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088856191 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114921897 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082759938 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071904852 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134639238 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070842236 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093149704 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102387701 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098929744 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111815744 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134550557 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084655307 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090575476 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083967713 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07464411 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107182617 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.08639778 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097339613 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091833582 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09636175 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083468617 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085639958 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119661635 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15223324 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099297141 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099114079 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133712271 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077282174 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107362023 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079463499 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096948804 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102717691 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091752807 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074341958 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091871068 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.107705634 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101081142 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081066755 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081121505 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118943585 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.099637576 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097107341 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081237378 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109606111 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.088365664 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110122943 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264685314 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139821612 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101119379 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134971231 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123438333 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094218151 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08858352 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090616122 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075517653 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110039112 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096105921 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135218852 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107956973 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097811611 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095198869 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082282343 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10623242 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113755643 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091876826 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094318411 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145915337 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109058558 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091725066 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09202796 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.145021694 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072333378 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148106339 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088377721 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120779563 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094678106 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136802457 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090343649 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082649254 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10666234 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101586577 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088446728 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100957326 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083546027 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111945496 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090740111 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099262861 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080396836 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089768589 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08568969 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096310606 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074024269 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103783444 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114761055 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112821859 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073852102 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107247143 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085329375 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077005196 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091651847 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138270773 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08239339 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074247724 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151168144 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092673707 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117340927 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110054064 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.084087026 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261532419 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135831971 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090888918 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088477591 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075717901 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153919636 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075217333 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118650472 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081998358 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104599589 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107524228 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133095687 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140602423 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097072853 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080476493 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093645512 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.110767543 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089367681 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087579098 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078588787 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.1069481 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124300887 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100055739 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080724591 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092684209 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068401058 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113384578 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0752676 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083281773 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094764905 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086624935 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089579327 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141160673 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083447951 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106954338 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096863705 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06652326 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090731789 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151999416 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082169465 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110700738 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115433011 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083266839 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067336279 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095058788 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072330334 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107934502 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091947336 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107663393 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077583537 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106220855 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068073879 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074319574 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127937527 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101548965 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088610429 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132134328 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105484911 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088331227 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103170912 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096779569 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094695741 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102420453 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.106231179 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252930944 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073788425 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12907245 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089633075 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078512679 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088785563 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081060068 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.080781129 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102250336 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11753819 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090660698 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103897099 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105459655 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091865158 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.11330077 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090431513 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081025362 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13432827 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077758873 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076153745 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089909181 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.108559968 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090042824 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.136762307 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082114728 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137107085 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092538912 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082725953 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115771851 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071365201 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071383421 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082966448 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094362833 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117900601 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081063234 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08044218 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120166935 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133868365 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097305956 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102333451 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067607613 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089500926 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134948916 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.114334596 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080619689 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109422935 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084137525 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129391824 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095326137 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12026124 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106134416 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11048806 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091330829 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.081251385 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073081299 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087402682 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110552467 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085885604 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08161064 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067431678 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074556107 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092425363 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089088069 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111090223 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087120144 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135220097 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072958789 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100546861 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10637788 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254785152 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090177227 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095893739 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092952183 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091225026 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091128827 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091683358 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073015919 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125553216 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103122227 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077979658 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089067358 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093891097 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106022012 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108196081 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10920567 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09345481 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106384244 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122505408 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098627875 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082070677 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083902381 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092153237 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085537423 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081061362 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102908288 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11126716 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099036524 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108551947 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094948577 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091369276 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106768301 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092484572 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087875636 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.119047734 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153508569 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.10136592 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104338071 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084704091 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106230664 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105198106 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114043307 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110313043 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108170161 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070144608 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074620615 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070242927 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106213407 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078759744 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116455251 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078213802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108602913 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099047403 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082242931 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068345615 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104267802 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09557188 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.085725269 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125833171 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11682129 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074828306 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093263392 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110217543 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084323093 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124064683 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.10194514 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101658313 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072222213 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091664106 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073606928 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257393201 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102327635 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077102182 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076715007 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070264852 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107053608 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083618709 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109290088 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088249426 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101287998 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121171442 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130246101 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086792845 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096576329 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117170066 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113819091 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081859218 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112918123 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135833888 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119999244 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080486063 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.083978505 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10576719 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10710572 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104357405 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077705076 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081572293 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111373946 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115945757 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069778954 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087091875 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07179886 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.085356992 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112440134 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093999942 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081576675 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116966915 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074691091 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10935989 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097237618 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124321303 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124328796 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14642655 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097320252 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085341424 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076262522 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124147171 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070390891 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117037654 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11138862 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087147913 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068126075 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084079277 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.095638369 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624439106 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108737656 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076284152 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136410596 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08929264 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11896781 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087434762 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.121979617 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091953998 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105045113 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093295693 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280765651 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082379495 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109140907 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.177803009 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109647917 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106833339 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07349752 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085933273 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074030519 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078648741 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080499764 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087702545 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109106605 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084550404 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10548408 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079371725 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105974425 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090887885 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088463173 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100115958 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080604903 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13841105 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086937705 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122008466 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106772458 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078705176 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074450258 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086401485 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102095897 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083961817 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09659905 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08049053 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.077793678 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154415502 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100538961 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084695743 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102332123 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092176203 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085735209 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091486744 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116813544 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109896657 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072673687 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087969324 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103573074 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079857202 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.0766471 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09771362 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069096764 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088108224 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098752401 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09651216 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089570914 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103990932 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07959655 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089662633 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112051771 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085377231 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076917212 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076601731 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076109503 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075907405 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103527978 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108634655 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11391396 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108482277 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091365747 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093422335 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079328329 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.22513703 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079873967 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245465582 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.1061313 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075993275 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13203706 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087358011 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088304324 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096480875 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101744418 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1531265 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074388375 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109581429 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093361774 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109394769 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086681122 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106214905 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094209062 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09131608 seconds)
  done (took 50.763320637 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.094848631 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14836681 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.156677101 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080464401 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093349107 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118895229 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208610516 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191327895 seconds)
  done (took 2.94668519 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06822974 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081888831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104632022 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082154958 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064650674 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065828649 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.20536278 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081980035 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06406773 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102192933 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074135514 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066373069 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.395266675 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064616301 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065572267 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07328861 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065306268 seconds)
  done (took 3.561868089 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.376358373 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601311069 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.341462813 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073312579 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.952686367 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089857208 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.268157907 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137875769 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079749124 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559546776 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365839416 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13022803 seconds)
  done (took 18.825515826 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076333114 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076241387 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079360627 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079464823 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074202577 seconds)
  done (took 2.225711029 seconds)
done (took 102.024735459 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082987281 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.172783291 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068391132 seconds)
  done (took 2.121692199 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084709229 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080763438 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079454457 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078066925 seconds)
  done (took 2.169243446 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07525767 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077168482 seconds)
  done (took 1.988025416 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24612827 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16366986 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091552225 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084097813 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080998765 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081484482 seconds)
  done (took 2.095062659 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072967378 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07227299 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072230877 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071015881 seconds)
  done (took 2.123193058 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068316535 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066697944 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068610988 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072285792 seconds)
  done (took 2.113455406 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084570537 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084722807 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076812351 seconds)
  done (took 2.086986214 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097532346 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097478766 seconds)
  done (took 2.032074223 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080640789 seconds)
  done (took 1.918473964 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090848697 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098208104 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.151428036 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110763421 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149521221 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.133138975 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076112667 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077318008 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072371793 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07068005 seconds)
  done (took 2.87169632 seconds)
done (took 23.948477142 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080082839 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364070753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358100632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084816981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669172583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354967176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967936179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089671379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097576753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06639579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083352605 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64528077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959221306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324326435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945749789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319020122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64745213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066688729 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065534951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066418551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952485938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065705304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06603883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066346307 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646361141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371976322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067013951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320497806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065977784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068733935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354473368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068696016 seconds)
  done (took 16.183663042 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071308131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123417943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073505924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085217388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069872819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067751248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069230178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066743325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108365721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066813671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083395636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066325764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070646825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068693793 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087043571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067125905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068208352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067774733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066996425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070133417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084920043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06669686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067371238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067521396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070245143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082446369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068813687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068485218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069188593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06922217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070535382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068544015 seconds)
  done (took 4.228877865 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123344422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129621415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074055117 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106621445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118631204 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068948061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149806476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090237577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112894207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067062661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083809491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067929409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103097183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068831699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087722374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067187327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068475531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067767741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066831135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068110619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085606754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066609324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067613622 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067494892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067769957 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081771564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067861907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066981572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067055959 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069627284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071246173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068515382 seconds)
  done (took 4.498755479 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070328879 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072653891 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079890495 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079315686 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065486737 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0676778 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068689904 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065325597 seconds)
  done (took 2.434453535 seconds)
done (took 29.203437083 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079648762 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068106531 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071355397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088518341 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074357597 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071305025 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065145123 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074860819 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070011487 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069879109 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071013046 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065080811 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068433121 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063484076 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071131638 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065476021 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071838491 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069206918 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070306921 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07119222 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06805268 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070681361 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07362273 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069691784 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070388857 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070287071 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074741517 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070386254 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065589487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068289391 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067062184 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075340527 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072182762 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072525066 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064813654 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065305634 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069947038 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067666562 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07142043 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074745585 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066574732 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074868685 seconds)
  done (took 4.791704567 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085651601 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09048783 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08084047 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080345632 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098480133 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081409154 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08465595 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077287212 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.0760941 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084275938 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072039305 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079542441 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077195538 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070394633 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076469994 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072759624 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077998584 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072570464 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076947163 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07666467 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084824824 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070681799 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078049106 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078463309 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072497009 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078337633 seconds)
  done (took 3.929374612 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073831562 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08658779 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091596294 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148291449 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111372768 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080133384 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080014387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094171481 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098374337 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066868457 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070010137 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091897503 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092929206 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072466641 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10652155 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083160602 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08082301 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068103873 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073151529 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09858153 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087617828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08437268 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.0971997 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084671071 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065183025 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068684091 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072371711 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080180006 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072858401 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07808758 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070188059 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069208193 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066752598 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076995354 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071813703 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066208024 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089388105 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078104195 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07950594 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108745554 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075178591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066926305 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09447148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129586085 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065635625 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068494738 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069310715 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077810149 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066889187 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095330602 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080377274 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06541115 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065922355 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066839245 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066864548 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08104772 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067621037 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067507024 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077584259 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072008156 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087814737 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07079371 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085689896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065527828 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07654634 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066903179 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066852921 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064460107 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09917946 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072543629 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115703759 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066681937 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063552665 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077482242 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076372646 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071702244 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065123625 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083935519 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076725412 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069373923 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077329478 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068745015 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068949725 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100170778 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065692013 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064719317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063910442 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068712508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068829688 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066064618 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078967853 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065042212 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068617558 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080526682 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065955994 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066242247 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068367761 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066963693 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065481901 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078075269 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.06956493 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067191692 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077514781 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066714191 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068715833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080057022 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073134489 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065067803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068166386 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070732165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069252512 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071711809 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070949059 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069896346 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074087807 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074192268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073118859 seconds)
  done (took 10.882634624 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166659889 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154160469 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067796087 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146570453 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074540228 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071392376 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147710288 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085839264 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068078915 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068570172 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066542854 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094633028 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091514852 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.101627905 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070794277 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066809725 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08989639 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099431842 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15053289 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145828176 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090230928 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073199464 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068634313 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067959107 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06757878 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074656616 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081545994 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074587203 seconds)
  done (took 4.530266308 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077612574 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.094325614 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072616907 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.080223662 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085790632 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066182851 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068467481 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068225003 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080891312 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074892332 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066656788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070735884 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069740078 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068824967 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06735959 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072518467 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073068269 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064974711 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070572183 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071265441 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076520063 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091750519 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070390498 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06634623 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.06814517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066173109 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074364177 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077957576 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066281322 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08179171 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063726592 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071788834 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082405152 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068572117 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06767464 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069014754 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068086695 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067911538 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068612593 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066379984 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065833279 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072765845 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06724561 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075438155 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082564055 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075405074 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069446858 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070503072 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070726126 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065160556 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070917739 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070896511 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070695936 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075949123 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071387054 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06996117 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069576794 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091793892 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072702855 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065462994 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06549123 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064982672 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068204931 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07572814 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083382701 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06807613 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064575719 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066220416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071460998 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080285815 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065480968 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070523321 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063653577 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066418945 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06822443 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068823188 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06808731 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064292363 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065877978 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066372755 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066258367 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06572166 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065809304 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068667888 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063972587 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06472441 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06678895 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067577731 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075685025 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066797837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071895744 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069125565 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066764447 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068824171 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071606372 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069002435 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080470964 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076518742 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066675758 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064268956 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079791403 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068849752 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065616662 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072316597 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070390908 seconds)
  done (took 9.355609174 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092743688 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070307644 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087823152 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093767914 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078858298 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07220264 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078239191 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067142729 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083348523 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065916633 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075033914 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064705365 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078015055 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076965997 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067989804 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077597024 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068897449 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085299616 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081866521 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064956904 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076161444 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079839996 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080045682 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082617964 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082613534 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083160083 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078650155 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069035603 seconds)
  done (took 4.07819067 seconds)
done (took 39.423573587 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.942429879 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.116007157 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.934545762 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.109476707 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.983438952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.97526272 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.1483712 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.939208921 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.111578978 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.987556209 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.245338916 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.459793546 seconds)
done (took 67.881246767 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.975535198 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.103317133 seconds)
    (2/2) benchmarking "String"...
    done (took 2.206916476 seconds)
  done (took 6.177871123 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.19836512 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.766010308 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.199348232 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.936960301 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.939719715 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.376060694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.725999744 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.389934825 seconds)
  done (took 32.201726979 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.117991099 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.163962103 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.643057508 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.660727082 seconds)
  done (took 16.49686685 seconds)
done (took 67.01011103 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.949828666 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.935290027 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.959570613 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.968464364 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.939285535 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.936063568 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.939620084 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.937599406 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.945391874 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.991730641 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.934398967 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.949084516 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.936313099 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.948012746 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.594230418 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.98777202 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.945114888 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.935457792 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.947248524 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.941520312 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.934498031 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.940261094 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.398484301 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.089764908 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.548696963 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.0868161 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.134521115 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.322630976 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.947132956 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.935413027 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.000837536 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.083268307 seconds)
  done (took 208.910469996 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.936413028 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.686110494 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.796075019 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.979956848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.207988763 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.10879759 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.04029031 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.303440351 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.937140166 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.958736131 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.080689669 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.940490676 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.115658256 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.885263018 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.976039475 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.030095937 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.065399767 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.134585932 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.977779123 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.086916529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.956320228 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.891932643 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.85234063 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.068924319 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.958847394 seconds)
    (26/36) benchmarking "herk"...
    done (took 7.034216573 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.131435352 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.960255415 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.124701269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.04525645 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.94108006 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.952605657 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.153358489 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.80580982 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.967944726 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.968752082 seconds)
  done (took 174.930842844 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.132216436 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.951718925 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.937707775 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.002288752 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.06285619 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.94018017 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.622167537 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.952577417 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.160640807 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.938771584 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.941248244 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.941083057 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.941435043 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.952728782 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.046291757 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.939856808 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.957107992 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.943886443 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.968564072 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.935943653 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.940955389 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.94188269 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.941566023 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.942746355 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.941585342 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.941618586 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.941990625 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.940358548 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.474672297 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.192846069 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.939685499 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.942590889 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.075229972 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.952437132 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.488728003 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.940534975 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.0350134 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.00109827 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.060894458 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.941125854 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.161202894 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.028078181 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.938969923 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.942518386 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.007313257 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.951169565 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.943705443 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.945432607 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.948120214 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.003949622 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.189356526 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.939724866 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.06356264 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.429015641 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.939463315 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.944605724 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.94315258 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.946703428 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.530532066 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.936847635 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.942495935 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.947796079 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.946006551 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.942846124 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.945130546 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.332256334 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.938397011 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.014912668 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.051635219 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.362537455 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.940619388 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.025207201 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.140343521 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.94379 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.944281446 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.943794446 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.947048373 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.947751044 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.946511827 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.063923725 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.94993467 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.063386632 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.02095528 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.061258857 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.944726976 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.959290925 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.778717928 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.01178794 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.983003082 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.775664932 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.940346552 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.318132923 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.721464182 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.941179755 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.944562934 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.956620467 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.941546735 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.947010804 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.94772915 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.025281123 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.94171343 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.065210913 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.662311765 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.416488824 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.94244345 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.945428289 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.959476456 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.027990937 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.062172147 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.946661439 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.013354517 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.948188918 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.946873616 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.062355031 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.943875651 seconds)
  done (took 420.723404302 seconds)
done (took 808.627186023 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.55170429 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.515718926 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.612196332 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.534433194 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.509675201 seconds)
  done (took 14.597738379 seconds)
done (took 16.473294008 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.960691355 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.95212643 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.005854427 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.027271281 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.957871982 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.965375002 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.029070817 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.964692927 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.997179518 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.002557194 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.02815161 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.029344941 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.970024575 seconds)
  done (took 27.763789125 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.95596242 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.103405414 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.182362814 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.987292635 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.95626921 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.184513066 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.013003638 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.095054449 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.097100466 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.181130711 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.18976107 seconds)
  done (took 24.824168119 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.95570508 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.099301312 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.183573213 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.99155696 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.958303371 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.18247562 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.020100102 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.098760313 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.102622788 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.185829881 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.200516251 seconds)
  done (took 24.863387604 seconds)
done (took 79.327951562 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.951418915 seconds)
  done (took 3.827258159 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.969816805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.112983699 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.950655406 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.949129663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.951151194 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.951113499 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.949621579 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.951199197 seconds)
  done (took 17.66177337 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.951306927 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.952288372 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.951624624 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.951586706 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.953849125 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.951290796 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.951885842 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.952379296 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.950997109 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.951770404 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.952353881 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.952591754 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.952110703 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.951842185 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.951468194 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.951265674 seconds)
  done (took 33.107670048 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.953977295 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.951637714 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.951395698 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.952400093 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.952670737 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.952480061 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.952861392 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.952674825 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.952631995 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.950759016 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.952265382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.952444072 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.952761283 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.953181786 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.952212696 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.951817103 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.953802166 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.952260806 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.957341084 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.952395747 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.952726367 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.954080373 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.95387 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.955230845 seconds)
  done (took 48.748521919 seconds)
done (took 105.233093887 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.693527476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.66424037 seconds)
  done (took 10.23618287 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.954974521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.953772894 seconds)
  done (took 5.79184716 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.954466963 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.954530795 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.953563644 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.954403166 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.954056251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.955874773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.955471306 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.954945667 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.955239959 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.9555264 seconds)
  done (took 21.427481482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.954797058 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.954642932 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.953174423 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.954396233 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.95525257 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.954111832 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.953788246 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.953878665 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.95456741 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.954662762 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.954217226 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.954460569 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.955402706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.953611741 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.954940322 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.95511919 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.954327499 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.954016753 seconds)
  done (took 37.059508096 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.9551549 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.955513421 seconds)
  done (took 5.791750854 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.95483831 seconds)
    (2/7) benchmarking "second"...
    done (took 1.955739353 seconds)
    (3/7) benchmarking "month"...
    done (took 1.955319664 seconds)
    (4/7) benchmarking "year"...
    done (took 1.955661696 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.955205289 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.956115335 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.955893545 seconds)
  done (took 15.568939111 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.957448367 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.114345831 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.169475461 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.852003284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.956625243 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.960102736 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.287543937 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.960209831 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.961755224 seconds)
  done (took 22.100973734 seconds)
done (took 119.858004873 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.727662723 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.952792539 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.195469888 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.010777053 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.968826807 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.250379737 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.985359626 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.594308701 seconds)
done (took 43.569715444 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.041381174 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.955236188 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.981465288 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.985341951 seconds)
  done (took 22.804491883 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.959045355 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.3020993 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.97550169 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.804711348 seconds)
  done (took 22.945489859 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.341191082 seconds)
    (2/2) benchmarking "read"...
    done (took 2.303677818 seconds)
  done (took 6.532155652 seconds)
done (took 61.210392282 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.957996794 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.959366348 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.957336276 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.957257024 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.957377039 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.958401277 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.957984386 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.956797229 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.957428497 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.95750622 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.958188615 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.958048873 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.958889489 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.957948684 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.95870057 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.958347171 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.958098826 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959102022 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.958592315 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.959805532 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.958727999 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.958932907 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.959555432 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.958609509 seconds)
  done (took 48.882682233 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.959958794 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.958719405 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.959180677 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.958652293 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.961643274 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.95852888 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.958564411 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.958238756 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.960428742 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.963722073 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.959116497 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.961136498 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.960124505 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.960241233 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.964422407 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.959686252 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.959732046 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.960582589 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.958819234 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.959976099 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.961054631 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959043677 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.959502642 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.96071646 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.960400663 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.962933197 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.960238724 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.960993768 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.959192263 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.959214695 seconds)
  done (took 60.69062094 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.959790646 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.96151515 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.960475503 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.959476861 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.9626987 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.960172508 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.960259463 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.961755786 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.962129396 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.965618549 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.962194977 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.961654865 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.962567319 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.961992051 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.962624048 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.961423317 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.960988759 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.960501203 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.962455111 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.96441852 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.962075248 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.962379111 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.961927204 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.962487195 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.963787237 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.962426298 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.961980583 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.961894975 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.960608404 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.966191078 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.962526053 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.961742508 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.963499624 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.963064127 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.961856123 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.961178027 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.963441061 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.961872146 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.961655823 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.963742303 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.962789795 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.962203848 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.962886933 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.963087313 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.963015261 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.966179288 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.962232745 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.964208476 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.962237619 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.961936105 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.964067568 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.963277952 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.962865729 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.96346211 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.96356467 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.965736637 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.96451227 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.964138454 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.964403913 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.962952465 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.964472761 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.963304065 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.963730174 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.963888696 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.96352353 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.965255683 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.964483436 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.964928145 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.963038552 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.963964646 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.967628279 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.962806106 seconds)
  done (took 143.214533693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.962782534 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.961713876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.962063001 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.963705507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.965086259 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.965606376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.964911514 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.968034028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.964696555 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.964041177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.965190773 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.966082348 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.966979028 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.966022439 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.96432002 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.964610704 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.964613784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.964692667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.964589519 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.964114954 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.965095434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.965633946 seconds)
  done (took 45.11301812 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.968691083 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.965076363 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.967115382 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.965120394 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.966429056 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.968699249 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.965301813 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.964865157 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.965406414 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.964848367 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.966984909 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.965213726 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.966017845 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.965489452 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.964431942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.969092439 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.965696705 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.96687387 seconds)
  done (took 37.281848314 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.967675192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.967715207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.965713148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.965787042 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.966298506 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.966711554 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.968457417 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.968599221 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.965419068 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.967080057 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.966590975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.971635138 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.966011342 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.96546981 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.966955331 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.968412949 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.969407335 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.967003386 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.967172008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.967447442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.968113701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.969099003 seconds)
  done (took 45.174357006 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.966702451 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.967086115 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.9675332 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.966899667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.96594707 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.967880614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.967718781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.967365447 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.967022859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.96644415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.967466948 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.9680717 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.968777275 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.968030299 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.968008706 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.966829316 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.967849658 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.968021181 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.969225653 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.967784514 seconds)
  done (took 41.242525491 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.969194066 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.970091743 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.969605943 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.969542742 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.969339306 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.968717428 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.968968919 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.969420028 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.968754386 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.96800003 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.96920508 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.968898328 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.971030198 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.97176636 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.969801004 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.969796542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.970117177 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.970907082 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.974605984 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.970205072 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.970961611 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.970458325 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.96932989 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.974176508 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.969946813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.970586105 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.970376152 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.969278216 seconds)
  done (took 57.057146221 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.969805359 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.969046011 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.970500479 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.97171182 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.975505643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.970765967 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.970581314 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.971089903 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.970447655 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.971656912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.968362511 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.967914916 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.969086989 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.969742326 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.970235681 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.972763651 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.971388497 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.970779782 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.971925686 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.971264157 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.973657161 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.970028051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.971122878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.970441414 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.97138408 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.975495195 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.971189371 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.972367772 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.970364066 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.969613359 seconds)
  done (took 61.02686959 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.993981077 seconds)
    (2/2) benchmarking "in"...
    done (took 1.993115838 seconds)
  done (took 5.884509897 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.971267302 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.976221316 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.971235254 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.971370043 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.972303555 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.97250091 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.973919942 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.97208696 seconds)
  done (took 17.677017727 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.974029314 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.975628823 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.9736296 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.973465847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.973380749 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.981628263 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.970763765 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.975879072 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.974813998 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.974591464 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.977754453 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.976988516 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.985178188 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.977388875 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.970166837 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.973464005 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.975431443 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.979264873 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.974892969 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.973540362 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.977177901 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.975020928 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.975763026 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.974054936 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.974312411 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.97697498 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.98309301 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.977380434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.975574093 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.973626838 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.982373678 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.973405857 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.978169949 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.975448688 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.974254391 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.974041075 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.980309711 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.979745001 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.974822523 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.974760171 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.976911434 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.977504455 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.978451322 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.983967766 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.975473891 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.974861707 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.975709341 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.975754544 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.977705098 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.978506587 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.98535853 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.976371411 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.975851877 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.980636363 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.977884602 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.974932322 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.975608805 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.976969992 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.985538976 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.983633732 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.979788026 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.996810641 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.986210108 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.981317741 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.977128949 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.984821818 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.003179945 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.977561063 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.978105966 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.976417558 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.984975085 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.973568698 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.975924756 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.976212707 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.990664767 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.984991838 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.976635376 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.978072185 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.975973169 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.976828249 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.979681966 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.977229515 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.977549681 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.977903944 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.988174005 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 2.002695722 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.977796994 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.977518482 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.979819233 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.978147207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.98222878 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.980239837 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.976977477 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.977117878 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.978284245 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.980056974 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.978553305 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.979682589 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.979030102 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.98816034 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.976179078 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.977272219 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.981392577 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.991691192 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.978599585 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.979273264 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.980001469 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.979384894 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.989602614 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.980073028 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.980861234 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.978462297 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.979611603 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.989345105 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.979130303 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.981832654 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.988558808 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.987407831 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.982377242 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.98316966 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.982947342 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.982020982 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.988132271 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.006425095 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.979228378 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.982754719 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.984109329 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.993589004 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.98611795 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.980395977 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.983159915 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.980338631 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.979644396 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.985999238 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.980126956 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.980485448 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.980050001 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.981269402 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.983465475 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.981092094 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.984027155 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.980906019 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.983808843 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.984851425 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.985398666 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.980504137 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.984514222 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.988004525 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.980945163 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.982211345 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.981924134 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.983689339 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.981931754 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.981265443 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.98414816 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.981147974 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.981093506 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.980896586 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.984375892 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.983570428 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.982373284 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.983709308 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.986012763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.980901869 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.983484692 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.980453716 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.983156372 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.983452122 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.982836322 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.983546196 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.983788646 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.982778497 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.986129192 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.981708943 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.982613848 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.981958021 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.981369907 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.982089235 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.986392295 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.994641725 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.986692854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.991498143 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.982683933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.990643047 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.982220566 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.983694773 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.983125896 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.982915296 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.982975677 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.984913065 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.982745564 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.986071666 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.00431407 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.992790386 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.987184126 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.984748027 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.989494125 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.988351006 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.98920433 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.984467288 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.984743037 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.98554741 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.982635721 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.985193652 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.983576837 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.98734584 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.984012042 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.983373386 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.989344185 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.982810189 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.984584152 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.984542054 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.985852296 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.984624382 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.983146065 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.983232004 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.984701503 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.984665364 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.991347804 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.984706886 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.983994028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.98483244 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.986705115 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.983970535 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.983710692 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.985459274 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.987068227 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.984067207 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.98499695 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.993551565 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.983618762 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.985755027 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.984767363 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.985199592 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.987824582 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.985772284 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.988502565 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.992890104 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.987917535 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.985663724 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.990851387 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.984785939 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.989304848 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.984300287 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.985388699 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.98710992 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.987144031 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.987005998 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.986778859 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.993834539 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.986503231 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.98679964 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.98718662 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.990870453 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.988112488 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.988964856 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.987737833 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.991547689 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.99435185 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.993972143 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.98765486 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.990817474 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.988984506 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.988543771 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.991649776 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.987019802 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.001062545 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.997412293 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.987204904 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.987029277 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.987379347 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.989811281 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.98745126 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.988318609 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.997459133 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.98832163 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.98828981 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.991882323 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.987109724 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.988004422 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.994682859 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.988673649 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.992062938 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.989255567 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.989830796 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.988813707 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.98826382 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.989841346 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.987747814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.990492179 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.991901425 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.987534926 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.989650908 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.987882723 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.998778031 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.98741435 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.990409101 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.997592716 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.989548605 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.989692398 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.99117212 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.988971951 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.990466244 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.990440001 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.990097822 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.990220406 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.989904942 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.993185649 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.999675051 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.993519115 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.998396047 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.992418461 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.00022062 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.990921613 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.990673113 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.991391495 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.993218454 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.999730785 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.989883299 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.9897602 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.99885063 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.989599954 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.990262378 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.99576535 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.990489841 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.989979242 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.990216333 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.991923142 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.995139657 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.992250329 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.99062989 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.990146084 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.990729332 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.989413572 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.994168968 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.996196278 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.991482759 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.991416533 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.990212161 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.991016149 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.993132858 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.990590197 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.990433511 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.990056398 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.990955613 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.004315268 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.990711458 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.991245875 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.995893853 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.991884141 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.002982652 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.992281895 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.992627513 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.992388205 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.992495556 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.996997338 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.99121021 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.992301272 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.99188036 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.991773173 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.996732168 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 2.005849297 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 2.00057934 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.996702352 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.994034494 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.993125635 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.994150846 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.002717859 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.016685542 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.992410054 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.995662466 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.997587033 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 2.000571919 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.993347193 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.999543651 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.99581596 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.000766172 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.994082632 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.993331103 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.996933568 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.00592604 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.991317674 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.993454108 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.994387524 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.997581458 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.996126102 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.993088596 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.995011247 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.99703727 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.995976976 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.005679754 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.990814184 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.994691588 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.994500516 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.993886508 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.994122889 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.994902572 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.996518069 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.995509936 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.993188284 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.996117983 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.99695747 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.000303823 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.995086175 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.99815432 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.005722232 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.995600842 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.994726033 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.995571127 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.993648424 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.9988639 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.993485325 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.994605164 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.995740039 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.994277894 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.994909194 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.995517456 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.003740962 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.995423189 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.99307178 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.996772995 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.99857651 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.993595033 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.996470009 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.996765102 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.006328337 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.998131821 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.006370754 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.004959499 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.994366821 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.998473085 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.00203557 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 2.005326898 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.995275136 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.995883225 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.996483858 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.999416997 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.998645381 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.998414685 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.995987452 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.997527832 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.001138961 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.995909714 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.997519277 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.995561704 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.998582877 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.999846154 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.999112994 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.003285942 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.996690653 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.99892831 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.996354238 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.998205585 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.997681566 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.999554709 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.996587179 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.996802773 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.999470447 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.998949772 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.001446346 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.999127508 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.998347654 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.99956321 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.99693383 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.999091431 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.002129816 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.998055457 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.99679296 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.001479774 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.005596522 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.998715935 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.999846252 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.000196542 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.001331261 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.99961341 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.000011801 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.998990601 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.99867841 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.007629535 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.998062772 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.000247139 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.998689814 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.998999767 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.004290022 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.999946352 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.003555208 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.998432203 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.000733152 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.999474534 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.002849178 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.010150945 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.004849255 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.003616733 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 2.007957241 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.004018736 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 2.001700865 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.000127922 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.999870416 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.000030079 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.000896388 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.003829906 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.001401387 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.003798635 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.000242423 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.003658607 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.00051826 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 2.003118488 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.000762468 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.00084632 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.004632956 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.011908929 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 2.009693344 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.001236728 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 2.002096703 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.00178067 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.004365535 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.011966972 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.001025366 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.002651658 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.001555386 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.002390365 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.002349107 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.008594867 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.010177696 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.003857067 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.001677852 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.006728555 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.020202288 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 2.004050049 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.011497253 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.033540152 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.00317413 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.00111096 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.001841892 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.003207878 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.00151681 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.005397555 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.002374174 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 2.009415874 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.003493964 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.001068047 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.010677456 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.002166551 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.00223819 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.002521995 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.002039087 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 2.007210203 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.001802266 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 2.008679961 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.002160428 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.003510643 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.003335821 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.004401077 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.00278873 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.002178233 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.003150918 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.006563158 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.001155576 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.002815083 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 2.012571299 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.004367724 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.004219093 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.014549848 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.014054383 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.001662698 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.003725105 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.002957097 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.010430434 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 2.005851529 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.001306027 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.007075576 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 2.016419664 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.008739394 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.012204917 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.005143544 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.00512431 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.004973063 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.003501502 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.003985924 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.01643994 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 2.017184116 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.00369158 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.005123817 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.009378395 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.002507012 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 2.010680603 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.011372083 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.004196851 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 2.005575514 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.003465113 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.004272782 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.00470502 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.004365597 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.008759049 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.012483249 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.005761219 seconds)
  done (took 1188.894859372 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.004684178 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.004440382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.004508936 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.003561441 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.004559056 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.003545633 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.004451889 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.003596618 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.005078917 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.003864992 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.004174951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.005009458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.003863654 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.004982527 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.005792369 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.005775563 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.004734581 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.004244072 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.00595293 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.004473276 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.004903477 seconds)
  done (took 44.025807431 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.005071148 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.005657751 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.006745699 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.005141359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.005185423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.005870587 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.007408443 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.005647195 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.007211041 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.005943367 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.005860619 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.006208942 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.006621102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.00646152 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.005150771 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.006984943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.008410941 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.00602033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.005937809 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.006773921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.006484506 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.007608605 seconds)
  done (took 46.067620374 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.006944493 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.006374167 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.007572827 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.004286481 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.005442598 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.006266529 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.004396727 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.00741504 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.005605296 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.006380217 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.014134052 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.014260622 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.005847385 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.019209543 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.006746116 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.00669636 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.153852257 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.007400164 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.006803123 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.00764947 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.006672938 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.013669836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.007435338 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.006397939 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.005934203 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.007638506 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.00591996 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.007381556 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.006124831 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.009117703 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.010529297 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.006405131 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.010507259 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.009423309 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.006831702 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.008113753 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.010888034 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.007544919 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.006650941 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.007254793 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.017128081 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.032987338 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.007422018 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.009021424 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.016218419 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.007614683 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.007475504 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.010357933 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.016686594 seconds)
  done (took 100.520544141 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.007723332 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.006739863 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.006908346 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.01002854 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.006907649 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.008192728 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.007490269 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.007220195 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.007804464 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.007865408 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.008129816 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.007957928 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.009252984 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.008518322 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.009079229 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.008731787 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.008861504 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.009553077 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.008290057 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.009948242 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.008129522 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.008637299 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.007990464 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.009891359 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.010161309 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.009130504 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.009025956 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.008655489 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.008182325 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.009492155 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.009892309 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.008597121 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.008764841 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.009659753 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.009305998 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.008915559 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.008543662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.010633567 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.008957236 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.008575233 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.008490776 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.009188472 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.007948043 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.009618934 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.009615063 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.010776789 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.00960679 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.009823964 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.011334885 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.010482652 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.011095422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.009596656 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.009609413 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.010729678 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.010388435 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.01108371 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.009910942 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.011086945 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.01082669 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.01173466 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.01117602 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.010835423 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.011631696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.010867122 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.011201345 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.011236317 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.011455347 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.011473485 seconds)
  done (took 138.572048642 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.012876597 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.012294811 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.011763832 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.012227696 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.01173236 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.012157527 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.011976946 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.011356632 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.012138575 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.013841516 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.012194521 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.012092033 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.012238884 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.010887293 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.011755966 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.011792711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.01206582 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.011641582 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.011491642 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.010757376 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.01206519 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.012267314 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.010718942 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.012809009 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.012408057 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.012232221 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.013382336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.012251371 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.012489593 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.01330422 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.012490973 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.012900041 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.012786909 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.012481753 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.012909657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.013056946 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.013079839 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.012749034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.012908653 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.014354699 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.012766173 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.014052425 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.013369155 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.012150298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.012579743 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.013714676 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.013267485 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.013937037 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.012614545 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.013800005 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.014458301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.015713033 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.013486704 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.014253837 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.013533097 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.017032745 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.01623891 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.014636409 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.014892721 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.013251926 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.015424516 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.012728384 seconds)
  done (took 126.737778331 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.014562084 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.013752168 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.013228978 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.013905141 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.013654617 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.014642471 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.014254389 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.013814221 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.013185245 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.013965743 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.014420677 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.014334816 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.015628637 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.014704778 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.015479188 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.017055409 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.014096381 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.014668643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.014881155 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.015528134 seconds)
  done (took 42.227473843 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.014717897 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.014933035 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.015613225 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.014562721 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.015413549 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.014103587 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.01540279 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.01539769 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.015912765 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.0162911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.015721379 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.016505049 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.017035949 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.017667337 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.017961339 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.017792912 seconds)
  done (took 34.194402423 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.017395054 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.017583027 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.018894863 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.017310549 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.016818618 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.016958582 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.019011056 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.017199141 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.016231026 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.016143997 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.01795224 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.016933114 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.016574461 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.017443451 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.017258679 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.016001137 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.016333596 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.01644712 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.015988894 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.018136593 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.016811184 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.017072374 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.017050554 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.017969559 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.017149174 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.017650305 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.01777421 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.017694719 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.017223939 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.017418188 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.017782668 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.018393379 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.018674125 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.018748832 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.018099371 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.017652836 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.018477575 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.018028546 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.017350244 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.018658921 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.017875227 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.018833865 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.019494143 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.018107768 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.018775093 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.018957803 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.019542079 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.019111009 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.019363988 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.01777788 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.019294168 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.018332144 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.018969902 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.019296022 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.020071951 seconds)
  done (took 112.923138706 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.019814815 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.018445403 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.020808416 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.019089188 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.0182709 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.019161045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.020570988 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.019987909 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.019551116 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.019417102 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.019554709 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.018711486 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.019997614 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.01969598 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.020002201 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.019178683 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.019684852 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.019127786 seconds)
  done (took 38.293330327 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.019553496 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.020217973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.019839673 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.01928935 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.019326534 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.020341403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.019868374 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.020027424 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.020834284 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.019862927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.020226156 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.019057535 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.021750456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.019783991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.020218955 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.020247443 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.020914722 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.022043867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.020426773 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.021974384 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.021512357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.023394015 seconds)
  done (took 46.393706768 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.0205092 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.021389469 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.035785672 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.04544731 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.042302172 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.060840515 seconds)
  done (took 14.170529089 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.021389175 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.020999812 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.021280415 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.022003298 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.01980877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.021527293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.021923461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.021031719 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.022581296 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.021604742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.020899047 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.022536926 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.022713381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.021295128 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.021879372 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.022054709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.022393339 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.021098564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.020867873 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.020663954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.02312886 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.023700603 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.022782201 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.022917531 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.022126376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.022014956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.022769513 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.022991625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.02240615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.021978689 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.022848886 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.023146834 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.021785371 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.024100786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.024274419 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.023631249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.024256065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.023468212 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.024119898 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.023969972 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.024020788 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.024804484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.025087426 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.023353749 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.024612304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.024491223 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.023972957 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.024708048 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.024387075 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.02449024 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.024252425 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.024405506 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.023292071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.024155134 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.023427015 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.024598488 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.024725083 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.023955311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.024413503 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.0252276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.02662527 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026273347 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.024387357 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.024079326 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.02391294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.024647507 seconds)
  done (took 135.475462728 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.026086163 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.025116437 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.024135909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.024514102 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.025302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.024290577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.023965798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.024761945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.025031201 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026670917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.025520041 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.025996779 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.025557305 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.02619597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.026577492 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.026467426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.026118131 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.026856628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.025165609 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026663851 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.02547239 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.025211187 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.025743851 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.026951174 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.02529177 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.025750304 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.026090648 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.025416528 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.026220283 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026739947 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.027119579 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026533859 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.026946596 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.025920947 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.027707247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.027044305 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.025600239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.025698294 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.025969782 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026714246 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.02829736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026584479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.02806087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.026946208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.027590695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.026414801 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.026261522 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.02582152 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.027342033 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.027351188 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.027132885 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.028522273 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.027798691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.027449577 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.027899007 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.027756567 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.027452476 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.028288837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.028207881 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.028037471 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.027656292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.02864841 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.027609254 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.028089907 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.028386014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.027973991 seconds)
  done (took 135.703488731 seconds)
done (took 2769.338559823 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.031974058 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.132504585 seconds)
  done (took 16.115569361 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.200804136 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.151613992 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.036843934 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.061996593 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.035244938 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.05458837 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.057282894 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.035654737 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.040420759 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.038743698 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.038538174 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.222218066 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.097867041 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.035384626 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.038698357 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.128467814 seconds)
  done (took 55.420810756 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.043850879 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.036935941 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.053361588 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.039168063 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.043701267 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.060833013 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.068128062 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.048328099 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.108552632 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.054816609 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.162965891 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.057696535 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 2.045154941 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.12002227 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.054710919 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.056350293 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.145987685 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.120885496 seconds)
  done (took 39.275917808 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.124024021 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.054654932 seconds)
  done (took 11.142821629 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.035223595 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.028055084 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.027494607 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.044534771 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.035205186 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.056392443 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.044411336 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.058181562 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.046271332 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.049516266 seconds)
  done (took 72.382647362 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.039162261 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.036984755 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.040111007 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.03734122 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.033924497 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.038012842 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.037771819 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.032698219 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.747470617 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.079355144 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.051262916 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.045350609 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.03509204 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.037765949 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.033171859 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.063193968 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.141460405 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.032506405 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.03331801 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.042996301 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.037706099 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.090447772 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.052267571 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.041139602 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.07612745 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.740094059 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.050494116 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.042609161 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.167433824 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.03266819 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.038050935 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.223174228 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.046865439 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.513375498 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.35303471 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.045075187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.046520167 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.041905936 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.034483473 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.164195668 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.042433906 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.046689979 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.990596895 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.32590723 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.137638546 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.08426151 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.393244883 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.039476349 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.03963376 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.073397885 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.043665512 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.038796548 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.0602443 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.554744468 seconds)
  done (took 142.304547387 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.032528316 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.378579982 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.202744153 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.037008439 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316907549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.237390692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.034193559 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.081491745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.035442322 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263484366 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.287738658 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.143205552 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.033701808 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.033879192 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.033595294 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.030254067 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.190590928 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.10410902 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.03573029 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.033775088 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.06035146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278408873 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.156523709 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.034298003 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.060620202 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.244610405 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.156750431 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.136297065 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.817687259 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.035151906 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.096149264 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.036237959 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.035568543 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.033400349 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.192262077 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.128358202 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116198287 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.03624933 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.035855031 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.034306967 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.780965668 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.235175734 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.132559538 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.166603175 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.287037174 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.242495794 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.815666317 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.035663681 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.774346508 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.198432457 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.266652853 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274032546 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.157123265 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.037669857 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.375635738 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.03494223 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.035568558 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.283399515 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255900817 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.134645229 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.037877025 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.034781812 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.033314163 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329361062 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.037664309 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.129378108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.037390862 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.035044113 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.133273511 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.136440543 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.269998222 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.246973738 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.064928974 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.376151911 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.540508433 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286264798 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.103686412 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288469779 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.040672409 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.035473016 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116654719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.884998765 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.298411844 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.321005917 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284447271 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.068880882 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.757086531 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.036133584 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.263846114 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.268443715 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.29527061 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28657469 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.275460013 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.363406115 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.039382144 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.037822614 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.386514649 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.161207959 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.038591441 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.386381924 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.270273361 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.604106539 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.065812704 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346641917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.168857266 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.042092451 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.671738563 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.038074276 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.266577065 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.077532926 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.041822201 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.039868312 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.257181927 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 3.027089658 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.040243532 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.916904613 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.10010845 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.045676973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.27491141 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.040243674 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307973634 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.041151603 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.275670332 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.544262259 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.067580544 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.213148468 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.287696773 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.041388019 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28223462 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301587031 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.152370642 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311880117 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.921528965 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.040931032 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.326924967 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.040994253 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.039353511 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.212553066 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.043222771 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.183040727 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.045356883 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335265263 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.060399306 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.275768048 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.045536138 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.297033128 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.071014213 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.089576235 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.044930886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.163272131 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.045098786 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.860775484 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.19642428 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.046190073 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.041691566 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.595407747 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.040946688 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.194718293 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.271584466 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.060461898 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.114823009 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.699478041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.042646103 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.128872395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.064371102 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.430294033 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.04269879 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.290887311 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.045185365 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.043299164 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.042191108 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.331010035 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.277731173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.045640896 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.04118413 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.946499663 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.040349145 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.041515004 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.221811304 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.36647235 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.039494911 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.243170891 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.042978179 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.17025894 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.046035487 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.122002839 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.37482735 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.042255008 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.041835609 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.04489179 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.04543544 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.043376256 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.252908489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.066870662 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.574714075 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.179292318 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.318491487 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.352202716 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.292563091 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.085927885 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.051027759 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.296953391 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.045848587 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.102548458 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.043292386 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.061957442 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278364599 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.04422003 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.304421677 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318787433 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.0799582 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.09114215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.044782673 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.045550469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.043717776 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.191646078 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.130976362 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.045083474 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.046069604 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.161501333 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.168924833 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.256021411 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 7.048808692 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.154829738 seconds)
  done (took 941.981836818 seconds)
done (took 1280.57983568 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.046368632 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.042031457 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.045460623 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.045991395 seconds)
  done (took 30.147807545 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.048949662 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.047392672 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.04751524 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.046865157 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.047320276 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.045813224 seconds)
  done (took 14.255074178 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.152712677 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.043007506 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.045739573 seconds)
  done (took 22.211678495 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.129036052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.471739469 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.199194639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.498386477 seconds)
  done (took 11.268692399 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.047597513 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.047382394 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.046862037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 2.04817508 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.049078142 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.051044411 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.047732607 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.049534177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.050467525 seconds)
  done (took 20.409339515 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.737044586 seconds)
done (took 105.001558474 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.075827259 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.100150295 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.378175905 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.53314074 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.361429019 seconds)
    (6/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.51016751 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.111311181 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 7.047356927 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.142778993 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.367394343 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.428921839 seconds)
    (12/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.146659948 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.068094714 seconds)
    (14/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.576555222 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.205064049 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.866158788 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.222857051 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.210396659 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.345100395 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.081599514 seconds)
    (21/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.257474403 seconds)
    (22/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.106710149 seconds)
    (23/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.530908877 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.231216559 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.160698003 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.083681288 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.066306796 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.04776271 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.136214404 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.287963835 seconds)
    (31/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.297206817 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.189828799 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.048963593 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.01134944 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.224535674 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.040755903 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.103385046 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.156776841 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.369240227 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.70413176 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.189569307 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.049356268 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.232225745 seconds)
    (44/309) benchmarking ("sort", Float64, false)...
    done (took 5.759587832 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.206366329 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.480946833 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.183373335 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.201633116 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.275046109 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.068783717 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.430588576 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.12788041 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.691583674 seconds)
    (54/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.373204102 seconds)
    (55/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.19329409 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.174859333 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.351165681 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.174277489 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.063261726 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.229522885 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.210890714 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.364400646 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.073286653 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.657075546 seconds)
    (65/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.583762435 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.14093241 seconds)
    (67/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.360312352 seconds)
    (68/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.548364807 seconds)
    (69/309) benchmarking ("sort", Float32, false)...
    done (took 5.733025663 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.383966122 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.464009498 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.614119683 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.087756649 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.157625581 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.055208756 seconds)
    (76/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.520006325 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.194239533 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.195145991 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.053818983 seconds)
    (80/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 4.135939927 seconds)
    (81/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.445039546 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.948942322 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.057402297 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.615131389 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.664940694 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.12858891 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.730919419 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.17284067 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.152675153 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.17753895 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.149408867 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.057672672 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 4.302399809 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.362739682 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.060991389 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.365322357 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.16189956 seconds)
    (98/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.210844773 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.059467633 seconds)
    (100/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.966873903 seconds)
    (101/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.159265352 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.076493341 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.445407028 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.285900923 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.080799173 seconds)
    (106/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.212444115 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.973145219 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.087899004 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.133770404 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.151738225 seconds)
    (111/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.059759113 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.054526821 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.950134307 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.052355389 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.143961542 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.372668476 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.348980757 seconds)
    (118/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.07682765 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.080990254 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.052555968 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.411909167 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.666664039 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.065376231 seconds)
    (124/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.156280961 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.056742199 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.207067645 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.060014074 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.788267338 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.238492338 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.095487511 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.299343201 seconds)
    (132/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.133704539 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.319047508 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.236147898 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.355229068 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.026185997 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.146440082 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.291333876 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.28914 seconds)
    (140/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.227507814 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.218693206 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.306668524 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.057599659 seconds)
    (144/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.807980585 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.288204155 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.057746473 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.099427019 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.40723361 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.453545711 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.054633815 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.821914532 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.459622024 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.079392932 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.243565787 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.183642897 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.180550231 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.899112411 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.459474891 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.733698514 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.113628852 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.978362387 seconds)
    (162/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.147113919 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.085223205 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.057853735 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.07408572 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.057805832 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.367037698 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.078966336 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.118347669 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.335283894 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.065462029 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.277491549 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.056690462 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.171348735 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.062166255 seconds)
    (176/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.488241402 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.796258843 seconds)
    (178/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.155271191 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.16031346 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.239256969 seconds)
    (181/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.539781591 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.514407495 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.055272354 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.70728087 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.19870263 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.136112949 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.221448375 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.451351812 seconds)
    (189/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.261056354 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.142155039 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.25652027 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.847898486 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.060499454 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.206979239 seconds)
    (195/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.478408627 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.393803692 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.16215585 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.060200604 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.156293955 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.123690437 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.056976801 seconds)
    (202/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.097772921 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.052679861 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.058085925 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.399100014 seconds)
    (206/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.859310859 seconds)
    (207/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.690504873 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.133159604 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.456275406 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.286827174 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.058404378 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.270766359 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.24593977 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.899650457 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.431621607 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.187494727 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.144563744 seconds)
    (218/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.193416432 seconds)
    (219/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.45280658 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.802374803 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.890231777 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.378793658 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.057260471 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.072704524 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.056987472 seconds)
    (226/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.029049075 seconds)
    (227/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.191477857 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.616965271 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.527615609 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.391974716 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.061241816 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.077170255 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.355483772 seconds)
    (234/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.193912412 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.364965024 seconds)
    (236/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.973856003 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.240161841 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.229781903 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.079336644 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.326119869 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.934366872 seconds)
    (242/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.242167522 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.827805986 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.418295614 seconds)
    (245/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.755091127 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.114953724 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.059753447 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.33928552 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.056504922 seconds)
    (250/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.136398962 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.057937891 seconds)
    (252/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 3.36178489 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.192398073 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.135661673 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.397508939 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.168032785 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.072507086 seconds)
    (258/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.081181316 seconds)
    (259/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.466928041 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.065732951 seconds)
    (261/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.320850947 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.051037377 seconds)
    (263/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.238604424 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.273704485 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.058671715 seconds)
    (266/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.578734099 seconds)
    (267/309) benchmarking ("sort", Int8, false)...
    done (took 5.019052359 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.084095804 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.221774167 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.071695014 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.962324882 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.385254521 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.316354334 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.553556449 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.18772701 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.08602987 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.381545875 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.281525576 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.333676984 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.148541802 seconds)
    (281/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.219231939 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.064589142 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.545091698 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.060018358 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.510766682 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.0417441 seconds)
    (287/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.227564982 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.465066094 seconds)
    (289/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.889884308 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.330709776 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.965321757 seconds)
    (292/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.185322342 seconds)
    (293/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.082517071 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.060278142 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.319318457 seconds)
    (296/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.389737834 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.058066158 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.361412398 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.301265294 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.093363376 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.060376208 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.93002959 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.064891027 seconds)
    (304/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.168219834 seconds)
    (305/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.752703544 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.05926105 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.064223387 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.154408553 seconds)
    (309/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.878966974 seconds)
  done (took 1064.900131919 seconds)
done (took 1066.944168724 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.088655842 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.085299776 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.065694124 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.088657859 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.181410652 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.108686919 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.079873104 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.070256002 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.117576439 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.115336216 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.062487515 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.104564131 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.065991039 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.0652229 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.061303296 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.077868145 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.373213286 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.095650137 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.082717314 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.075208584 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.081529109 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.058945574 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.113688941 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.102435913 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.064394934 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.067972393 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.066181734 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.0821043 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.174096649 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.064038454 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.066687116 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.073179138 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.373948856 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.089009324 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.059192677 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.079303617 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.074059919 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.074164883 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.063707828 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.092705974 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.519274311 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.066154557 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.060028403 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.06045784 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.057269983 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.066207482 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.060642021 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.067427153 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.073942496 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.075910852 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.513327531 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.078592092 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.062272429 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.059123214 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.071313291 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.058915003 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.063855415 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.074550519 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.081137108 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.076216444 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.357721446 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.096987106 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.061400999 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.076436402 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.06900334 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.554206382 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.060456795 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.065435522 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.516702165 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.071262495 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.551935917 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.071501027 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.059882632 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.073201151 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.096090399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.366886704 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.087217868 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.056535094 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.068737613 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.062488752 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.069727303 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.073051753 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.062982711 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.05796447 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.081750229 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.100446571 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.071833929 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.058344892 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.070292441 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.082321604 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.065984767 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.071673914 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.061219452 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.060243827 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.069362469 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.062383068 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.060781269 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.060404657 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.06404653 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.070093291 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.513095563 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.075453642 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.051927868 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.057882713 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.05468668 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.070784649 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.509813965 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.061443048 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.081671412 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.105750396 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.056467653 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.351713883 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.089896141 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.07229019 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.066518624 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.056137321 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.051682388 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.354086598 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.535510565 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.072291754 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.054964802 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.053360534 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.073588874 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.056324373 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.051733568 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.364199526 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.087775561 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.068481745 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.176719309 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.065327209 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.084479126 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.051548511 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.055560844 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.096880221 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.071014694 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.084566358 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.056751073 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.067995762 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.07039935 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.04806557 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.065831244 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.069392141 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.050257114 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.058263345 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.048037164 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.095314513 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.071637446 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.065712751 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.070914582 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.172422091 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.050949977 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.344139312 seconds)
done (took 323.22212745 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.138239708 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.048385952 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.180196715 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.047150903 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.143923686 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.119046443 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.045603018 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.046523534 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.046457925 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.545110579 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.046109617 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.050797563 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.046047528 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.046430361 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.124248918 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.049100087 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.044316559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.487146611 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.04771895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.130125756 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.05010162 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.0447285 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.047767883 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.544848939 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.047169723 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.044113556 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.1246497 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.045131444 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.496251677 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.043114437 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.043930913 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.49162463 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.124210404 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.069999343 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.050840716 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.047137162 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.132395903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.053689695 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.107969477 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.117806269 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.164080151 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.077094729 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.039863701 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.04428753 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.045002902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.042256238 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.043507476 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.073153231 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.042409922 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.050371502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.490484841 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.048155971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.048648737 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.045048433 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.041822258 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.073260246 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.043652147 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.043782952 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.129650513 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.043756156 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.107106446 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.544865523 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.541067625 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.042695241 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.040216153 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.045508318 seconds)
  done (took 197.082218285 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.108568506 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.115565953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.108795893 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.052316927 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.094330154 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.109573915 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.04785379 seconds)
  done (took 16.601642192 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.048797986 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.042623077 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.091624388 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.091105887 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.042844512 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.225636211 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.05438845 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.04713989 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.069542527 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.043865867 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.691122956 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.090613675 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.048023888 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.043845235 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.053748995 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.097786867 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.045509865 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.042495939 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.152538754 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.190376701 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.048452618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.049565032 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.065886652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.052846135 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.040448982 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.041318613 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.043815103 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.047913184 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.041915839 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.040368043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.04095598 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.09332403 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.039156761 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.039631104 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.041793094 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.042648417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.040659331 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.041094392 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.04323059 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.038326974 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.042186652 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.039048556 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.039179086 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.038213827 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.03716429 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.066198428 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.038576702 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.040584478 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.038184314 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.038445282 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.0689033 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.038213933 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.037532895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.043548238 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.083130221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.047543169 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.03790861 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.038139522 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.038691082 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.038537156 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.041251656 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.18723608 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.086338337 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.037686359 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.086031973 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.191219393 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.037196442 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.039350322 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.037421185 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.128773757 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.037307153 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.087976109 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.038556708 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.159224708 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.039487702 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.225530193 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.063418586 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.041740322 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.042053286 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.037375073 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.044649755 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.037487422 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.04141358 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.047738179 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.044404322 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.038073929 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.040699626 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.040878191 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.045585414 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.039494532 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.091148424 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.039639619 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.039956064 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.174562237 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.037629888 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.149289531 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.066585635 seconds)
  done (took 222.673966533 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.046672363 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.046908129 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.041843899 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.056283529 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.03951512 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.040929333 seconds)
  done (took 14.232220899 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.043282195 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.046384207 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.039404472 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.041126682 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.042058283 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.040960462 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.042340957 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.042030405 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.044139563 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.041040173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.04225521 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.042406164 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.042678964 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.042836042 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.042254816 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.040354674 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.042897843 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.040641563 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.040444881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.040351918 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.247971178 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.041056603 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.041294818 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.05120017 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.047895788 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.041488156 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.056097079 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.042587401 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.040113222 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.049589268 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.045933649 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.042461385 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.053467692 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.04999712 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.047953765 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.054716093 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.047662949 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.045596353 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.042502472 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.044108141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.04516414 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.043304393 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.044178956 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.045862533 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.04714486 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.05940372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.050268996 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.056182388 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.043828501 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.046231778 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.045606942 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.044730212 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.044752472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.044426341 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.05459564 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.050924322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.050844079 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.046243457 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.045149441 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.05531874 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.048200861 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.04395768 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.047545275 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.049266601 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.050962314 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.047422353 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.05422161 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.04876151 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.044273419 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.044517916 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.046090714 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.045064615 seconds)
  done (took 150.473061482 seconds)
done (took 603.054603231 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.812231714 seconds)
  done (took 9.777958701 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.261646882 seconds)
  done (took 9.271368282 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.995674488 seconds)
  done (took 11.001485161 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.099661321 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.094623356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.104460983 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.088026892 seconds)
  done (took 30.405488722 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.267941225 seconds)
  done (took 9.275412898 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.097166945 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.099087206 seconds)
  done (took 16.263932726 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.083169174 seconds)
  done (took 9.088179709 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.378564441 seconds)
  done (took 9.399213343 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.105463951 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.107827717 seconds)
  done (took 16.238635998 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.08880353 seconds)
  done (took 9.094715997 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.683512163 seconds)
  done (took 10.765496901 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.104098647 seconds)
  done (took 9.157259193 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.146868708 seconds)
  done (took 9.153086234 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.223136288 seconds)
  done (took 9.227810481 seconds)
done (took 170.088904766 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.092642234 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.084235243 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.078974147 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.077267229 seconds)
  done (took 30.336734171 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.117520087 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.118451297 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.12535778 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.115749689 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.108258822 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.10649509 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.116994759 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.116102131 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.105678301 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.113165394 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.11507598 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.112710013 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.114490706 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.122895818 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.126527883 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.112307878 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.114519597 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.114259978 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.106904073 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.122254837 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.109804597 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.1112906 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.077664434 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.079222166 seconds)
  done (took 52.688121096 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.267531536 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.145672497 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.22973396 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.130333853 seconds)
  done (took 10.77075798 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.075376618 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.139140135 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.128043605 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.130167719 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.125075597 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.17866942 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.128300338 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.21206093 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.204102925 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.20694568 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.082134333 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.098592889 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.100527201 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.123022017 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.180651696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.078922455 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.075433113 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.191152063 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.139817292 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.257234695 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.076367998 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.130760316 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.128260577 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.12919107 seconds)
  done (took 53.318099676 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.077493905 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.084651942 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.083588704 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.077787287 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.077849331 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.079624244 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.083538474 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.07804279 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.099093014 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.0784205 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.076541772 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.080226204 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.085784868 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.077252069 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.07782726 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.089825623 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.089825071 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.078697805 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.0824778 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.083603687 seconds)
  done (took 43.639232591 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.075409248 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.920509711 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.421750913 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.327869139 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.078210288 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.076165163 seconds)
  done (took 32.897852952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.089809982 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.086109852 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.077578874 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.13562825 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.219730797 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.08739064 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.077272143 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.08854764 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.126962283 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.143306957 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.099164607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.108009358 seconds)
  done (took 27.339169745 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.079021831 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.078396531 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.077268124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.089487329 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.090450703 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.087979755 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.085347257 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.076061899 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.089276785 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.099123872 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.086890374 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.090703833 seconds)
  done (took 47.033921373 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.786744103 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149251819 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.079631431 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.951954128 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.545096379 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.618949516 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.965771804 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.742385494 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.549254672 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.013397773 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284902292 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.08240396 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166073148 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.084113937 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35542115 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427179354 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26739064 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321886043 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011261521 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.122814605 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.284627937 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.282421633 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.359836887 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.082171016 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081132582 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.165632425 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.742846151 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.879152034 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.111452114 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.616745614 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332548587 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.030152871 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134718489 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.082019172 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.093511202 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08268767 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086024829 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352803482 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.156675375 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21139505 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156622095 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322023599 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083705361 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509289175 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.785585303 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.346867879 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.188477957 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.080047329 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084013832 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.081646632 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.008193699 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16793224 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.082883001 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086807493 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.77883144 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.082713042 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155755414 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.081973562 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283599291 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.887345289 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770992396 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.0783838 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082461923 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.640534275 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.156512048 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.193072046 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782591971 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456049545 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500848575 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.176273808 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.081004084 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080548122 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435534571 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.053956009 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771298099 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120156594 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21659466 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.091168246 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71845867 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369886862 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.472790172 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.632570989 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.996726666 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334049874 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.97217827 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08594247 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292104301 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.939986501 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.005833733 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275480431 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103936522 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082583571 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.343922056 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837905447 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195548398 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.09091074 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516952232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092709782 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085892184 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080091696 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294095882 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.689988897 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.116916045 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198225177 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092820859 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165779349 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005047022 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.087520782 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.077501318 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.157594193 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.081821666 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.078165977 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.115610576 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.943506639 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128289293 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.014408414 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078345413 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.155106101 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12046154 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.032754013 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307452802 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.364258564 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.711814918 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.095478711 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.198321454 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.443847897 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296498466 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.080018905 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291112715 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615889524 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.467215004 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.117336826 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360143738 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.127117152 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363728775 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513111727 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15314254 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.839551167 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.704673387 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.291264786 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091026834 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.077317281 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079390401 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081131506 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.012760437 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.76347881 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.422847339 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.236769058 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29108801 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.624053747 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.073769883 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.077297518 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.373014702 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211829549 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.079082706 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.722252284 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.685207745 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.898436152 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.101584326 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43256456 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.489016507 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.046597728 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086391648 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150336457 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091726365 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.214762486 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.368098843 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428499492 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.073848564 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.073777046 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.022221564 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.076573749 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.076033987 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609491851 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039576728 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.077714431 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.087357157 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.950382845 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147755283 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077679457 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079900825 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.620652455 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.578846574 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.081510924 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.766428586 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.154349172 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158975786 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342109376 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.436517183 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198554984 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.776083321 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.478470099 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.182142658 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.775100006 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003568423 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.075675329 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.015013216 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080777669 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.080883574 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082643219 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.266652903 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348202812 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37314164 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.538682231 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.136505627 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279805703 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.788194184 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.032485072 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.078384366 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08203059 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.079712245 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.075741299 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.592757028 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.315155661 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.161328016 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109658814 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082527656 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205829227 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.089195255 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.003255712 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.07798306 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082914329 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.72155625 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.116713954 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.022452904 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.366825348 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.901778278 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205410046 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121931593 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.089806843 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083196122 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.78856754 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.124874149 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006164135 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.717824233 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123443841 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.840718529 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.686963021 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.634612886 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374958535 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390178128 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.39730914 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.144295137 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.291298895 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16270892 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135702099 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169956861 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.014455456 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.001622442 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.730314281 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397264781 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.348075294 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083677884 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293887847 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840888888 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307607111 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108659824 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.978597736 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389449668 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.051493314 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093694152 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.607632751 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196687509 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160330326 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084117394 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.031573387 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402681948 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113173849 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.783120937 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096025958 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433256557 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.722543634 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.15764968 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.436773134 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28716626 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.082454116 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436353609 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.493135323 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12793697 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087730373 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.074725582 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.293714249 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663200595 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.953919543 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082334481 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.456394903 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378132006 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.983880664 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.083426733 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453235206 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349732666 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.080746637 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.43859799 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422789839 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.196409549 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142973832 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308270242 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.96432039 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388692876 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636623111 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.573476747 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.084103109 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.007966645 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.782930854 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.284332 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.090269334 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047546073 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27436449 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305660344 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765077232 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296696776 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323980153 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.092770273 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347013088 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154058661 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.179210042 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.369360932 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.48126149 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.318196218 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30941683 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626177577 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297070021 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52021867 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.239019255 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.085361177 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290114462 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297350388 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296700608 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.449156961 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250835977 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.793170614 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.088924616 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.290994281 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395880956 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142981977 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.469156885 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253320202 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.167097763 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093664415 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151841785 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092093548 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09401717 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.472357162 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.61936907 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.101614261 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165192539 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.214182136 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.600633353 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.088195088 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.095334176 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358137439 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444514408 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417880225 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.06822841 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.085493423 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.08990343 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217407849 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.01447245 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094289533 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359607487 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.090973214 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.708593718 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243681209 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100808712 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.410812784 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.471407994 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960435989 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.183744459 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093423854 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.290220691 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369322216 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479737874 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21120558 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360345043 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405799674 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.113741856 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.458381284 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325159372 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0944762 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.963913013 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093774982 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240192739 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.295238395 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360506978 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.660907546 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805244904 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353260634 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.94014911 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09414405 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.800100606 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358202512 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356150238 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.137727316 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156426215 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096519682 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.76002384 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.847983642 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224087577 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.964025349 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.013330615 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.243601213 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311005567 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.334628448 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.801829717 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095039455 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364218627 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389531855 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359574234 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.139540697 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.97925001 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302445506 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095468352 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.097304113 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367898369 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296631144 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325251134 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093823178 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.098590475 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.895241373 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.021397565 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.084262447 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141544821 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313545739 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109048431 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.598945679 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.785562641 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353974073 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121000706 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086447906 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351801547 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.594566725 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.637328647 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083691874 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280422591 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.100952909 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.368666269 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.084506618 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.734573793 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.393535262 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.084169003 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.815981597 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.336999609 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.351911226 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010852019 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087738285 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297851165 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.955467515 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.079091396 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.092308377 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.724181549 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323679326 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.815275442 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639910199 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.081371109 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.08487841 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.727264995 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120003455 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.732986382 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.114573735 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100593666 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.598850633 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.77969144 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.370631787 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32380009 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.821564209 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.738960382 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.08442074 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.0820994 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.086053908 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000187125 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429865264 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.266295931 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350090369 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097201788 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.718136101 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117256492 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.438775203 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188442592 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455859735 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121800754 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.594077213 seconds)
  done (took 1767.754818004 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.098523335 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.137442946 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.075933797 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.083902469 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.094219065 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.084619139 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.13547342 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.091093151 seconds)
  done (took 58.798510993 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.074422758 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.085709246 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.076242133 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.075257725 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.079175365 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.07534801 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.235433079 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.084590268 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.075848415 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.080439686 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.077546463 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.070709167 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.348831611 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.09657831 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.075120665 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.07423265 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.075910186 seconds)
  done (took 77.7611464 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.080559236 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.280514978 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.133708576 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.078832465 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.978027848 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.085874667 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.99452928 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.135155255 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.079533372 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.274944291 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.376338179 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.127815132 seconds)
  done (took 92.623780893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.082478486 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.07738272 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.076847384 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.07662448 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.077757613 seconds)
  done (took 12.393160365 seconds)
done (took 2309.432425442 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.377936537 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.136459358 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.178337929 seconds)
  done (took 6.312184148 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.225389013 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.270871176 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.384161642 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.143581517 seconds)
  done (took 11.031750294 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.379415269 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.453636936 seconds)
  done (took 6.830759756 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.444727977 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.092268048 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.453617372 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.077720869 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.079254326 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.081006301 seconds)
  done (took 23.24260753 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.078534277 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.078567319 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.078667132 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.079159151 seconds)
  done (took 10.314575201 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.077337894 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.797879773 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.076934912 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.089805373 seconds)
  done (took 22.039317412 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.226777684 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.192780498 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.222437648 seconds)
  done (took 8.642428404 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.299633782 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.926159083 seconds)
  done (took 7.224812368 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.223483967 seconds)
  done (took 4.222055251 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.106757188 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.34883299 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.576408554 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.589819081 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.716689863 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.857151497 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.398035065 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.32481687 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.473786894 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.510321879 seconds)
  done (took 26.904018526 seconds)
done (took 143.133623977 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.432234078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.086653578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.279872006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.443190707 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.298222358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.280409041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.301215841 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.434711686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.11231906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.100589388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.439429617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.297426764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.251382621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.090462102 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.259402078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.086774785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.295807298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.43459734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.113521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.332228545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.28971696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.078928672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.272759194 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.084136526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.285189369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.218562392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.616981825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.078090775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.249022918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.61953039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.20924771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.467445916 seconds)
  done (took 174.840023825 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.057659449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.055851613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.052187372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.052676171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.351443954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.048604687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.047907788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.06545886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.232679528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.229620238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.046004634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.339247197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.04695003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.046382336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.047498683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.045464142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.389241999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.047648205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.045702312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.046737076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.04804368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.186103176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.045961469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.195213644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.381304915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.046913485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.046333127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.042016065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.042446331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.04136381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.039748258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.038129069 seconds)
  done (took 213.431107742 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.04001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.035593434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.038513566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.037578614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.038088823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.037048105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.041000997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.038823533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.732304288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.720860927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.037079125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.035182016 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.03567416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.031655831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.032372585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.031763776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.031528916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.033825899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.033289832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.03945962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.034335387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.740607227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.032198254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.76573785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.032928971 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.033740364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.033346533 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.033205985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.038430362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.03892021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.032599804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.032444947 seconds)
  done (took 225.916054701 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.276889469 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.036643985 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.039415809 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.073528082 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.039977983 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.037389957 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.045304798 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.28629366 seconds)
  done (took 20.800463752 seconds)
done (took 637.004376197 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.410938846 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.241612817 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.218239851 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.066710038 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.324970029 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.105964221 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.059551267 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.122648324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.91478265 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.131977023 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.716480553 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.078856162 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.80929494 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.082328076 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.187282359 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.11280108 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.637206449 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.741422955 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.200540965 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.117314446 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.242022246 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.009051278 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.139511694 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.947830215 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.733765418 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.042200745 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.115078987 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.641751643 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.069239354 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.218816808 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.718855882 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.374234372 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.072055548 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.059940077 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.111384576 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.09293608 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.306061692 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.070200164 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.201142114 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.798617149 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.14023853 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.806974722 seconds)
  done (took 110.154038909 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.049289136 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.045478076 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.044762828 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.044883259 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.054273077 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.045232011 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.045576368 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.046098243 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.045694852 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.04694114 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.047171292 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.05531508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.046691076 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.055572767 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.046331918 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.046222018 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.046927699 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.055698719 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.046865973 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.0461396 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.048055527 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.046285579 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.042164263 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.045815058 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.047357602 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.04622526 seconds)
  done (took 55.214609896 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.041482006 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.215425569 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.291541996 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.060435517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.042952376 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.044776403 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.060708738 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.047414701 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.046215772 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.046077163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.150034657 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.049688627 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.060381475 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.291402717 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.057425965 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.042564015 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.042796916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.044069499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.223927729 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.059030838 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.063347466 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.048639718 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.06147298 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.057770124 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.046105743 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.045092601 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.048307698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.512641925 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.053438752 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.151650337 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.086810525 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.063284721 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.455144117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.304397524 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.096315428 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.04661256 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.043796901 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.157684752 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.050147595 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.045278063 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.060891513 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.05032236 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.295390744 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.580470217 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.057506503 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.046265136 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.520600979 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.167228408 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.086107373 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.056642418 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.300769957 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.060494632 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.045560331 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.046012269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.081901707 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.056101371 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.046146556 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.413759631 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.060261226 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.064202107 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.053413501 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.04895913 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.232081764 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.05665397 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.222406298 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.056861544 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.053730871 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.048846411 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.302389556 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.062101428 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.603378508 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.059562846 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.044168563 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.155128074 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.225529063 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.54554861 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.059355461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.232035747 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.467673067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.068048851 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.053888165 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.498467497 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.075180708 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.054025938 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.047051178 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.049195809 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.046972404 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.091406217 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.061919056 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.503169978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.589895689 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.42908989 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.069668552 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.057943516 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.046236712 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.409325317 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.051720037 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.045813787 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.288552959 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.599048673 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.060418891 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.056092594 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.577195055 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.062228248 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.067132675 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.054685397 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.308446043 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.062651188 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.092836545 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.047829738 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.054883653 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.05123488 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.068363433 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.057806967 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.050385018 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.565291046 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.173041293 seconds)
  done (took 253.497289558 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.051053964 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.045529654 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.04798354 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.046296729 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.048561419 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.050382823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.04819574 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.050256697 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.05031957 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.047715157 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.048657026 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.048802876 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.051367118 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.053000113 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.565147011 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.053979186 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.657014803 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.051086766 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.051028345 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.048071757 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.738070522 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.055937346 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.051501193 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.048481907 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.05238472 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.051308719 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.053425965 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.096889117 seconds)
  done (took 173.234720639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.05254861 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.237026861 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.068177855 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.081901889 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.059550638 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.050888824 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.191044414 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.070833569 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.058953763 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.052443684 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.051846196 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.113677236 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.065330643 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.149328332 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.079627781 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.158191691 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.151363094 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.054710064 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.053178228 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.052433327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.080975146 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.062520179 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.113624751 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.178068059 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.06872875 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.165545799 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.069440372 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.053651411 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.05224721 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.165086456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.068155174 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.114602349 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.084063155 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.071579916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.170463223 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.1658998 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.153733083 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.152373654 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.055191683 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.054627352 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.053751679 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.054240604 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.166043463 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.068961445 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.054629687 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.16953626 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.069627707 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.054247538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.053572942 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.054438015 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.067333883 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.073315113 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.119305537 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.182045222 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.0856917 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.077981359 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.152654088 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.181294236 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.053820943 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.151517071 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.057852881 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.166099558 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.072130163 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.055937646 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.056716405 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.059355323 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.08326433 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.160135213 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.154863974 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.059506446 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.151978442 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.087589151 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.06061757 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.055504403 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.056867374 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.168907263 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.169379297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.089093216 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.088234089 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.081447083 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.064829753 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.054610462 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.05671791 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.07153731 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.059968164 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.168215125 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.168265134 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.059661192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.055800107 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.056984371 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.05603518 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.080727843 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.174977892 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.089286183 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.162563547 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.118634552 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.130192161 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.070004941 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.068738112 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.060616996 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.117247115 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.070914091 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.06889968 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.361287788 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.116318516 seconds)
  done (took 222.371484052 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432824764 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.100885736 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.112484298 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.378772751 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.416681983 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.997357894 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.100505321 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.107959573 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.137620064 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.327646807 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.178035291 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.122526959 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.087444025 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.077295712 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.100839319 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.137567942 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.114894723 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.439676012 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.31263974 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.574658825 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.090334357 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.398923401 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.431282022 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.677457656 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.154831784 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.504373309 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.732640379 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.268709306 seconds)
  done (took 68.501788125 seconds)
done (took 884.937135393 seconds)
SAVING RESULT...
DONE!
