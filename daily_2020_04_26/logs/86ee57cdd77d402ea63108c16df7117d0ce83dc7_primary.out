cset: moving following pidspec: 1225
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.284691511 seconds)
loading group "string"... done (took 0.612002674 seconds)
loading group "linalg"... done (took 7.561346301 seconds)
loading group "parallel"... done (took 0.158279918 seconds)
loading group "find"... done (took 1.113695935 seconds)
loading group "tuple"... done (took 1.800033791 seconds)
loading group "dates"... done (took 1.199699198 seconds)
loading group "micro"... done (took 0.239608188 seconds)
loading group "io"... done (took 0.909430673 seconds)
loading group "scalar"... done (took 36.67018705 seconds)
loading group "sparse"... done (took 11.445657776 seconds)
loading group "broadcast"... done (took 0.926060325 seconds)
loading group "union"... done (took 12.31451477 seconds)
loading group "simd"... done (took 4.526732744 seconds)
loading group "random"... done (took 8.613698429 seconds)
loading group "problem"... done (took 1.775709357 seconds)
loading group "array"... done (took 19.92087214 seconds)
loading group "misc"... done (took 1.75476475 seconds)
loading group "sort"... done (took 3.114431405 seconds)
loading group "collection"... done (took 16.992434206 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535748044 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129260552 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139573674 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130738582 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156563919 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12444626 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131722939 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091912121 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.896630215 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156810929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119430272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414750378 seconds)
done (took 5.404917047 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179246051 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086111066 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088093131 seconds)
  done (took 1.234152208 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071240539 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134951361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072231711 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072490964 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072298283 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071824613 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071942629 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072026242 seconds)
  done (took 1.628178161 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078338245 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074077254 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.07120293 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072810008 seconds)
  done (took 1.356371081 seconds)
done (took 5.538497023 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.779444879 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213270817 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18938704 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398299661 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132421237 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.17812444 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653588984 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327800734 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190495337 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081205861 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111443609 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351317716 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126237363 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649416621 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080602893 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095027606 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142215722 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447614057 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072490393 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087637138 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094149081 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133458484 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088935251 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078537786 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151099064 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072912252 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138046155 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08561574 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071158683 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21813882 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177534804 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681443342 seconds)
  done (took 10.39065776 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103198239 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102779863 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074083652 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130178495 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103028677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075295076 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080738239 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072924122 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097088831 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133740618 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096449478 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110172793 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071501872 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074325898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088180988 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214877051 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086399273 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086769867 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075468144 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083201265 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112318586 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082733666 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084488004 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084569399 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133532445 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185930731 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104479522 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102887476 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072142401 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086680035 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120030665 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132012366 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07146225 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071519694 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1299288 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100506386 seconds)
  done (took 4.73157406 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.984766019 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145251371 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092763434 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137321965 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070444959 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112016279 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074050249 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084951097 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211040824 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.366481007 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586016431 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134544189 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114960917 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108163637 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07278921 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073712009 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070344257 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07240345 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489382951 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105426206 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112007301 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085819587 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075200913 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073499287 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070725498 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072520254 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069458534 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073802902 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118961359 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080044286 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305832082 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125610985 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073401134 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939955982 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169953217 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070388356 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.243991275 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168871229 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09622291 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144103892 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074135372 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070875917 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162264911 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070126723 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074762107 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071140915 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089316681 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109021623 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12383799 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070946797 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071254861 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172544255 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0702316 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087240837 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.166762409 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158296688 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072854145 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292702439 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094904421 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07576784 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070888957 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19350798 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123876583 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073123205 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072201734 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073751396 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069663282 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073895025 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385779088 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073099128 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.191714439 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073754343 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081649546 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074959879 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074703469 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077736484 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078119714 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093685296 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071146725 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077731162 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073529495 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071134966 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072094384 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087642445 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.370984402 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.17402898 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097180905 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073091756 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070802309 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095504123 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10008563 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073996137 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070861915 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104150583 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073401696 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071969369 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071732934 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087371429 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075150952 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117701918 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071807785 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06993037 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.084360407 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099972652 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074028981 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103333723 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084201699 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072939883 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.437334568 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070771683 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072453373 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070561936 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072828957 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071364093 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086251497 seconds)
  done (took 22.365355103 seconds)
done (took 39.53250485 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24364589 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074632454 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074494539 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074884536 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074566444 seconds)
  done (took 1.680679764 seconds)
done (took 2.807213522 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124200801 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10316185 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070090175 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10120393 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072631738 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104484547 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103845212 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081805314 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103759212 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070077088 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101196202 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069665049 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069687879 seconds)
  done (took 2.316610896 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088093831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088622774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07578636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088298372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068939521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087513486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086271027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093653239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086277934 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078344178 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069021659 seconds)
  done (took 2.034360772 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08812078 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089175482 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074990883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08679531 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071847283 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086559621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086849776 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09031199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087141057 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079254883 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069241213 seconds)
  done (took 2.028204963 seconds)
done (took 7.494847305 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081232868 seconds)
  done (took 1.191740282 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.531265943 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.684500856 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084286913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108565219 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191743647 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11454937 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.244443385 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086727733 seconds)
  done (took 8.313410415 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10516861 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077094433 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074638125 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075905057 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074718923 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074939783 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076079121 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074101741 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07732699 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076234694 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07370877 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076994319 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073176368 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077701208 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074088555 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074968108 seconds)
  done (took 2.424339387 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096555216 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095172287 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078066379 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079497726 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077064033 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076862279 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079516519 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078642349 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075360892 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07672389 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079561103 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077906789 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07624593 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068796635 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078248805 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080550376 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075691409 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07930204 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079501834 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080057643 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0794105 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069087271 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076406841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078594787 seconds)
  done (took 3.097917103 seconds)
done (took 16.145147873 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109989601 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072570099 seconds)
  done (took 1.298702382 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083947928 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085364713 seconds)
  done (took 1.294042289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084071838 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070001784 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090987406 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080714265 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07007204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069445909 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090114463 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070267539 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069842388 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070041254 seconds)
  done (took 1.890998194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07173338 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079493462 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073586395 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08387035 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076867355 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068540757 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075180537 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071633192 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080474133 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067343646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074884558 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087162333 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07476657 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089295463 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075414251 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072418515 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074442995 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071600336 seconds)
  done (took 2.498107069 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069639815 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071012738 seconds)
  done (took 1.271433465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070567394 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067913693 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070574635 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070292401 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067605098 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067038649 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067819786 seconds)
  done (took 1.609106589 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386976034 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120009491 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30448181 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07722485 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085826154 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258436583 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072659987 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076877858 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076892303 seconds)
  done (took 2.624544374 seconds)
done (took 13.619438471 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085329059 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092366506 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099919101 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385669963 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097977105 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072166957 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119093816 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184521807 seconds)
done (took 2.276013527 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217399123 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.774350482 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.484055413 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208130723 seconds)
  done (took 2.600675473 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342549481 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09307978 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.179927436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073489286 seconds)
  done (took 1.832703966 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072046963 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074924865 seconds)
  done (took 1.287198978 seconds)
done (took 7.076240488 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072176109 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090711214 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071908053 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071400564 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069214451 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.069294137 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071524551 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.069258792 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069613895 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071234595 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071377601 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071413514 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.071584993 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071504147 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069134839 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069464031 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071134622 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068983533 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069109536 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068996912 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071234972 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069015483 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069205394 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069155539 seconds)
  done (took 2.876518742 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087924902 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071030006 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075145468 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074925368 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072914918 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075624671 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075259892 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071241717 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075694749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073639819 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073431844 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073193107 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073585227 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073426495 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073542661 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073360417 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075521336 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071223777 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073535336 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073013886 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074910063 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071439796 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073156381 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075706451 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073091609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073378533 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073318274 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071063574 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075487738 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072976715 seconds)
  done (took 3.371261444 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074707989 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067930063 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068359649 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07575883 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068094077 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068838951 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068036996 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068433929 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068980223 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067927044 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069232544 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068234644 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068139061 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068707153 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068911293 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072361706 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085165883 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068324102 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067778917 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068686687 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074224521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067821194 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068319122 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068138414 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068153067 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067834577 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069038097 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067979486 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068575674 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068786971 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072164074 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072357777 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06821328 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076098248 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072338235 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067881858 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072944813 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068147426 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068732962 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067714013 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067570076 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068043918 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068528308 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076342415 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068522954 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069253268 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06801146 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069163101 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068697976 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070416428 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06764944 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068064447 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070047058 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069148064 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073036862 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068248556 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069120825 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067987953 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068865006 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068147359 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068320535 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068194076 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071527514 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069032918 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084752383 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076190316 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068903841 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06951177 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068964917 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071525308 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069806071 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083793906 seconds)
  done (took 6.202995058 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09115313 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091329987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071768058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07050727 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066332531 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069104339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074199333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068631238 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070747832 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087506487 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068730064 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070991649 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070735989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073155247 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069094058 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07110873 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077245541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066184937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068712614 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072640951 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06909405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073829918 seconds)
  done (took 2.777013151 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152034773 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074649911 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109672939 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079537146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074829351 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079665476 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074459674 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074525335 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074910074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072608044 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072796733 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074955173 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074798582 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072603788 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072808468 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072491485 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075007454 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072897348 seconds)
  done (took 2.612394716 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081345027 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07115924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092547597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07139684 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07103367 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073513482 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075362081 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078443927 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07370367 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071204142 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078735911 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073358527 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073889381 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071530813 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073614887 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070974242 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074191636 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071118865 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078423615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075036484 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075037672 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078966559 seconds)
  done (took 2.812413707 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084811462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074087801 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085900995 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07278142 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066460458 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068362757 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074852685 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070940375 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074976321 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073478285 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070871881 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068839529 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0728744 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070881249 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073501079 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07099888 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07303613 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070995912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073276369 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066544257 seconds)
  done (took 2.617609193 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088915444 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072185393 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072368097 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079389093 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072006766 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072392439 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078543556 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072465637 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072047271 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092961389 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072347189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072599402 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078215372 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079087437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072128016 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078691585 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078341103 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078425587 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072889549 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072188864 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092739771 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07229696 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078733975 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071923313 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072271233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072201187 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072224052 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076387481 seconds)
  done (took 3.297914463 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072126393 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07131015 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069209368 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069190954 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068680683 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068997469 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06955216 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069004455 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071529481 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069267908 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071501761 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071466979 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071623914 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071755832 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071411991 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071447238 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071133646 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069554826 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069486284 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069162127 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071270707 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071495209 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071400016 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069249492 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06900721 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071439415 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069091936 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068932066 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07116907 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068958205 seconds)
  done (took 3.275406933 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078965693 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077483446 seconds)
  done (took 1.32216947 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0672771 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085909458 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068027017 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076228425 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073830662 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072324973 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077828473 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074592531 seconds)
  done (took 1.758777441 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086609809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079754323 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070936943 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080438208 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079597069 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087663761 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127894296 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070803475 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078285801 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07047481 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083886837 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071080616 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078039045 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072083634 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077602997 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07895924 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068786956 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07534643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072208617 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068890852 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071641717 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080164334 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074987474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066501144 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073008868 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093768219 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081996416 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070180088 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074608934 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078914527 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077707584 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065364472 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070513218 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071101132 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068654207 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07969277 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085416847 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07438895 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079729535 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07145231 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07873859 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066405045 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075834335 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079008509 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082591521 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070811045 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071177456 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066024135 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070096803 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073976868 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066683583 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072065348 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065928127 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078819187 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074719378 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081590259 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069803381 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073368244 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074389857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074690293 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078501665 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073621945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074687468 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070296428 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08205092 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076736669 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078919727 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065927115 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065658405 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06884567 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080483428 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094923174 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077333909 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071075092 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071763954 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068874955 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075085147 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071765674 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076507257 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077869845 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069927877 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074659327 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078146431 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071687417 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073779858 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07646266 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068846123 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072620316 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07002179 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086484587 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071947453 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068444733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069728405 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080866327 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074693684 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069395189 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068683921 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077647901 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064494494 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069482122 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070070713 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071249357 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079049745 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072731689 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073583798 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078663884 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07626603 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070909921 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072790371 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066474338 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.196312486 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072827205 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081093231 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066748979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075682473 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074079309 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071835508 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080758632 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070159114 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071163802 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079785555 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077855787 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069082888 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068619463 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074879162 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070272281 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073342619 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079499015 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069485578 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065736907 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066041879 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075010282 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070583658 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07518417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074391269 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07511887 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065717389 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068715949 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074799423 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079521073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07176118 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072690144 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077326712 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072651292 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070291805 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078109194 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074047426 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071029208 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076340492 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072555464 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066651697 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072867174 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07404591 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069375875 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07549497 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072253755 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072955722 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070347719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069112286 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076640487 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071463296 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070714944 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072121272 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069800484 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081451152 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073494714 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066496792 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068278475 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077619506 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070126684 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06994407 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070934346 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07367601 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070835966 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068929924 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070091676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073493549 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078286268 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073784278 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070923013 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076572301 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083632521 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070134744 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074068995 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070261502 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071598076 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071604768 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08075925 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077648484 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074507786 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073951232 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068203201 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075883491 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0794384 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070473382 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068587336 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070662069 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073244841 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077092517 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07374881 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07039278 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068623881 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072451701 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072530646 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074053928 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069885661 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07065261 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074698299 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06898308 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074789667 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069847218 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08073511 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073770536 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065015226 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071525238 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067592355 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077141775 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06491569 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068939838 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0707321 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06985272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068672484 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072680038 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06432457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.206891669 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081530867 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073728552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072280114 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071269055 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079879128 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074433333 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076273154 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076283283 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078766646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08193389 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071875442 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078706943 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081814296 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070902059 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065316428 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076922394 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069231285 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069512179 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070131199 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068848261 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0748608 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078077134 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07749092 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065205523 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074535899 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06985519 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071412709 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066396094 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076087937 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074988718 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072566458 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078373221 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071270336 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071138754 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075490015 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070253071 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070691412 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070761547 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074615986 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071069122 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073485198 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071484894 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074313797 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070536736 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068343386 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073354238 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069905703 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072632372 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076204341 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070433923 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071715271 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07406013 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07070076 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072465626 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07247013 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071759685 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074747226 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073652467 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072866592 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074954908 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066303665 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079192091 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070570574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079304472 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072402646 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068416124 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076390912 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074694618 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075110206 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071140238 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07094242 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073244864 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07034671 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07485981 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078893166 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070742631 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082309631 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078366222 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072993672 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07446187 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072386102 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073363627 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070791674 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072249641 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070934644 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071858407 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070141382 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075186616 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073988833 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071837318 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072885082 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070901743 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071888329 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071372777 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065471571 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071036809 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071282873 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070484098 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079588957 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070225003 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07090974 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0691073 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071073016 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069203402 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066862669 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075346731 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076016392 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069535012 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076346904 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069720567 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072215664 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080170908 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064153331 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067786132 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.198778881 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07232941 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08074704 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072332769 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082575963 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072919732 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071623714 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069674997 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071579141 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069996837 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066431792 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0693598 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075316312 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071511947 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070305369 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070468724 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074959055 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071421187 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080791702 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069857152 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072805807 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070593578 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068737061 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071273486 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071286734 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074534909 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071792949 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06980714 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068496877 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070520239 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072887194 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072989725 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070333577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07278907 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078483739 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07036677 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07433512 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073412757 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066014217 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075167221 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070197544 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070504883 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070901241 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077906282 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07491548 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071399963 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081109922 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070471688 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072741793 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070885831 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069079011 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070350233 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070381081 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070510648 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070871654 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07138801 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079404415 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069110447 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075007423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072259515 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072744691 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077483366 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071562966 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07456695 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07589218 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072340736 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073447335 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079869983 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074200575 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074837232 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071270693 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073020494 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077092083 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071294976 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078317896 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072522901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071062819 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073543144 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069924938 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070546099 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070730901 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070199394 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077399383 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071563244 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071552032 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071563565 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06872867 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072459245 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072515956 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079254892 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073633774 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074814054 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066135515 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067993472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070900912 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069859081 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073325873 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073726719 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076911855 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073417235 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071953831 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069757068 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080339916 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076602116 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074316317 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069361834 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074262806 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070316988 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07286319 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072050909 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070958828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070521639 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073648278 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072266312 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070094785 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076666237 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073389176 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200929907 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074591916 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074481535 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073808811 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067625387 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071853547 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.075126024 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077082539 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074613261 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071424765 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081833801 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06993318 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072480564 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0735572 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070307999 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076649145 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066594128 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073244576 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071073054 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071300213 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066110087 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071429789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070494032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074007596 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071337184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066307328 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081374285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08066944 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074860735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070171358 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069607594 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066208374 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066172853 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071055369 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071068611 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073330505 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081097084 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071279327 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070487997 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066288338 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070712254 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074404922 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07467362 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068277796 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066723491 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071591796 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074837966 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077769073 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069423664 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070677359 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074756573 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073925567 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069086567 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073130189 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068764129 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075601246 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083180525 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071024788 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07307463 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077940861 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079301157 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071038705 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066422779 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071183066 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074447991 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072594711 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071638191 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071755343 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085905576 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07473944 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071361839 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069778164 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076613858 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.072152314 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079500882 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071476803 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071123089 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076032194 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073747962 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07778394 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075203201 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078077643 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075051909 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074633084 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070167297 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072180434 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069269213 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071000243 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071390641 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070799052 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074404677 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076489893 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071048807 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081434888 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080093986 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072787819 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067995782 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071091321 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071148523 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065980141 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071074501 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068747527 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068539307 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068606298 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069681271 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07234792 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075484223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071829241 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069832467 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06942535 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064464848 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073180826 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072710974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071373509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06731848 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069703515 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.201467088 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077476645 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074833036 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071277601 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074858881 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074069926 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073728586 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067658161 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078647675 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071088735 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073549852 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071875535 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071499721 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071167705 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075477429 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074374169 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071961687 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074273198 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075599817 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072503865 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068671421 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068280925 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07672882 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06884024 seconds)
  done (took 45.40506654 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103511898 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0670207 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066203502 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06657987 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076176244 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067630786 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067351744 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067655593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067595873 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069264531 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066658184 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066376107 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073870972 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080919654 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076817722 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07060158 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06665234 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067540314 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066798655 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06827772 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073915195 seconds)
  done (took 2.74775444 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077240023 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081625207 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078653538 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086455516 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075969209 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074132766 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079212051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073896494 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082003129 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076788752 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082332324 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074495778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076873075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077274039 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076874166 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074677848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082285025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075657489 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074562573 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079392627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074299253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079176895 seconds)
  done (took 2.954284322 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070973762 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069747865 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072832907 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066008615 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06965047 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06553659 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072626354 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068824884 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073558111 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.079153601 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070950923 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070619601 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072620527 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065826154 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.07155246 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068554668 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110596258 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073270036 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070154985 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071046645 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066482083 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072760226 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066095521 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066429849 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070728723 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07305086 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07132495 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068760744 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069948537 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070752451 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070501446 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068415095 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073202044 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07191904 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070936626 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070547088 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.073728779 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07010015 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066129774 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069055192 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087074646 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066390169 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070614395 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072163368 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068712811 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068837389 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073241171 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069937919 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065565791 seconds)
  done (took 4.742053224 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080710892 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110933344 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071590982 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091797445 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083240367 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075729035 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074624949 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092793497 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067418086 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068398569 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084049933 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08218692 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069524382 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073753942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076521155 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06919269 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07029108 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068587707 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072952436 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069552986 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072874512 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07600905 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082866629 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081167528 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073509466 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06846261 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069096158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073397563 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0809524 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073143447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073882742 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074862672 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083537178 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074286133 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069019201 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071732756 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084706836 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069922297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072754012 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067862444 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071422599 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073496553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076401608 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084272204 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069675376 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074348921 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069531341 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067599374 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08104611 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071607545 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076537749 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082551297 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073256526 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069565664 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073898992 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083524687 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069781089 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06796551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072546145 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080546068 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067680148 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073018501 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081762946 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071874335 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075736593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081773686 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074625007 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073713095 seconds)
  done (took 6.517717078 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079226227 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10087853 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08647738 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085926934 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079677438 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079731224 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079838887 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08016266 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08857014 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083717332 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080303039 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119260299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075711536 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081639334 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079850827 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080042925 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080126806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079877894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080094635 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079872208 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079813678 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086145465 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080168704 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086211312 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083443126 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076087813 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08037913 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080126696 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086532062 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079687877 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082769942 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079912321 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079933365 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086582388 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083287059 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07949159 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06955783 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079885524 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080027847 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079814628 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075912224 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086056875 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079684194 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07563518 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080055724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079766783 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086388195 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082884837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082096613 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083666703 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079714572 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08685231 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079749097 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080135974 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086320153 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088534304 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086283088 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086600838 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080092698 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086164949 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086023639 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088623692 seconds)
  done (took 6.413665882 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084812995 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077110654 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088312926 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066523519 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068756701 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076311351 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068842983 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068808379 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077065009 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076936053 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079578439 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076376361 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079260978 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079797898 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076328683 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078786945 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076758666 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076154505 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07711022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076549617 seconds)
  done (took 2.816741126 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079793477 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086992068 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071491813 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07609488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073717609 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075992045 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073314254 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074211455 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072151465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074537733 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079541015 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079911872 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072225934 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075854377 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080602944 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076001704 seconds)
  done (took 2.494189512 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087056857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076296967 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082332024 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070291834 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072146709 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066978936 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069887867 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0660353 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06724513 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083052961 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069993802 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081553897 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070014401 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069092091 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06697496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076150559 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066770461 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.0676122 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06990735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081563169 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074268568 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06872921 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073916981 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07002903 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073662108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074535687 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069386685 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071691181 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06748614 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070717753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07338274 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074400636 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067159293 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068306716 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069565257 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068198827 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070042521 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070437661 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076769925 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070314851 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068738381 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072839599 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070760721 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071297451 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067330102 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070893634 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067465593 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07337276 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068557852 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073552235 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070229335 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07306363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071354879 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077194046 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073134694 seconds)
  done (took 5.225775399 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084861657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074530963 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06625236 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068770395 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07386844 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07177773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073986411 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071739651 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072190187 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068955618 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07242591 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074007744 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072362603 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074244375 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07224204 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074130702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066179882 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071849981 seconds)
  done (took 2.590803324 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077086174 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071490481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078179145 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070560514 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070594293 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072866427 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066134467 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068983897 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069299587 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071130244 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070916013 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073264185 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069122253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073330304 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071078982 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071169076 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073456815 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069335153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071371999 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066699751 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07319253 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069351991 seconds)
  done (took 2.845466311 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097818985 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08837455 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142324722 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08454064 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090782255 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076561187 seconds)
  done (took 1.858342792 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096786236 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104435643 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071028521 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073695955 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079129375 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074111657 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074840916 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074878696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081593077 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079435192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077350994 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082510162 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082222428 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080921628 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079799885 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079594361 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074938412 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074609136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071758694 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086444044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074815343 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082232375 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075513605 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07468839 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074867289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081347222 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081948118 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079673681 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074728561 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082335649 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08008476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074935724 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082765547 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080023603 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074229725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082246969 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075199459 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087566731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080114286 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081389988 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074582609 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080061529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081836345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078526048 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082017227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075314199 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079079143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074960276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075463024 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087880714 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079873518 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080871192 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079856435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082517651 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081719931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08776085 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079521555 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081373201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07965885 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079617829 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080990701 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079819038 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080765124 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079390585 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079755608 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081139455 seconds)
  done (took 6.549120161 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107958854 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072132677 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075316383 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079788455 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081116551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075012833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075262023 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07488853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075255224 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072215026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111849902 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075377638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081475225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081469301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074986313 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075183293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075884608 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081634712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072047761 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088281452 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075095106 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081355464 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080885971 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08086147 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07958923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079704779 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074997923 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075118435 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074630739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074943863 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078637518 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075190124 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081367792 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071978548 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081527945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075198204 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075550923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078703263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074943787 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07979569 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081145179 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086494099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074917369 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075047997 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079686813 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075091272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074863336 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072564896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074913307 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072028193 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07960999 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079939458 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079525557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081001922 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074963094 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075085279 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074895459 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0747178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075011741 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079955043 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080946957 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074799681 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088245769 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075270931 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07481685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081151311 seconds)
  done (took 6.477675299 seconds)
done (took 133.705313852 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196754702 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173883709 seconds)
  done (took 1.641636555 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073399477 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100419027 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080949232 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132903521 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071989906 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105268982 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103792395 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082373673 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07114412 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071198663 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0712981 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073183391 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136150621 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071758978 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071445584 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073294633 seconds)
  done (took 2.680519861 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10178559 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161231626 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104773124 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069936395 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101350639 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076319298 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073252878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079597844 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075649589 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071274621 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077199868 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074679789 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070702392 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075110778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075365686 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076506572 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070652439 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077101757 seconds)
  done (took 2.802377648 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100511545 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094446182 seconds)
  done (took 1.48993438 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161058018 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13733516 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205341066 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340445002 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158006243 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147135176 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148413466 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145085004 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116597919 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140452883 seconds)
  done (took 2.989449761 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104323656 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15247833 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275627701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12189689 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078271894 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094728014 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122659803 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083972207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084046908 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083527891 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083243831 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080805092 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103364174 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078040353 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079493757 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080521516 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106712788 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07906767 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080131195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07975392 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105510899 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071953127 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077758915 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078526089 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081289793 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080740067 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071746527 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071450082 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079693087 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080109793 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080935786 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093911552 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080870129 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105354185 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076157583 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106426697 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080860645 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077461682 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079990149 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077632455 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081888284 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081748811 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078502903 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080246642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071397958 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080862334 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071444427 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071396296 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081672859 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072164222 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082166903 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080888259 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105624302 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072896236 seconds)
  done (took 6.139905979 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111274245 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110243296 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075587193 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115883767 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107504582 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07480128 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109350464 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102234241 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111860796 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075193745 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073085267 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075189709 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083798197 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084721709 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120062522 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110657968 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076748493 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074377057 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111444421 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111037376 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073794532 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105341373 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101507419 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109980715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072538568 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074710135 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07328506 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07522574 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079589838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081636373 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073299317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08290863 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087153658 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081376775 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072164459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073227237 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073397079 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082095518 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082919138 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082282289 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080413782 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072491586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072845774 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074440167 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073789229 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072554169 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080940805 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082635098 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081083491 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073257217 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074495485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073219146 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074448298 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0820355 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080224615 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083047522 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082739881 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073442917 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073302632 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075803989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083663749 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082874204 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082241131 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076649521 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082588399 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073399919 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083512273 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086297351 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073461599 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074419855 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073491701 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073210057 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074326673 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080141804 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080034213 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07467959 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073115978 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073140095 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081706818 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080316029 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07295652 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079247974 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07189155 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072554815 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07433983 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073949857 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080356597 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081448129 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074391157 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073042574 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072346036 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072245532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070848883 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077855639 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080735874 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079633706 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079372796 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072861256 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080149406 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078921789 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073276368 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079550022 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07140789 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073165466 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072831686 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079092918 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07856564 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080529843 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072271136 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071974563 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078515742 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08219441 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072320099 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078286072 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08063115 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079142907 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071063108 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082142785 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072806964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080385172 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071861172 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080702993 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071719873 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078625586 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070766742 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070089649 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070848795 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077980633 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072301911 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071470158 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071858937 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070513632 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077787349 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081161631 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072636663 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077450412 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077707777 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071957389 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077087152 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070014206 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078001203 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07078418 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072183587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06985488 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080401389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071349188 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070250838 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070402708 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078985174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070522686 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078703681 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076975182 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069583619 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080391488 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079114072 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075803028 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078585243 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072005332 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070692747 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070504623 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070622476 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076466793 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077916714 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072305751 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071046435 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076289454 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078022471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069662534 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076544036 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076261082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076706822 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070258434 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070591799 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079372675 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079068867 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076350098 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077020647 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077397498 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071074653 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076302579 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076920289 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070563444 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082622441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07049045 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080822485 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077587205 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075631384 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077319994 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079854351 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078093161 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078838656 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080838361 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070343475 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070508351 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077181104 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070116757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07085034 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076513232 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07243685 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072657053 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080953846 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070323976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.320553572 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075122414 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.084420631 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074976213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078330419 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089585009 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076739679 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081186458 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084840271 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076498512 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084135524 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086332751 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08374765 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076814977 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078453289 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085023695 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084576427 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076540017 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07563064 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076945228 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082399828 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08254097 seconds)
  done (took 19.167344288 seconds)
done (took 38.216102511 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202647233 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154726479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.165819158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120166771 seconds)
  done (took 2.049007552 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116436321 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104525374 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095745565 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073106986 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102279568 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073139101 seconds)
  done (took 1.922493856 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281969844 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196781336 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180670234 seconds)
  done (took 2.014076115 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20560143 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192312649 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.441807804 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269846308 seconds)
  done (took 2.564128724 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143634932 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090080396 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073123111 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.0892772 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131512266 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158208622 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100642026 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125870661 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084778068 seconds)
  done (took 2.400963589 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148837003 seconds)
done (took 12.459063711 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.130032056 seconds)
    (2/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.21885514 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097426454 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.220105763 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074366562 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 0.13986838 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114882468 seconds)
    (8/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.178352936 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.219653177 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.083888322 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.082907841 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.231934656 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.199575058 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.241624269 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081898292 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073320376 seconds)
    (17/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083033351 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.39263122 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.238650725 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.233608681 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081343759 seconds)
    (22/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096250736 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081037212 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116640203 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079795435 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.256665475 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.083759096 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215491953 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.189983678 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.246772616 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081000867 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095561046 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080332341 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.079362358 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058001741 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156719113 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082396236 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.084315742 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174546794 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073098685 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.171473691 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.137800594 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080496585 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198843422 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093431034 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071802458 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080268423 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07067947 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108323813 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15751656 seconds)
    (51/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085292186 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118006845 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.18570095 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.111676472 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.116410724 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.150199074 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057523605 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.130943994 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057450707 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.210418162 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.074483212 seconds)
    (62/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081311167 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088648961 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158839785 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.12343986 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085665318 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.058623313 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070869562 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079067571 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19641032 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082083751 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078462869 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104247044 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091303743 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081531541 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151294486 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068949385 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079990072 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.242710236 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087284139 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086198529 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081934489 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096199145 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083822894 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.11286229 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.211942289 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097142825 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.185220849 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132821206 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118844428 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.105901159 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.179161848 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.082891986 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.078550364 seconds)
    (95/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074874546 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.183362957 seconds)
    (97/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.059174421 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072691041 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084674595 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057294127 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07003032 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.174715032 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077945739 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.078671779 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071106823 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092101514 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077407775 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093504574 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.0575749 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183330422 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162122499 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080464218 seconds)
    (113/309) benchmarking ("sort", Int8, false)...
    done (took 0.150885584 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079076899 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097170051 seconds)
    (116/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152911583 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07613105 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060335557 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09864263 seconds)
    (120/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100259061 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071937279 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.124938615 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079391422 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092755847 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05790994 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.169306001 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079650279 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147449233 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161734239 seconds)
    (130/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087256551 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122580703 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071311257 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120732615 seconds)
    (134/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119715979 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073675926 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076913044 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077571356 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19442838 seconds)
    (139/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.057283653 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079748383 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129231322 seconds)
    (142/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.171850598 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058261422 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078005934 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074753377 seconds)
    (146/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0586823 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058451055 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06878708 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080043095 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077704696 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072926002 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093315975 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070727795 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057352361 seconds)
    (155/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.058851475 seconds)
    (156/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118946573 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077258087 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077858847 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072721862 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071471578 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116194956 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079709754 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.057051737 seconds)
    (164/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059489302 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073172826 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057104543 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069149538 seconds)
    (168/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116988225 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058829475 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058146408 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172562333 seconds)
    (172/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072874597 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075071602 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108006452 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05657176 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057742968 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058592834 seconds)
    (178/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069180796 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072258444 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056920852 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149906754 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081822 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091516449 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.117770651 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185096247 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057650418 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.226154887 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139762598 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.061991896 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128513828 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.109697575 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079256531 seconds)
    (193/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164792773 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.057909928 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082475883 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070636817 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122388435 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094097095 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071612982 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078967346 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072616323 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093880381 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060646223 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14416947 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081816473 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058915634 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071760094 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057666232 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097044002 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078595859 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.057677027 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070607171 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121889472 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080621717 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072243271 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07593998 seconds)
    (217/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077810126 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057683471 seconds)
    (219/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08496086 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.072118385 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078281256 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165968108 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088124351 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071713708 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080873506 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078802986 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125389624 seconds)
    (228/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05966029 seconds)
    (229/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057605644 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146661487 seconds)
    (231/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.072179599 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082766221 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097065764 seconds)
    (234/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097880367 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058203562 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078791858 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081781065 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 0.137037603 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.058089364 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094488187 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059010904 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083776738 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083950454 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071940488 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183869333 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.207798627 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096175482 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070224555 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057729499 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.059032358 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057660624 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178133581 seconds)
    (253/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080518055 seconds)
    (254/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.120679908 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071554834 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058787622 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071459585 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057418891 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072433458 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078564189 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141965716 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059059927 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.059101185 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.058423066 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058155427 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081434899 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071397377 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057310594 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079153745 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07921119 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068742728 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184240191 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09482765 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072276978 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077289198 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057089624 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130377393 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057222276 seconds)
    (279/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072059913 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057879452 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056815581 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057807803 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082496093 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129802509 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071415743 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070411841 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.056644268 seconds)
    (288/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070653358 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077953866 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092534423 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082134173 seconds)
    (292/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057648053 seconds)
    (293/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072752593 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057867865 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070916521 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072127364 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070873661 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115929651 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070148241 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077092829 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070447967 seconds)
    (302/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067174203 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070577577 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057800097 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093919745 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090436395 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.23229219 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191735456 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077497011 seconds)
  done (took 32.928493005 seconds)
done (took 34.295583623 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091167784 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09926938 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081898423 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098688051 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08716874 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083341361 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079724985 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084417716 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087368402 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088890428 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085343911 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062464878 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081228579 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.081097087 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081235201 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096482807 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085341067 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079362107 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07977694 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.071271923 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080183024 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071966742 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073803558 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06189103 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084817863 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078384668 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081073514 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080684464 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07174466 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071762823 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076008496 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080350921 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071926563 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085649864 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080947668 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08035608 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081677235 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083904546 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073507415 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072089429 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081361153 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071263594 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079094678 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.08006447 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078421115 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077421722 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079464104 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083404437 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096280239 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074042669 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081713077 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081940904 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082673973 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079275039 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076465351 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079431286 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077211313 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095966519 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079900507 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073712718 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080904747 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079862117 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077565827 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080116678 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079683896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081973012 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083263809 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077138664 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081240508 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077863 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071308831 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079541419 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075873578 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074088453 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082568317 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08405296 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070494659 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077861149 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079022137 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080038888 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071348667 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073662804 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072685357 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078134273 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073336742 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061145784 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075799216 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078850535 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.071429062 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080095993 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078360882 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079057167 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073440841 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083452565 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070396949 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076386119 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071723989 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071627585 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072748544 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075636191 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070888308 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073313934 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.08151454 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072659274 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078170215 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084056768 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071126252 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078154081 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069990651 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070699929 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084302956 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080974093 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071651438 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07356291 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070096553 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078060617 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070394666 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070560139 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070287436 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070716744 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077062674 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070308495 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073068242 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077965337 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.2257007 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073659027 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077390329 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075067749 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072591059 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078379244 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072252958 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072161445 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073714662 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069071176 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074154033 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071695027 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079375233 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074320488 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079712979 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073622856 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08017048 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076743614 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077766674 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077304308 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070143166 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066099805 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074090016 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073807158 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073436042 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07129277 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072341082 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071008797 seconds)
done (took 13.368132945 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072425643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137543373 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097857385 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098497834 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089216254 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07244589 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080465307 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099327436 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073591379 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10276755 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092607052 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090875135 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114058533 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070201898 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071655361 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075968586 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07348549 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085006998 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100536043 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091868796 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115895361 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070894385 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095553842 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092954099 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090761786 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106414229 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072430698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075489969 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075492317 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095319694 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096898274 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076090757 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072419486 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099497422 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096228755 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086613528 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072431519 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086513309 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07294918 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071619414 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073201938 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100184588 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084326922 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084588709 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075741002 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082088912 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073306195 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086323485 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09231099 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083048779 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089301969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102287091 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074412708 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088069481 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070537322 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088720737 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080504165 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074277722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.073372258 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079589278 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072335171 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075263205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084337019 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083718217 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075581661 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087514567 seconds)
  done (took 7.06438883 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089071722 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100578075 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087541539 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088060601 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071088235 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072307946 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072114473 seconds)
  done (took 2.04257965 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071982221 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092587363 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092437244 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093026366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086301715 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094608028 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081075275 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072588849 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096907331 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070986277 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092004585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102115745 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075041208 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083876345 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094528716 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072404723 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094744581 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072356702 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075237313 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094910577 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076416843 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098877404 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.083763176 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072626372 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085420701 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07253951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115729461 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.081549699 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072500522 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075547146 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072551164 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110949668 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084963969 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083706132 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072757781 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085645053 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08580907 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074901997 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082983825 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081410935 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085348287 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075336332 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07331021 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072687791 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076493251 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081685919 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072883966 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075520686 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075004534 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091841385 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071560044 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085135509 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075004289 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077924154 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.077641066 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076867596 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082949054 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073335625 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091768496 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072680776 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087358017 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086813656 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085204788 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086524447 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074449701 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084469144 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085454418 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075050947 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074609306 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075629325 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08699036 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.074721799 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074147716 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082090442 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074246339 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094172683 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093507052 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07410378 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085178198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073705305 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072983652 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072326961 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094104577 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077459878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072376578 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076368549 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074691712 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074509482 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071329658 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076512411 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072471741 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076837592 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075394573 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075694195 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074735363 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086623536 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071802393 seconds)
  done (took 9.317251934 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075584647 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073857559 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074946303 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073803246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073377412 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073505842 seconds)
  done (took 1.928945574 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09414346 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07353035 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084827285 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076523097 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107804319 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0902343 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091708681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082164981 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08788412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084086891 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090626812 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091976553 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095394395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077705901 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.0911648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076463797 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091228954 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079299173 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083598528 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077495575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089974322 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077201485 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077623932 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085631898 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08050484 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077080533 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083897645 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084011543 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083102265 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082303217 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077148714 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080684524 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075716818 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082032761 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091407952 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075873273 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07883684 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081868229 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076869142 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080781569 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091651544 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077447435 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078742551 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082046479 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081561265 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076278799 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082152826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083956282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091033046 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081873849 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081373683 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07619099 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080201579 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081860182 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075270153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0821576 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081773015 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090997776 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077111766 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07567974 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07428087 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080462066 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082127073 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080923229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081821698 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081945467 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075928313 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07750333 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077501917 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076352196 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08217576 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073827794 seconds)
  done (took 7.378608323 seconds)
done (took 29.175217178 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538494516 seconds)
  done (took 1.98063833 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609514383 seconds)
  done (took 2.083127701 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.572617839 seconds)
  done (took 8.039068061 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.3731996 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48065834 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722203147 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139526676 seconds)
  done (took 3.216840724 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.726390712 seconds)
  done (took 2.204711883 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239690024 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230283605 seconds)
  done (took 1.954299244 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.354685554 seconds)
  done (took 1.820660378 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130635119 seconds)
  done (took 2.601320541 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235383535 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165133595 seconds)
  done (took 1.874482008 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443874816 seconds)
  done (took 1.91639938 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.965565226 seconds)
  done (took 6.441815247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222754275 seconds)
  done (took 1.7391469 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239684719 seconds)
  done (took 1.716177402 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.754645246 seconds)
  done (took 3.228053141 seconds)
done (took 42.299958158 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089103776 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08995558 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089997014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086281714 seconds)
  done (took 1.81001956 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081423254 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077600811 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08101095 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078069107 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080829911 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077532564 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079507941 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080624917 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07757888 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078177963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078281104 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077963643 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08017343 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079444711 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07704398 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080288282 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081031446 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078112335 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080176325 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077757449 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076182254 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080136535 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080111904 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077342599 seconds)
  done (took 3.373119919 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083574383 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077667843 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080855624 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07772394 seconds)
  done (took 1.803003156 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08345688 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094822337 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092696291 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083721686 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095211405 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08998981 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074314102 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074439418 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075314323 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083448927 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073488861 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099108821 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09269774 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083859059 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085792794 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070270268 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072997439 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091323649 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084293314 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084005081 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075384319 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08361122 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073524928 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093382021 seconds)
  done (took 3.489859416 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085120521 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105627511 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085130494 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09529282 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096812972 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.07054716 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083991823 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097834995 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130699025 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07120025 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076833831 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071176651 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079466052 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073830213 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085213028 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112761467 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11621004 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074900124 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102452747 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070983265 seconds)
  done (took 3.273389079 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077343754 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074309186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075312607 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071092602 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082196773 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077849815 seconds)
  done (took 1.953711996 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073857414 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07264025 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072492497 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07200945 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077009195 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073017883 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070766716 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073004836 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072870241 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072959967 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072010215 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071329426 seconds)
  done (took 2.364867444 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185255792 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073535191 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073487627 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071012081 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075444448 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071573246 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085848549 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072885608 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096890469 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072327923 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071876812 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07421618 seconds)
  done (took 2.516159123 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198319058 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080506383 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227636327 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152597912 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110344806 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11447863 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114552601 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114014665 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138287419 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101507282 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161994393 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163408431 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109075862 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138399916 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093419773 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105509188 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151916635 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164885716 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108219379 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162973523 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142974837 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128325457 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146076838 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103752885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106861877 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120094439 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076434564 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084254013 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165458497 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131314352 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146432127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113093616 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093751603 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171740829 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164635059 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137742313 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148394327 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086936309 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10513117 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132597609 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199452266 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091737438 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300683309 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113887522 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084860603 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133457839 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119831003 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121187737 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106870626 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093418204 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143378331 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176230261 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13287346 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089670702 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124583315 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112691396 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112551233 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115057194 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171796936 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156761236 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128747202 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07614703 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109921452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149698374 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135389957 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109087181 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123512099 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094178768 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131645245 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152774251 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123132214 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140414702 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116240664 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092266204 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121585203 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138110638 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127231685 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15884443 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125198581 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077490633 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121689922 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101134381 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083862514 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147015678 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079838243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17032275 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102489779 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108212244 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124144341 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109526698 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109886272 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153220822 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285094613 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107570855 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073416125 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108017964 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120732376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143408672 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091426778 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110366973 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117402915 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081895436 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134211896 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080780939 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123888673 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.0822599 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124722481 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129987485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082341824 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124476394 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106267781 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10489753 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130267446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156326006 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091605355 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084838261 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162741106 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123166378 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104519231 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141048648 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154110467 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105212304 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101200165 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145024291 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166064266 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093185061 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16080502 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106460368 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087355868 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091492695 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124025979 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11274956 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124914189 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08496204 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11852105 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161186723 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079069846 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098133833 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133665932 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082513246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084223154 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106807499 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105650158 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099672773 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100786791 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10373162 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134801141 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274571177 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108837201 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125160551 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101348639 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164905347 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092308768 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106027526 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106485465 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075756069 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131347475 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152162481 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083789174 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157697979 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123160973 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118336199 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120732115 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087660606 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135200178 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083003418 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075041117 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140077641 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113157553 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111262448 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147690422 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117101355 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124325597 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11950358 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130526512 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130042719 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129733558 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108738973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092476445 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114666934 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127986488 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077906964 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093217301 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08409427 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107715562 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097959426 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087574639 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139816054 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12324485 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110029249 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113642245 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099022099 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144752644 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080566744 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125365805 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120465383 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098296658 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148299293 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148154996 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132631754 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101529576 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282589141 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076773328 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079716596 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090696631 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123126345 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087425306 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087528873 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116295375 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144296823 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128109043 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134365765 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124570724 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119934491 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152590223 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075361815 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121497489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1433226 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121712787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107719913 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094540526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102482271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141212551 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106550979 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172449121 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116433516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125796163 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155613584 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106227934 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083589829 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105502876 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13140936 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10502178 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142567403 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102533728 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091589992 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110500382 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080691223 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100023371 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126698132 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118863898 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136559916 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114407885 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131351135 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081934364 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114351071 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122445451 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120594667 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069564534 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118451905 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161950581 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098209188 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117757552 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297268365 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084252929 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138005569 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168196347 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142881503 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088462753 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108808651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121996252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125198583 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119886945 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135657515 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107080616 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136694393 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112062143 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089642118 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090550764 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099298172 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106172194 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097522661 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104353141 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11453339 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099664777 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131355248 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105286966 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112770254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119279823 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103199033 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096332923 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099840162 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1712634 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119631967 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165903124 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103789408 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140174329 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157469726 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080328962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083472621 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082626508 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136567044 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088908513 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130877165 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112819345 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118032302 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12332023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136788393 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097993328 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073333499 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110006623 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131350227 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123876446 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100078176 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103468425 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157186699 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101679722 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082460293 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260802878 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11856111 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10579059 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164437624 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068661533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109050296 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081739497 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084333752 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125233576 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146847248 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084945567 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103480489 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121541758 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113306985 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12554425 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100597803 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110479023 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124965781 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143975438 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127743223 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093037254 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112696539 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129755105 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151780392 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104381238 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101248113 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167648444 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14963257 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15514905 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089533241 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115664335 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115979192 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111697159 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136729911 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088291506 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157410232 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085983768 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135417508 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104925428 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090684916 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126804629 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112580464 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091540977 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142624658 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117629655 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086468273 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081543384 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116008733 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119211026 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105221169 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079463917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285322314 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079744508 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132522161 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156671214 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085065969 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107084301 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099331825 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0840076 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105942907 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104477729 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090001162 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103633471 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166030824 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089142419 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144435485 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133032502 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113185455 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133987456 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104981024 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642799742 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081541942 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148007256 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115465227 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16721777 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102700187 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119127616 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111994598 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121167103 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14125293 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10436962 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179682925 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130851393 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117683535 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083714184 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104403711 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105660687 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090237823 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10971631 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115635379 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116519046 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096468027 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117493174 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123213697 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086100886 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098411594 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150979722 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115459376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14085525 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135119923 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088002432 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118040142 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134989025 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248299763 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119927196 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148560654 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107242776 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102476288 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085146171 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10167841 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155428898 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078444252 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154884673 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123641971 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111721335 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114674592 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110585405 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13048863 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106184164 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122857428 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094389732 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10890817 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115221416 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085723521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080960259 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107138705 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111680726 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101703692 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099151313 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10338913 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148538657 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077480822 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101919492 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11790699 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141196508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167021531 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092642988 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087386764 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121263247 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117024962 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113924104 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122336463 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083680371 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085295735 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083861558 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086202003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109976988 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11550379 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114784744 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110442179 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155984708 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08716421 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228931031 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097809205 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106778304 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074931475 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081722967 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098225174 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09821515 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254349464 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110884537 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156457748 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099593722 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09397165 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094248077 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080194974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087375718 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125979764 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112882696 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11879067 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103202127 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068690932 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107260537 seconds)
  done (took 59.350316678 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111969069 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086908536 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101629775 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149203123 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125446605 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203533318 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156757677 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193556196 seconds)
  done (took 2.716818547 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074408432 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099634716 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107865372 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087381604 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071972684 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07351012 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229536472 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086088207 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071768962 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09731625 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082155695 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074452852 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.410210782 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071383374 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072740717 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066904962 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072586984 seconds)
  done (took 3.427497121 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.396175989 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619884895 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345881872 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083746911 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.947278885 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097429252 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.145139487 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140169853 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08344108 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532814753 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.413729855 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133988661 seconds)
  done (took 18.526057532 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086550102 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079941475 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092647545 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092411341 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083123401 seconds)
  done (took 2.019847655 seconds)
done (took 108.126758522 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087314344 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427593 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059526266 seconds)
  done (took 2.102161834 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091481046 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090201899 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089139023 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086909995 seconds)
  done (took 1.94963578 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079429977 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081318826 seconds)
  done (took 1.746441812 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228086389 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171491606 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100272626 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087302612 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083911048 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084958098 seconds)
  done (took 1.847929328 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076974559 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079663536 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077818139 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079917014 seconds)
  done (took 1.900270412 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080671348 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057915647 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059794109 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06238842 seconds)
  done (took 1.849473198 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091452409 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088326088 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083198849 seconds)
  done (took 1.850690938 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104313029 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091720594 seconds)
  done (took 1.784670845 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08529158 seconds)
  done (took 1.674431848 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092442037 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103040842 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135329926 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117422816 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141239558 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117833943 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089694209 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089963113 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08383587 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09131785 seconds)
  done (took 2.649011223 seconds)
done (took 21.525472561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083035787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371668125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364484501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093392579 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673935789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36222074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99166927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097498229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144644404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073114955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089683446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653855454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982661434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334199689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969257103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33534834 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6558408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074366868 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073709362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0738005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976948405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074459641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073742855 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074496712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653768123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378392618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074142413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.352132716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074289474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075886186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361049847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073800624 seconds)
  done (took 16.307206073 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075705931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123692865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078018764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088994331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076101861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074948054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077139834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074901316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12598657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074073767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090673634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074123277 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077572767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074351315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092959377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076972977 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074791968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074711017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074545724 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074523442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0922979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074156446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074360996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074748713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073792909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085989391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074909269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074172588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074277562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075915991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076968494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074765262 seconds)
  done (took 4.186149022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120965513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127552792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078243569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10898362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117202827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0760354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148597786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098134326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132277273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074454107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090640656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074731989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106767764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074644231 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094284345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074764181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074811908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075039849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074333962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074714297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092948658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074093214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074006848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07465745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07447928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088289644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074381591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07446841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074450114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076327574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077790608 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07477628 seconds)
  done (took 4.431385578 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078246206 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080132575 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08695519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087773642 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074287847 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077172435 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078324514 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074531069 seconds)
  done (took 2.243607689 seconds)
done (took 28.76256412 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08417992 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07421247 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078174003 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093400582 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079309342 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08251646 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072003471 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081329702 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078502938 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079528153 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080400012 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072604891 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077577983 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072295813 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079451061 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073500507 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084376791 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077766851 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083777324 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084158945 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075948295 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078955876 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08133858 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083859914 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083541175 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083142159 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082210487 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07866799 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073600003 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076142112 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081456459 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088676281 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073284787 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082867936 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072854872 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073104604 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077322172 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072823072 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083616495 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081813867 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07550083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081735526 seconds)
  done (took 4.907115642 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092251416 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096728735 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08933069 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067177096 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072320464 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070723462 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093945182 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065695832 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065954805 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093156073 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062588501 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06557046 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069069589 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060609299 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065935567 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063636926 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067578818 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061411517 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066009173 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065859055 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093884209 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060224584 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082875768 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068536723 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062767955 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067973921 seconds)
  done (took 3.507345149 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080520175 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088065941 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095482383 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147344155 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115261526 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083081526 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083975965 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096951734 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098701345 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071923784 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076073249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098678572 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093110453 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079039737 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073039166 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089502255 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.09063456 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074696998 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07855669 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100139409 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090862848 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090186319 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096531856 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086546889 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072116167 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074853879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076418413 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08550204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075417507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08203097 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075596795 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075946625 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074440673 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084014424 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076087959 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07465526 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098518942 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083002827 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083632253 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073698272 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081096664 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074509541 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096017063 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129163382 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07240816 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078469964 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076270584 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083036503 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072229606 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099295113 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084090983 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072991204 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076096291 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072223041 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072578352 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076131332 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074609657 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075375454 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081822807 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078627343 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097202161 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077956686 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088766992 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072910034 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081113796 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072215519 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073991488 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072012819 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097540483 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07484876 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112797578 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075228648 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07388984 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081845186 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080936372 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079342183 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072953519 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089362119 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082606871 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076761139 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081250556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075765335 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075300497 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101705722 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075685302 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07455583 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073747827 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078672423 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075959423 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074247477 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085800855 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073257643 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075603216 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089030056 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073450114 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074480891 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078282082 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076661185 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072129799 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083147212 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076771894 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073451016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081999169 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072633819 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075111818 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084335719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078855543 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071600082 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076616488 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077643597 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073299571 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074240586 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074921362 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07422498 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08127358 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079390473 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076730768 seconds)
  done (took 11.197409926 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167084852 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156741269 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076474233 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149942017 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081538165 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083449776 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149929201 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097918596 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073213484 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074194497 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073602237 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112688067 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108351499 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118577398 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083356699 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073386311 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095307459 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116498557 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152104363 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147796499 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095502159 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081358671 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075375251 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074945239 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075186133 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082664602 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089794853 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082084069 seconds)
  done (took 4.506491887 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085101768 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10735045 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080035761 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09523099 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094516835 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073521514 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075053958 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074765615 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08984493 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082286777 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073470581 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077525266 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079297836 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075636302 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073796102 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07971563 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079309445 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074221701 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076692104 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080259766 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083235053 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09596504 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076113629 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072132839 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078141986 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072251621 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067670906 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087492671 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073600306 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097598773 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070922874 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077546053 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086880472 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073746108 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073102761 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073175117 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07285933 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073091207 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075308613 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07187088 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071886627 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063509123 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072249437 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083087711 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08616381 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062173956 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07772691 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078249334 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078570714 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070905697 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07620269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075808834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07591369 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080697817 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077588865 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078565667 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074645838 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081321286 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081469293 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0726628 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069994652 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072094421 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078414057 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069858806 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088380349 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078414008 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072014692 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073177621 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074857353 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086596566 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073210921 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078459728 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070933519 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075070215 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077920958 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075009166 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074312069 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071935138 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073413212 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073118623 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061222537 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073011306 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059017659 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076018254 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071481356 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07193111 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073032602 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077527832 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083809754 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074342141 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078894467 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074233721 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072301991 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075936559 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065472026 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076380419 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083314278 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086661197 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073312365 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071060987 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086187765 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077641017 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072473607 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062542889 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077138135 seconds)
  done (took 9.698783232 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098266397 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075721955 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087150824 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094030852 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091541647 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079780484 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083456793 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074951674 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089140284 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080127402 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082436432 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073258508 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084130838 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08317513 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075403683 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083450025 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077024145 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088667705 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087583104 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073696564 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081966009 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085756657 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094418237 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086025275 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084407688 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085694563 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09430524 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082900462 seconds)
  done (took 4.016514509 seconds)
done (took 39.430279784 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.697722505 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.856470248 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.687844833 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.995019157 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.76387156 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.71074886 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.864814456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.684666662 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.999271185 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.727112908 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.030185577 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.782736072 seconds)
done (took 64.542302022 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.735273366 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.839580445 seconds)
    (2/2) benchmarking "String"...
    done (took 1.911665664 seconds)
  done (took 5.363921237 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.927673177 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.365190839 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.920140092 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.683554698 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.688704316 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.941483265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.49145663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.222672496 seconds)
  done (took 29.925936205 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.890851641 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.91543285 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.39402918 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.426203815 seconds)
  done (took 15.293211864 seconds)
done (took 61.947693084 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.67943025 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.693006543 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.721415601 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.669053372 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.741812088 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.688343861 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.810315023 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.915121541 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.684225596 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.672712338 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.686406311 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.11359353 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.692797401 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.800194641 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.684237323 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.697790376 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.714265054 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.113509111 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.841018131 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.694147675 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.704658288 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.723888496 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.687991439 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.685471896 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.697084621 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.689028202 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.078233864 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.699903825 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.315987917 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.690061373 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.716178684 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.982235527 seconds)
  done (took 201.595584505 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.686433566 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.855167216 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.877584809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.692072277 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.371020854 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.86600392 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.786496769 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.388392412 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.687075013 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.705128072 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.962438956 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.684311634 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.989182947 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.633070499 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.737424594 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.697679363 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.890455991 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.996796565 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.741723292 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.854017971 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.694559736 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.788883969 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.745495854 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.946453052 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.703748313 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.696867845 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.855267391 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.708561018 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.881114057 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.86488012 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.691031018 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.708020139 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.906953964 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.558669624 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.702143325 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.689729494 seconds)
  done (took 167.862518531 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.882668737 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.689466476 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.686867265 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.688020574 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.69965499 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.687303059 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81328635 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8152397 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.323257842 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.008342951 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.740497213 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.686983154 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491591136 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.687244987 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755469282 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.698340544 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.687848674 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.687409116 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.704019406 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.715543088 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.685933065 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.688210314 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815426447 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.699957135 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.686549346 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695323885 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.688589883 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.693855461 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.062557413 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.687228752 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.69111535 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.685652197 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.693591577 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.945727545 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.687785445 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.689310662 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.543841424 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.417428906 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771575794 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.689250657 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.693910572 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.688832118 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.905332355 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.688306918 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.687949444 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.688663731 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.691305299 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829058042 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.689023716 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81095522 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.689413324 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175158826 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.686897109 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.688852375 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.585777673 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.292716244 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.689324068 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.691263501 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.69037286 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688231896 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.694860802 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.406939301 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.76150307 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.690476942 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.693556538 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.694319159 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.689506053 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.688624126 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.688779978 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.688798668 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.440386506 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.751363708 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.807274689 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812944204 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.691053189 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755964506 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784001673 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.690058969 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.688567364 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.690317803 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.689779096 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.770646855 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.689718978 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.827486032 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.697308249 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.692802497 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.691616187 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741981829 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.759910917 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.689460092 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.527803069 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.692547988 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.690823569 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969383958 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756823534 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.690850487 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.69230333 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.822906645 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.81518798 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.403225844 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.691261683 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.690118344 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.451669713 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.833615702 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.692849726 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.834500295 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.692657678 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773318782 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.69608668 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.694398716 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.724254331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.691564558 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.745538827 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.691491777 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.067316156 seconds)
  done (took 392.465060626 seconds)
done (took 765.477111079 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.298475962 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.265951839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.363867984 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.278416777 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.262814571 seconds)
  done (took 13.088824053 seconds)
done (took 14.706904777 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.779192322 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.785973491 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.716665564 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.782103625 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713212138 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.779790782 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.763938574 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.717217076 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.749842315 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.716972338 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.750489914 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.717524592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.702590879 seconds)
  done (took 24.295677807 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.929098493 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.928885298 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.762042982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918012739 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737409297 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.920002432 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.855515171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842263323 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.842617102 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.710050101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.703396646 seconds)
  done (took 21.770839028 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.926214831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.930674902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767973089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.9266034 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.744725841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.929729235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856438737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.844539747 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848892878 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.715512312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.706726882 seconds)
  done (took 21.820037151 seconds)
done (took 69.507384644 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.704116284 seconds)
  done (took 3.32744145 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.731611397 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.897922333 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.712986307 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.705575153 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.702113049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.702004891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.706030761 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.706360084 seconds)
  done (took 15.488899913 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.702023977 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.704670918 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.700778514 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.701888702 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.698111139 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.699021095 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.700850604 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.698257627 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.702954732 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.702211351 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.699739934 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.701418254 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.701583622 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.701771536 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.70011583 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.700116924 seconds)
  done (took 28.838928219 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.700874967 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.699813659 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.699473226 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.699080602 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.702151897 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.702106092 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.699008683 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.698802916 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.699938582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.698610021 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.700799033 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.700393406 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.701053116 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.699725169 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.701068829 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.703283142 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.70072512 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.701349483 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.70370264 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.698990974 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.700022478 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.700423551 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.698779377 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.700216894 seconds)
  done (took 42.438786949 seconds)
done (took 91.715429922 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.441993214 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.430508245 seconds)
  done (took 9.496598584 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.702819689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.702046217 seconds)
  done (took 5.033238914 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.703209325 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.705330605 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.70246515 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.703180737 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.703590149 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.706203202 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.703929179 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.705927457 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.701888374 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.703893058 seconds)
  done (took 18.664021693 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.703168208 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.70410441 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.70028941 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.704015398 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.704213324 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.701399683 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.703633272 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.702668258 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.705163568 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.70320543 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.704653494 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.702283696 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.704212322 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.701099192 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.703812601 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.701777928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.701470941 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.700374168 seconds)
  done (took 32.275762975 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.703825263 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.703739116 seconds)
  done (took 5.033476854 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.701017577 seconds)
    (2/7) benchmarking "second"...
    done (took 1.700333484 seconds)
    (3/7) benchmarking "month"...
    done (took 1.700958339 seconds)
    (4/7) benchmarking "year"...
    done (took 1.700243796 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.701072317 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.703053443 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.70078305 seconds)
  done (took 13.532186088 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.704741287 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.851243929 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.916513518 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.334288131 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.705651205 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.70670121 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.585882106 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.708627371 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.708498614 seconds)
  done (took 18.848365088 seconds)
done (took 104.505364339 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.541778434 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.701849505 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.954476423 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.748713535 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.705075633 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.04751334 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.712415524 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.987003142 seconds)
done (took 42.023903209 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.794062444 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.376103799 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.584954329 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.735439434 seconds)
  done (took 15.322190666 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.700713079 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.115551435 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.711439538 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.558995041 seconds)
  done (took 21.71864599 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.073617923 seconds)
    (2/2) benchmarking "read"...
    done (took 2.047923219 seconds)
  done (took 5.753218549 seconds)
done (took 51.215717333 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.706368522 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.707080337 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.70513791 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.705276047 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.70433337 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.703826509 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.706198971 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.703373025 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.703116628 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.705444499 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.705881841 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.706230636 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.705620554 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706140536 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.703666893 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703900033 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70559315 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.703574085 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702894286 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704518991 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708041543 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.70388791 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.703831468 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.704020928 seconds)
  done (took 42.543844385 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.708430227 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.70461567 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.707741744 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.707507708 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.703990336 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.70792936 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.706388043 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.704731885 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.707747672 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.708617915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707631581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.705471005 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.706622463 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.705082385 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706965523 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.705008559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.706580613 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705071396 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70800016 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.705461697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.707236525 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705901086 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.704829342 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706437019 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.705727506 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705375228 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.710246907 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.706253226 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707617975 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.705621251 seconds)
  done (took 52.823107564 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.713191313 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.71665856 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.708864494 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.708387611 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.708783406 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.707940444 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.71000465 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.709215894 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.708231906 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.707596828 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.708316406 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.708643632 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.708950581 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.709120246 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.70937361 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.70837773 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.708694074 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.70888959 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.708976311 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.708107704 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.708845587 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.709983547 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.710067697 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.708567648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.710695803 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.709735662 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.709547401 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.711322123 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.709003421 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.709457479 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.709703229 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.709517373 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.709930774 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.71045579 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.708701688 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.710409007 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.716761652 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.718404513 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.710738789 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.710612881 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.708591165 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.71137326 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.70930952 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.709624249 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.709677233 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.710593231 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.709214124 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.709407728 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.710048951 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.709483354 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.710445388 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.710010706 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.71017755 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.710154097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.710157971 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.71076087 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.710811847 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.710213341 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.710693593 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.711600367 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.71061123 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.710623163 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.71178734 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.711933512 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.710243359 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.710286621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.710744905 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.711901283 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.710783366 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.71108419 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.710447307 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.711235532 seconds)
  done (took 124.764575031 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.712215749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.709454103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.709881847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.709209646 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708226046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.711326416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.709845179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713088114 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709518951 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.712769338 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712347369 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.709340057 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709975613 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.712557895 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712144035 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.708730998 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.712823412 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709123414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.712356755 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.711289768 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710363617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.710604895 seconds)
  done (took 39.269763374 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713216394 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711670422 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.709989013 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.713157056 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.710089757 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712333631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.712584634 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.712847415 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713424484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709976468 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713063546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712884665 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.710367471 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710066545 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709081655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.71071732 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713332891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.709948392 seconds)
  done (took 32.443137267 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.711233599 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.710873447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.712561066 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.710379956 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.710009152 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.713325553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.711258335 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.714634701 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.713348388 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.711020801 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.713888429 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713701645 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.715027565 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71120827 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713809692 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711914527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.713045755 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711579716 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714594792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.712189164 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.711339297 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715069011 seconds)
  done (took 39.310366856 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715380616 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.714528045 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.71153016 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.712261004 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.712428909 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.712837382 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.715236812 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.712097068 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.714652279 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.71449908 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711812438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.714574171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.711595903 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.713157355 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.712027775 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713182918 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715067439 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.712957505 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71485655 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.713048081 seconds)
  done (took 35.903730534 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.715515881 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7166476 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.717656434 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717788895 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718030465 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.716829081 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718294332 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.717058306 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.716568228 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.717948231 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.71671576 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716973729 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.717919096 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.717195721 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.717850604 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718113646 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.719278971 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.718538361 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.71760011 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718056493 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.71934506 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.719031358 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.718672372 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.71781607 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.717579905 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.718595672 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.717883991 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.717531357 seconds)
  done (took 49.734628843 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71908178 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.716306752 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.714592542 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.713888372 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.714544733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.716600968 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.714013826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.71553553 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.717316373 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.715848496 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.71712387 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.717189285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.718831332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.717014169 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.717366419 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.720586407 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719704534 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.719139061 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716419051 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718384121 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.718987455 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720419089 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.717765393 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.718580466 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718367238 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.721664347 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718635515 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.719423388 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72185977 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.717362215 seconds)
  done (took 53.171206579 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.738607667 seconds)
    (2/2) benchmarking "in"...
    done (took 1.739092018 seconds)
  done (took 5.11827643 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.715516859 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720878824 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.720062114 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.718959811 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.720719692 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.72007104 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720896665 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719298746 seconds)
  done (took 15.397980954 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.722333189 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.721174344 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.72244936 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.721251582 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.722953241 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.724802966 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728141238 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.722479069 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.72235308 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.723581028 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.728255514 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.730916121 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.72425998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.722439234 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.719701741 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723096346 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.723433666 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.723953249 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.724506575 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.722979216 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722563186 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725315762 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723554598 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.719901168 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.723442525 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.732084623 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.72791907 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.722555098 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72243935 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.727428023 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.724974237 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.718864041 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.722456954 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.724664974 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.72175033 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.722398624 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.731818231 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723754502 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.728371702 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723797046 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722060653 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.719865017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.723052994 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.723751931 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.724697917 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.723306825 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.724265667 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.720713114 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.724137129 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.727903589 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.732022181 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72163974 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.721455055 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726591753 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.723334975 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.730801856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.724870374 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.729022538 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.733272814 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.734686564 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.736392232 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.733109113 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.726088215 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.723253218 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.734517507 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.75141724 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7267355 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.720813974 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.716437574 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.721717265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.730823687 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737775725 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.737141312 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.725189002 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728173535 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.721889646 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.723763078 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.725446804 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733832426 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.72539735 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.7218576 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725138759 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.737223603 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750474987 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.722150735 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.725796525 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.726243892 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.724495515 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.725578174 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736194985 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.726695805 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.725194704 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.723173429 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.725240277 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.725999421 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.726715216 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.723256314 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72576863 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.722805111 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.726662162 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728179315 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.730289286 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.736058722 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726746463 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72502827 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.730669923 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.723141854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.723730883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.732867542 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.72597585 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722968147 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.726698272 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.729519788 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.723359221 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730293737 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.735889155 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.727199445 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.727693117 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.725900285 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.725557127 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734300518 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.755550564 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.727439103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.724880718 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.731729646 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.740272447 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.726067889 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.727167392 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.724643523 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.720188105 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.725477253 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.728065734 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.727072098 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.723117221 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72667439 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726843944 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.725285187 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.726392721 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.723616094 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.72799922 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.727661087 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.728419124 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.728950036 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.726409828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.726999665 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.729400075 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.733562887 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.725056112 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.730130354 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.727704577 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.723209961 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725009569 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.728641795 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.724747454 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.729201902 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.729420476 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.723927127 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.727945164 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.728820577 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.728564048 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.724870918 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.727901736 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729917847 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.725716293 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.734013244 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.72520272 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.721046402 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.725377269 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.724632638 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.728518602 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.72599684 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.728110183 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.729769926 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.737825131 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.72838169 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.727733083 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.729812979 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727893774 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726907916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729742303 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.730307146 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.737171545 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.727170143 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.733182383 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.729323121 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7289334 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.726474468 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.72917259 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.729101281 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727364864 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.73046008 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.735883961 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740799324 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.739909804 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.72937077 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.734230257 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.729361359 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.734084501 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.730664467 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.729198162 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.727166039 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.73183579 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729865378 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729867225 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.728779496 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.730479153 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.726163711 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.730430204 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.724831081 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.729494425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726820148 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.729179738 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730570292 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.7254939 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730428735 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729746475 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.729720496 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.725001682 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.731097101 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.72605411 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.728420052 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.731989142 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.735085834 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.725064372 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.728371657 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730241442 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.732016302 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.729523863 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.730867375 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733854619 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.730034713 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.736625579 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.729645416 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.730734872 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734910533 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.732096488 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.731369161 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.730556366 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.731593974 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.727786 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.732440617 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.741631197 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.731836511 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.728852523 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.728845565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.728759467 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.729723043 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.739713902 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.725674642 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.72798516 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.730407433 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.732402305 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.729893138 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.730894719 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.731514815 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.732930384 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.73234915 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.730963613 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.733390545 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.73263456 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.729293944 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.732547267 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.731990197 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734630599 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.744553367 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.736309523 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.732660053 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.734405339 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.731271788 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.737283441 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.732487379 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.732566814 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.731771341 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.743569521 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.743222321 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738354671 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.733800029 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.733179936 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73898879 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.73353156 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.737896021 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.729604395 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.733673464 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.729859966 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.73324876 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.726226454 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733900743 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.728993349 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.732946327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.733471588 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.736719209 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.730191538 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.731643766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.7338852 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.736600022 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.729548922 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.729606359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.733373279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.736579858 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736720739 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.73303103 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.733416378 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740198637 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.733493385 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.734560776 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.729662623 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.732888839 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.729878082 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.734103596 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.733429859 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.736533907 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.743242132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.738131074 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.744710562 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.733130716 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742963164 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.732823421 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.735858847 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.743383642 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.73162431 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.730057455 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.732328427 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.73425268 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742420186 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.733077037 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.734712915 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.737622413 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.733422105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.73837857 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.732001776 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.734976117 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730846093 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.735038814 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74651043 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.734254947 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.738267367 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734244957 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.73202024 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.733132117 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.729811636 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.732458779 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.735144429 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.733478813 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.735238769 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.730402007 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.732483863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.731799899 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.733772869 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.731916105 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.731411905 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.733582837 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741096214 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.731075164 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740270615 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.736540598 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.742115382 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732812396 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742293861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.733899207 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.735250484 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.733574658 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.734804015 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.735325344 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.732204137 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.73607522 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.735726139 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.734529534 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.739669644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.734858218 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.738853837 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.735927914 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.73400302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.739670261 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747003684 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762366297 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.7380035 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742384168 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.732620568 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.737966282 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.741819319 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.736749666 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.734089867 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.740909308 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749330703 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74497711 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.73734823 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.73625342 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735910853 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.738246756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.733276036 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.739686155 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.734922967 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.735873106 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.735684267 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.736397753 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742820761 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.733390521 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.736947362 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.73692477 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.738981432 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.747067862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.736406898 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.7362487 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735874982 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.738803403 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.735012076 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.736797328 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.734014052 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.737353996 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73771617 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.738967442 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74427046 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.747783366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.73790743 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.737278973 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.736589636 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.737855549 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.735564045 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739140035 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.738075016 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738138332 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.735838656 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.737316371 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.741594683 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.737204402 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.734361319 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.739643127 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735867297 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74124158 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.747665356 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737891748 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.736620729 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.737429745 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.736524927 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.736831881 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.738897407 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.74770685 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739786337 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.752014895 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.74979744 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.742616683 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.735784153 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741575658 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.748075081 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.737028321 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.740890469 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.739784685 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.741246212 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.738201747 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.746241897 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74023313 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.747629846 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.740785629 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.737041535 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747801413 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.74069935 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739384859 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.741711946 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.741614293 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.739305695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.735638111 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.73968068 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.739970734 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746583418 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.742638843 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740059582 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743256372 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.740784207 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.740277526 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744613537 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739136911 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.739928299 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.734284209 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.741832189 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739516374 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744701498 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.735906087 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.738200114 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.742130388 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.743002101 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.751560034 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.739367585 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7415247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.741007093 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.743949223 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744846935 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740155656 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.736197491 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.737536756 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.737938028 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742304925 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.743904445 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.744627905 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.740812353 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.743624808 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.743665545 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.744166007 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746244393 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.759480878 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.75188287 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.738306196 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.742336211 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.742532417 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.744641955 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.743761192 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.743248373 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741617336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.74362125 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.743747541 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742164555 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.739175751 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.74571397 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.76273071 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.740880464 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74296539 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.743815168 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74613302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.741226388 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.740620602 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.739812044 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.745495043 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.746134704 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.751062532 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.74404915 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.748846984 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.740232662 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.745816572 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.749000012 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.745994888 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.753136103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.744787549 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743448163 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.742088487 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.749206459 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.762959136 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744528291 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755163512 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778382474 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.746641453 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.744298061 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.74477221 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741802396 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.743140284 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.745866048 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.744494124 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.746300808 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746281923 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.743795193 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.747270111 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752130208 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.745068715 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.746308403 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.746841815 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.747500404 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.748774571 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.742482002 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.749197795 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.74866858 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.744938825 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.744673535 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.74811434 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.748195821 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.756031486 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.759164031 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.745237286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.748261123 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.745844592 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.747581452 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.752137142 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758934807 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.756337786 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.745074228 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.747521538 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.746301711 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742919056 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.744945023 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.746717733 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.749746247 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748830641 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.747997846 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.760118294 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75759367 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.750277489 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.747877332 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747210909 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.74796832 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.747400053 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749649994 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746559727 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.749216419 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.747564207 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.751873546 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.746898451 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.7478911 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.752077894 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.758406456 seconds)
  done (took 1035.82045752 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746486715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749574971 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.745330299 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.747156841 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746254231 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746396981 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749925174 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.745527392 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.747505964 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748797817 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.749921342 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747119031 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.747175173 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.748559686 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748774786 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745319253 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75033627 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.7473083 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.748920232 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748728526 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74760503 seconds)
  done (took 38.373700761 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.752955107 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.748575945 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748851767 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.751431759 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74835196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.748992179 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749213772 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751394035 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752948822 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745599227 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.750849265 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750966638 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.74898114 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.744226324 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748783528 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74896024 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750776686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745064325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.751685253 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.748959702 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748991508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.74801914 seconds)
  done (took 40.15599167 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.748145795 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.751367138 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.749947361 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.744777313 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.750434564 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.748431168 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.749195032 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.749882594 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.748487338 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.751721739 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.751684662 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.751699192 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.760147051 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.754379577 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.752957053 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.749636767 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.896459506 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.750402076 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.751702289 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.751265705 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.747632612 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.756914301 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.746665512 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.74603111 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.74565896 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.750062725 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.750087892 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.74863037 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.751826042 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.750823935 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.753940233 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.750168274 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.751923425 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.754649531 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.745700654 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.751187663 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.754406113 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.75099325 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.749017746 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.750722049 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.761361958 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.772478335 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.751185196 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.755686663 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.752314381 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.74836416 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.753534981 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.764558257 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.746221906 seconds)
  done (took 87.647089534 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.747309678 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.753524441 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.749726913 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.748669023 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.748549364 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.750045225 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.747635721 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.748475038 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.745077872 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.747245703 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.748598204 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.743024898 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.745793355 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.746638238 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.747695185 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.744896934 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.748514598 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.744795622 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.743559981 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.743352631 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.744826658 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.751838562 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.748868837 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.746451612 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.750046325 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.744761414 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.747334625 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.746618389 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.744837605 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.744858368 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.747461884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.748307678 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.749925219 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.746501529 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.740726636 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.741626792 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.744780497 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.741373588 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.743538831 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.743424919 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.744843698 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.744256385 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.744321597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.745462599 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.744047681 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.743971307 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.742687547 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.741348643 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.742679359 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.744661767 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.74478021 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.743811898 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.743870792 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.741789671 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.744853756 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.744351345 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.74430997 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.744470072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.744502993 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.745002081 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.741002247 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.743613275 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.744850577 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.74049933 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.739673199 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.736421735 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.739928826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.740669855 seconds)
  done (took 120.341060383 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.738421838 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.740238137 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739746342 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738142212 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741679979 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.737631313 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.738634433 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.739346923 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.737998859 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739368791 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740625641 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.738520895 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.738739567 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.738471911 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.740101973 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740865532 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.738864174 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740305737 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740827616 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73983997 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.739213868 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.739702315 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7413038 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.739506928 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.740638813 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.740788735 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740847135 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.739453357 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739836936 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.740312295 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741027559 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.741352883 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.7390676 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741176535 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.740315913 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.742019712 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.741500583 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739556692 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.739219582 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740565469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.739449653 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739814725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.739293864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.740932943 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740216811 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.74365647 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.738596711 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.739585886 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.737678774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.736772738 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.739897057 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.738511152 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.737991932 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.738007738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.737948816 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.737812704 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741446417 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738577968 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739748149 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.738185126 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.73927962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.73770609 seconds)
  done (took 109.517528869 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738143136 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.736259374 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.737517054 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.735214781 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.736893128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736529045 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736295179 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.736308011 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741195638 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.737608628 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737696642 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.735791303 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7370049 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737633885 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736346028 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736532944 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738497605 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73803645 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738912896 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739073144 seconds)
  done (took 36.4083056 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.736461373 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.742298559 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.735977399 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.737049132 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.737712687 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.73745473 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.738404387 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741735342 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737735325 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738525419 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.741602602 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740600998 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736998892 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.737363878 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.739052273 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.736495091 seconds)
  done (took 29.472584239 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.733615951 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.742085659 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.737263082 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.736207378 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.734141113 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.73346316 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.736632697 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.735063889 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.733335829 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.736548846 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.736084218 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.735693475 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.735972868 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.736837632 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.733903439 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.735902912 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.733207766 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.733465911 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.73612129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.737680408 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.733759014 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.733348422 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.736668432 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.73651765 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.733980835 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.733434372 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.732737889 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.731809425 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.732643952 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.734873475 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.733526542 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.734599654 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.733183525 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.73293805 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.737626294 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.73360139 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.736463579 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.735695997 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.736075497 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.736011912 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.735432436 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.733549328 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.736734247 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.735870375 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.73349823 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.736921247 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.734574712 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.733267246 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.732973724 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.733386417 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.735196363 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.738775647 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.735544371 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.736374625 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.735859948 seconds)
  done (took 97.090151262 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736090157 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736102321 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.733730219 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.736400615 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.736530654 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.734336341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.736892524 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.733651521 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734085667 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.73739652 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.73491368 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.736836433 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733741029 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737559292 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.734904903 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738185154 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.733201725 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.733666529 seconds)
  done (took 32.895047187 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.733316472 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.733960041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.735923683 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.7324494 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.732109074 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735503426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732681477 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.737400781 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733822573 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.730979043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731954279 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.733526156 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733197898 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.735133758 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.731542591 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730744406 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.732875695 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733948125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.730570162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730848689 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732693632 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732651964 seconds)
  done (took 39.784792258 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.73212798 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.731632294 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.749585048 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.751789065 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.754091019 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.765186438 seconds)
  done (took 12.138126733 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730728902 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732723772 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729487335 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731108075 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732172213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728641344 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730664044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728048994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729760681 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726986529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727532653 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730897696 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731638223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72759421 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730776851 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72970199 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726589336 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726860761 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727943331 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729923387 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728259206 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729755034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7280147 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727705197 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726086133 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726311166 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729579232 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726548311 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726111922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7310541 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729356703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726907305 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729204828 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726849152 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7283685 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729778322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725055906 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728176523 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728069286 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726138052 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.728655944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730483038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728735501 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725453545 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728874338 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726908637 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726621012 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727361086 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726488935 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729188128 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728720903 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72628317 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729326822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729719176 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728408885 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729815012 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727975367 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728117565 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728886658 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727199778 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726088399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728979979 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726676795 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725735611 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728719489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725687514 seconds)
  done (took 115.726619246 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725747856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.72480915 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725894602 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727524842 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72509408 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726043359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727110906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725895123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725423017 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726398052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728114685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724884207 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724431217 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724810948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725444368 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724895868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725143439 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725154263 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724396705 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726438576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725779676 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724165824 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724002297 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724290608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72453833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727729271 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72573296 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723020029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723926837 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72425185 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725543113 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724887237 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72583424 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.722695168 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722816767 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72424183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724497618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723926722 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724733509 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727135866 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723443713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726559476 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723743004 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725352375 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724010667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72286479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724790548 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722800517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723249816 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724496044 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724270733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72295946 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723044006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723746412 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723429149 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724000241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72419431 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724048631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723515727 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726586631 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723813216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725267568 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724548654 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722350631 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722356261 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723217405 seconds)
  done (took 115.480053087 seconds)
done (took 2402.961319711 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.726364551 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.716836872 seconds)
  done (took 15.090211678 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.884865703 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.841137127 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.724393006 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.743137001 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.727001189 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.744083081 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.738890218 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.724522795 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.724551524 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.724343459 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.726366173 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.910074961 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.779666573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.724900805 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.723394488 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.816588401 seconds)
  done (took 49.907364018 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.727601467 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.728193234 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.738340757 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.730383171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.726738387 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.739356302 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.760707995 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.730035657 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.760740716 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.73986269 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.795596555 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.738720495 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.725951295 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.777773647 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.740617614 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.740683983 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.822720444 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.803173102 seconds)
  done (took 33.176505256 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.805757274 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.733089518 seconds)
  done (took 10.191901565 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.74954877 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.762546038 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.784201691 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.726190786 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.719588127 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.748866055 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.727299798 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.729120684 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.733742807 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.758274841 seconds)
  done (took 69.088829019 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.731998961 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.726668232 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.726339564 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.724416044 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.719496679 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.721879171 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.725931924 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.719564495 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.394351458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.761321674 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.732222182 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.729918939 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.726114524 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.726121202 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.724640072 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.749606397 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.829592264 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.72287741 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.722539667 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.730650173 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.726838307 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.777271808 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.738295177 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.727822911 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.756917961 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.392671399 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.734776582 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.731280127 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.842369785 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.723543011 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.726487772 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.728280064 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.728574091 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.103558596 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.995447933 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.726777316 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.741587195 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.733369877 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.725269291 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.83453989 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.726770536 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.734358861 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.440757286 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.979602658 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.822678535 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.768305347 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.047793064 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.745289583 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.727253903 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.754420734 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.72921026 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.728265351 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.740865272 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.216769914 seconds)
  done (took 124.355749643 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.723385267 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.073104751 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.891102849 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.726077473 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010302716 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932594124 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.724439888 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.772164257 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.724671444 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958216535 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979108821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830027794 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.724088535 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.72399785 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.724074834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.721974661 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.879583011 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.797220403 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.725252963 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.723514161 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754600461 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967254985 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.847894682 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.727221279 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.752627206 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.936910659 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.848072292 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.829411417 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.492225627 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.722835874 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789109037 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.725646727 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.724221286 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.72200713 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.881534923 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.820863659 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809882723 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.727690352 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.723995877 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.72343653 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.476980654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92747612 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.822378144 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.856585357 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977087539 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.931454787 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.509338226 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.721900473 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.465194432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.892516985 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.954396717 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960138641 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.848413804 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.726241736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.268211789 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.72174176 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.724256345 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.97489149 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949510389 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.824339604 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.726001626 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.723800753 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.722837848 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016765048 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.726728617 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.823110376 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.726152451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.724403324 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.82409964 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827561502 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.958327037 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939843353 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.757660093 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.069601886 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.240053005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973441039 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.792604311 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977095319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.726193021 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.724371777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.804865196 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.572560257 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.981826179 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.008745822 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974128116 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763911716 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.447804997 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.726119728 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.95255612 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947807013 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.988600042 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976381516 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.962091576 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.060568444 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.725704493 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.725387166 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.026072073 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.854301766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.727396928 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.079826336 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959551318 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.25839662 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.755901073 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.031512527 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.859302991 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.728752034 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.359073778 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.728737173 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956200576 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.76931026 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.726840107 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.726610658 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.947588388 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.718914669 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.728354458 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.631227719 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.790152287 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.727605017 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963661206 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.730555733 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997488404 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.729995576 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96226963 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.776462759 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.759404294 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.956892113 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.97672891 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.729092538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.968636672 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.971840543 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.844878104 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.001526324 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.632034041 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.727267945 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013860382 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.730159661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.726718023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.898118797 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.727974382 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.872060839 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.729766791 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.021690341 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751700847 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95900322 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.730047321 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988671938 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.76265145 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.779700359 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.732544225 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.855602154 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.731151835 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.973466937 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.888758532 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.729599756 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.727593283 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.527868342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.727000522 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.878916894 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.955666231 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753055243 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803015579 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.401107405 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.727962578 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812075118 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.75354996 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.122673067 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.728450651 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.982415143 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.729491079 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.727514935 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.729353716 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.017384068 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.96821686 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.731538451 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.727663177 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.637975466 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.727848367 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.728821828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.912939728 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.087409503 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.728014587 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933891253 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.731133385 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.85852526 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.734281505 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.805783073 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.07280923 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729177882 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.729151423 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.729747766 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.72855074 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.729569815 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993797409 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.756977725 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.225303987 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.870114802 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002886538 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.042802023 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.971776882 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.773294817 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.733291291 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.989077288 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.733188567 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.794089076 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.732125226 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.753461046 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959468288 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.732456843 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.996597439 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002772077 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.637343126 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781023299 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.731181134 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.730487357 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.729949435 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.877634803 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822515794 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.731898025 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.730822826 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848453322 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.853939282 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940666553 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.732780187 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.762484627 seconds)
  done (took 873.24143379 seconds)
done (took 1176.697694987 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.729688379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.733162319 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.717176878 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.735019883 seconds)
  done (took 28.572814341 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.738197306 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.737158876 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.737416457 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.735537914 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.740838652 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.736321048 seconds)
  done (took 12.08194198 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.776061025 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.730013114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.733176811 seconds)
  done (took 20.896747866 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.804534008 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.121201206 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.838043075 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.157432173 seconds)
  done (took 9.579242467 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.740282494 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.738696968 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.737422688 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.742183821 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.740880405 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.741609909 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.742465229 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.741186394 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.740973927 seconds)
  done (took 17.325268925 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.724438878 seconds)
done (took 93.837303731 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.864075839 seconds)
    (2/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.969995905 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.804712199 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.910278529 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.83926881 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 5.466235143 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.733708428 seconds)
    (8/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.889667809 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.092113829 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.758291902 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.75075287 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.719429509 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.9241808 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.722446538 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.314402603 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.73300078 seconds)
    (17/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.119286759 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.742164201 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.178397865 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.736234154 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.051450554 seconds)
    (22/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.751985772 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.767199973 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.700991461 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.7750911 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.662308019 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.903548601 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.035127486 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.628745535 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.150124678 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.072726327 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.068404348 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.94344962 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.83986634 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.119790964 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.750137987 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.746350642 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.861625194 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.279982477 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.749239662 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.439485386 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.691630277 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.920024015 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.249240912 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.088288007 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.892840278 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.775627001 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.852165666 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.383923247 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.992772365 seconds)
    (51/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.886357062 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.745173472 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.993742082 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.833095157 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.817089651 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.969933414 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.104456307 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.886833717 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.611375538 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.732696458 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.950739405 seconds)
    (62/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.758762135 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.999348825 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.846246813 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.738028209 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.211380357 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.6443511 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.909798359 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.769442959 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 6.747038912 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.751126381 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.930006063 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.316234916 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.122613977 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.769594405 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.745656365 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.842691692 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.746859368 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.508952077 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.065862056 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.748604988 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.841398315 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.851944157 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.773707886 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.733797342 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.14319765 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.790714478 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.131257345 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.869021462 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.73594202 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.970061824 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.895889532 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.750920024 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.344118071 seconds)
    (95/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.814887874 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.041431121 seconds)
    (97/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.847324369 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.750528169 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.024765359 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.981311471 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.738582641 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.942119093 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.769906684 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.908448878 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.662191961 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.693550972 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.775511624 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.698477613 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.991137554 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.751889466 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.983477759 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.753003841 seconds)
    (113/309) benchmarking ("sort", Int8, false)...
    done (took 6.15846961 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.777898452 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.549323646 seconds)
    (116/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.76869673 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.771575511 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.734649242 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.451320872 seconds)
    (120/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.802139444 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.053216866 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.25845054 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.955681872 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.685405401 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.923942943 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.036512394 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.779993395 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.750038019 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.82636077 seconds)
    (130/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.619608418 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.755658343 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.094846171 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.866579562 seconds)
    (134/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.943698685 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.822609537 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.883382432 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.132100486 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.737823689 seconds)
    (139/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.485527437 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.787178629 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.851691232 seconds)
    (142/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.172882484 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.96735112 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.163518312 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.813673592 seconds)
    (146/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.145172704 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.028939205 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.876535998 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.775317379 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.004230793 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.756327119 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.763818671 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.075401342 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.801963923 seconds)
    (155/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.843448037 seconds)
    (156/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.903673254 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.835965984 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.7756982 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.92648589 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.748688708 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.726251423 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.841881262 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.911663457 seconds)
    (164/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.741263356 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.491373848 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047591182 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.778426499 seconds)
    (168/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.876097033 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.178164147 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.275221536 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.755844019 seconds)
    (172/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.891664391 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.852820336 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.844833251 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.861093654 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.047720221 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.18257834 seconds)
    (178/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.010914447 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.806961627 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.120355388 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.758128137 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.766862001 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.153550217 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.915058233 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.961120376 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.846473175 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.101208468 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.783076099 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.736193728 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.840280697 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.360481281 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.848874916 seconds)
    (193/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.856068879 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.896708055 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.916908981 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.889388015 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.863860423 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.873589942 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.854123684 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.993098135 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.754145503 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.942557802 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.869861308 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.834493549 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.763898515 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.034219818 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.758994686 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.098740615 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.864835579 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.820248155 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.154431416 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.859399022 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.977495677 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.784390229 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.75570661 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.914272778 seconds)
    (217/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.205676548 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.110269044 seconds)
    (219/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.656443228 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.026386911 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001109726 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.958109782 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.617613803 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.055542652 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.507130275 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.95949861 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.753531292 seconds)
    (228/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.851404973 seconds)
    (229/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.026638572 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.759299514 seconds)
    (231/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.932966286 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.762176467 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.832340672 seconds)
    (234/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.802178806 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.320435236 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.780811362 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.779534232 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 5.489950019 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.94055053 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.776078652 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.046718001 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.461805507 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.258708613 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.159101586 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.75839772 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.743198743 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.17368328 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.860758408 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.942654454 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.253747075 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.122258294 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.76162924 seconds)
    (253/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.783918986 seconds)
    (254/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.98860835 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.016307469 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.16387887 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.435517873 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.938148873 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.764037056 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.859848255 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.896059718 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.742122813 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.162463963 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.831623355 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.941881781 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894973221 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.37414961 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.909681919 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.79075753 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.087414638 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.879156758 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.762672898 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.72040281 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.762053723 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.875545876 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.071704898 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.906249353 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.754687163 seconds)
    (279/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.847095786 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.742603731 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.949336821 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.747911658 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.874083697 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.809094406 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.895934585 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.142413092 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.858530363 seconds)
    (288/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.76458192 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.617322228 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.755364377 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.469212249 seconds)
    (292/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.834459718 seconds)
    (293/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.844189598 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.857006632 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.170744247 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.856618084 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.108715566 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.760048137 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.083786293 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.797539637 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.975851776 seconds)
    (302/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.209293568 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.163618614 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.876089013 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.797182931 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.672857797 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.994336361 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.761646536 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.821310105 seconds)
  done (took 970.87230969 seconds)
done (took 972.600056264 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.822627453 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783365629 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.767740741 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.790562705 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.87958925 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.796113226 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.77892627 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.771156405 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.816415108 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.818735272 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.765879748 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.79443568 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.769863283 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.769572968 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.768155358 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.783152291 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.086557443 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.801959368 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.786327691 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.77880286 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.786540125 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.766539604 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.818920271 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.795332039 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.773810396 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.770602006 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.773062316 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.789419134 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.882187297 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.772257009 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.771716523 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.781062878 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.083983989 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.800855983 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.765888806 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.789008588 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.781181515 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.780887914 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.77389538 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.800923713 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.168959306 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.811072663 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.772593771 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.771806005 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.770618539 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.773467779 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.771254307 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.776619797 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.784508723 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.785302098 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.162203224 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.828675114 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.773174621 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.772936567 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.781090876 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.771430002 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.774411209 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787155283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.790498438 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787925825 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.067095936 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.808147194 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.77366232 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.788386531 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.77883204 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.199394211 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.808952618 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.776917892 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.17002639 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.818518229 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.198046576 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.823171729 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.774028367 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.786853301 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.80450006 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.084753988 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.79835465 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.772111095 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.780025931 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.76861733 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.781397221 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.785428456 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.777965357 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.773810479 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.78680945 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.799789422 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.783122962 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.772611533 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.781440022 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.792374655 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.779852177 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.784733702 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.777224735 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.768035589 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.785012199 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.778068323 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.776841244 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.777176966 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.779330982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.784262941 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.170002506 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830217608 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.771384674 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.771507684 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.772457135 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.787572216 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.169893453 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.81575501 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.796802971 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.820591414 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.775672767 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.069935197 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.808185235 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790491836 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.78351874 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.777651575 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.769630708 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.069493304 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.197131499 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.829249967 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.776305436 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.771840841 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.790386378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.776862643 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.772841949 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.089574876 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.808025838 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.789421072 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.899197548 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.786363695 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.807197115 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.772464055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.779161722 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.807185524 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.790521508 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.807238056 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.778234514 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.790159885 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.791028755 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.7721845 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.786271661 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.786073916 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.776625496 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.780398401 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.770784436 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.806575346 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789965376 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.789118007 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.796703522 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.897554857 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.774161051 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.072003744 seconds)
done (took 279.284047771 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.846868238 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.773865165 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.869649631 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.772513683 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.853547791 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.858144439 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.770175662 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.770264456 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.769558658 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.145870261 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.76997937 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.771159381 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.767062689 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.771151876 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.855785555 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.772535415 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.769717385 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.111997002 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.773532706 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.845598122 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.768685027 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.770977383 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.773734228 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.151534014 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.768479403 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.769853303 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.844950727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.773744802 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.115149902 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.775261458 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.766799436 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.114534463 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.864047284 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.801329734 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.77604115 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.780482347 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.85620084 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.787903269 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.854908993 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.854814153 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.871675515 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.806692983 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.767385687 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.767777077 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.778343439 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.775684911 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.771137266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.801984303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.773759225 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.771594649 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.112652424 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.784192377 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.783594872 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.771991057 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.773154215 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.797657141 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.773243305 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.776928578 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.868613819 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.776568553 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.836997375 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.152020909 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.148876199 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.776441906 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.769277841 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.77266426 seconds)
  done (took 177.861779304 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.841184327 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.853264547 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.840922375 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.780069919 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.826433177 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.842500014 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.782057885 seconds)
  done (took 14.460540167 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.782256475 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.775647508 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.828047123 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.826911813 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.776177796 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.930775535 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776057001 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.787744367 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.783855228 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.802182638 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.779405278 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.777073116 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.783895039 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.772629733 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.826271368 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.786592393 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.893712248 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.778053014 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.7780919 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927955497 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.774175887 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.784423196 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.801431099 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.787559327 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.781390977 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.783604821 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.372197323 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.778056396 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.774357542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.777776947 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775103648 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.817591121 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.779322139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.776695138 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773345504 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892826029 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.777691723 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.774475601 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.777688064 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.771024011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.777207496 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.777901302 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.777618258 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.775800994 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.77680456 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.799115634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.778061412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.777201728 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.777386178 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.778062023 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.802461245 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.778868485 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.775002527 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.775922267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.82091892 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.78495996 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.778943191 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.774695067 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.778717707 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.776509826 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.930338441 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.827287693 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.777903571 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.828220574 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.777697339 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.780192184 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.779076819 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.778962576 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.8743517 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.77783988 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.83092815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.778047443 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.938577466 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.801381617 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.781279737 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.782289247 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.783177254 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780954858 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.779627043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.787035529 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.77744752 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.781664993 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.786260088 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.777292874 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.778410781 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891974264 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.917963497 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.778195654 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.792650813 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.787434752 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.779208617 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.82307264 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.780610179 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.778085604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836134792 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.89684747 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.807637887 seconds)
  done (took 196.789413945 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.784783112 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.788429842 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.781077907 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.797773263 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.780926649 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.780131108 seconds)
  done (took 12.411372381 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.782990166 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.781293895 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.780859648 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.78028734 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.782274721 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.783266164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.782237241 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.782751093 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.786553696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.780683405 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.784125085 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.782684315 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.785021136 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.783652138 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.782925698 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.781866931 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.782784641 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.778366756 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.781187082 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782175109 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.925517376 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.782133337 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.781074081 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.782140246 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.790380318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.782094886 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.790153464 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.782439369 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.782534866 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.792133125 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.786898132 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.785898655 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.784020924 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.788533346 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.787251119 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.784593811 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.785180011 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.783429765 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.779834896 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.785865681 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.783288503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785677702 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.781710165 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.783401701 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.785043886 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.787798632 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.790746389 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.790631901 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.783485141 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.785029724 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.784469259 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.783534583 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.787177159 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.786138061 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.785695072 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.78905134 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.788051549 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.784657042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.788664645 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.784123991 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.784682623 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.786965433 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.786126178 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.79196559 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.790944243 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.7853549 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.784821041 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788172107 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784473262 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.786626611 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.785118405 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.781971881 seconds)
  done (took 131.346807959 seconds)
done (took 534.578132552 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.90083516 seconds)
  done (took 8.601940957 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.896675264 seconds)
  done (took 8.640608731 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.309070793 seconds)
  done (took 10.018704864 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.796897413 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.813714472 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.798120722 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.788813704 seconds)
  done (took 28.927613758 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.803460311 seconds)
  done (took 8.511023411 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.807280382 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.783058056 seconds)
  done (took 15.332386122 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.939067931 seconds)
  done (took 8.646894389 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.881324954 seconds)
  done (took 8.595537418 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.801611652 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.791611696 seconds)
  done (took 15.315269115 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.770041525 seconds)
  done (took 8.478172976 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.44548251 seconds)
  done (took 11.250327648 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.802493324 seconds)
  done (took 8.617617446 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.822457824 seconds)
  done (took 8.528473645 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.839746525 seconds)
  done (took 8.544688411 seconds)
done (took 159.710699343 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.784054316 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.781567212 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.78204421 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.781925411 seconds)
  done (took 28.834487951 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.819801355 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.820605889 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.822474221 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.830995385 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.823080975 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.819820523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.812507461 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.81387927 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.831366472 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.8233857 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.822683508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.823414703 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.821911891 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.814845846 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.824006588 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.823378963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.832152976 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.822818736 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.815551526 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.82419222 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.788231389 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.831684572 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.823287858 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.788946749 seconds)
  done (took 45.380762019 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.981850058 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.861710309 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.94137633 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.839380394 seconds)
  done (took 9.331276144 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.839512268 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.84154593 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.853096869 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.892491736 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.915524213 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.851984805 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.815109846 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.809256657 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.795996686 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.8431739 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.917341767 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.836115677 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.92906323 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.789593482 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.976566071 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.791449815 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.789262254 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.841659355 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.892688361 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.916854528 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.790325943 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.841085039 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.84430961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.837933182 seconds)
  done (took 46.160525672 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.787090625 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.796446087 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.794582974 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.788789876 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.79116039 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.788720477 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.796228954 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.789839491 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.809734899 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.789586988 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.788656337 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.788165043 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.789581538 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.789623511 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.788538808 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.802445464 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.803045917 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.790027153 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.792600238 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.795777035 seconds)
  done (took 37.567904103 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.785007435 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.636256077 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.135064649 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.041404496 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.78532952 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.78449694 seconds)
  done (took 30.876238308 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.803825854 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.796773704 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.791410161 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.848109686 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.930710171 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.797141596 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.789947266 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.802741573 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.837899615 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.85601612 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.811338841 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.81954976 seconds)
  done (took 23.594782227 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.787622555 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.793997148 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.787089564 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.810183547 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.801296574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.798236273 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.796980749 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.784928315 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.803495622 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.810011625 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.798150368 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.803875502 seconds)
  done (took 43.288726122 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874825568 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.680682859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445717247 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591315477 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321699128 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996618603 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441068326 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967190491 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.789941035 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058367423 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.396274678 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035494447 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039453225 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78765127 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.860296127 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.255243765 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084321298 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024266016 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818229832 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548396328 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909534821 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328099136 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.521782842 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917423336 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99961753 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.917322194 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.04672691 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.743910436 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923082953 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826834337 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797155496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788285333 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062063874 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007819205 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875961728 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798294201 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.442030642 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.5053124 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.777193276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.537666735 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.452240395 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927025993 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795358064 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78916912 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721215384 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321128443 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97489696 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.793711575 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.490527759 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.789288126 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797881976 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874642731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.792739561 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.607698214 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742195374 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.067734358 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.787687886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795457417 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342854538 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888211621 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426957956 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.72966409 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.88202763 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562138886 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267957839 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.947857341 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.793425616 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791767305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722022155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.542513631 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916954325 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934266184 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.808962826 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437480391 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095748649 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.463469738 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875629651 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09601511 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.592316081 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.729704396 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016288692 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.740259953 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722504638 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.64540821 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.723052252 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068113179 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830494097 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.459159161 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838068614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967308926 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.801663571 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811682956 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797478702 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014125155 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.672817307 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792486286 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.341014507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079106525 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813201329 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969469881 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725864443 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.794729214 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045494375 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.001472498 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.046605048 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.263814218 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960352883 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791206029 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.879906435 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.722964574 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806680136 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.078886459 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858375786 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905713557 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926221059 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.750004892 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107213544 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823167969 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.967981705 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.413985423 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06160244 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12447067 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046911641 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876817935 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793954945 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.79301601 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.576478684 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420190303 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.016849121 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.793635338 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31207745 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.806694837 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.794909256 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725433625 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.447417652 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.414509122 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.906211346 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01534262 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.76710368 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072076501 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72624342 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937353021 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.782005263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.016252864 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.460373342 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.878011837 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050907805 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288782716 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.048135073 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808400023 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811519133 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875274958 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816269787 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.229627324 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050452226 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.797431672 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.797672912 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56984771 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.873510348 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797148854 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.798673279 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591648169 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089557727 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.828402303 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.80485264 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.688060635 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.808668838 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87885867 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800448049 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.803495685 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.32127261 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638210942 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.807527628 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.482057278 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035177077 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805300687 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.563312728 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992327623 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.886986815 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081541386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864520167 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.72851803 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.498119005 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.497493523 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795999155 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.729254666 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.796630735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803344829 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805957195 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.050010169 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.092150687 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849552576 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.560794167 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.915364733 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807488812 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.800219589 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797748334 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.292771527 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.921259041 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466705867 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.807775848 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932336812 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.809876078 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72881111 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.8005515 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80124114 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.798743219 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.750037009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851063588 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.56651417 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136926886 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056456367 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.440856567 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815677666 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.540977757 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.931130373 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.855582397 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.370364011 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788655969 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.93451926 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862752688 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.808392571 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.566499177 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.583058332 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349682157 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117860347 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129825184 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258971918 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.185057476 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139993923 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976437202 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032058524 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.325147262 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858520397 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984145159 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741865434 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891492737 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.468714428 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161172722 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815264833 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025954564 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196852641 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.440784131 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965909665 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009150379 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833003809 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.62272927 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830287084 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.322718976 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952434655 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.373049774 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028290543 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98037304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.377333536 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908490422 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.798565336 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276161452 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885992892 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.507977854 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15932245 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354113658 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.455833104 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182681826 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.812641787 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244272849 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167059935 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.145630004 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.898314556 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733843835 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809974064 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.810806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.800314199 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.776061429 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.729687216 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.084817586 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810575058 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033603859 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.084163026 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084969062 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.714969728 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.804810069 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801389216 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11159539 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.567901206 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039933708 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.153498468 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.372706257 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809368854 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.73332184 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734282528 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.504458283 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.812194281 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.775318747 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033757453 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.91276922 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755943075 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.200370142 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116471372 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054993248 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.815551175 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086993173 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085457429 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543489276 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829907457 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.904765797 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.375340334 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.51344612 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.023273557 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034843815 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600294146 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03265368 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.460213714 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.782176895 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.801321965 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018065038 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.023342194 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.444261032 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060461844 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.528454116 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.80984427 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166583227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869601098 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.450709904 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.023726023 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.897044471 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813817185 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8846343 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812749155 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.813851054 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81491594 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848175502 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.44893066 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947157506 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.817135226 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893148432 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933205539 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.389172166 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.814478648 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091724203 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174005322 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155034721 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874064372 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.805166898 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807428043 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736782919 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941538871 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.249203352 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078406254 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935961764 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.997279258 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830371009 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.382540285 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.113332341 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117475877 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079768652 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.698441844 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806237755 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896676686 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.028619593 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815443697 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.015019714 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042822675 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132971828 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28312726 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.944834353 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090009263 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080157071 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.176049029 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80671614 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399915684 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.819038806 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323541633 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.851752762 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.451548729 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102002518 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815049345 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027998854 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.830814523 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.002234128 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.25799877 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.531200687 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175383208 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.806446529 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872154706 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09407246 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229895432 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131681193 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88853641 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816372627 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.52181172 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948315744 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.778077824 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.07926859 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808799167 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019073599 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.519776121 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.817473295 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104831894 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127394285 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.807712103 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.80685444 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863032235 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.820264223 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029791628 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088476283 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063831819 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817356427 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.817759524 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.623776593 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098914289 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873945687 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741082582 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.813721159 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904663607 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05537261 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829719818 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.327183447 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.515068772 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119801437 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.735246729 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833130212 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.228224359 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266251726 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158610875 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.334591373 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049275109 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371444458 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.673116394 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184464835 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.813662693 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.220169347 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186192495 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.813213544 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.327589232 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921135092 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.090194554 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138862015 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.826164937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631328557 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.856877637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03365072 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404795807 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75273235 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811718762 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.871112217 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810315282 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.805668627 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821942755 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.804562284 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.679532549 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.651434577 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30357706 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.815297248 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.801461459 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.334532376 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374691439 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917374165 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969064438 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818787705 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.704251377 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.103486096 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063829096 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328175589 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.884391389 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.814674657 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811819246 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737042922 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008819361 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.067126114 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113549927 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.158977971 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.92219385 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815426325 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.025764489 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02316321 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.400802748 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973332538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.204881453 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923762515 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.741128132 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522841779 seconds)
  done (took 1646.041392302 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.825094152 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.828227711 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.816896164 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.849903325 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.835163554 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.834061669 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.838866029 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.819249594 seconds)
  done (took 56.382811942 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.815090996 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.996415179 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.82327682 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.815158865 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.835274369 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.814789358 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.007405788 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.82681946 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.825400707 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.823784282 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.815648046 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.82172814 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.573586975 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.843127571 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.815971237 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.826009433 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.833061139 seconds)
  done (took 73.858110347 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.816752383 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.188585449 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.842648279 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.837459837 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.808775451 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.822863719 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.842266497 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.821229499 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.820189515 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.995671945 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.153237915 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.826207555 seconds)
  done (took 89.515067106 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.831490527 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.822669807 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.82185828 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.821692041 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.821577115 seconds)
  done (took 10.865437484 seconds)
done (took 2143.420660224 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.048709421 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.0021033 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.044287045 seconds)
  done (took 5.784331166 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.962382417 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.01171123 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.128304334 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.135058416 seconds)
  done (took 9.980655026 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.119802275 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.200102769 seconds)
  done (took 6.057685909 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.144267746 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.849946885 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.234548677 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.815350669 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.816054502 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.815935244 seconds)
  done (took 22.190351598 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.818299722 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.82103527 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.817885976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.82144542 seconds)
  done (took 9.016768744 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.80148228 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.501302081 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.801032579 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.815223119 seconds)
  done (took 20.656649848 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.968023072 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.935037714 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.966388003 seconds)
  done (took 7.606704999 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.305773254 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.736824115 seconds)
  done (took 8.780907105 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.97997493 seconds)
  done (took 3.719211305 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.848521962 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.090180395 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.329310756 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.362497006 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.408025614 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.650162976 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.158701137 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.053209772 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.267822859 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.284332555 seconds)
  done (took 24.192126142 seconds)
done (took 133.000582675 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.164458669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.846720213 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.022384722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.175845922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.055794281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.020897283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.037753828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.165318853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.858623776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.853209696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.178358804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.052238513 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986663723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.834868371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.991801938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.834307349 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.050170545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.185893707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.866148793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.101212403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.047016054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.823750955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.014528968 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.839222911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.054206999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975295257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.36896862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.840016174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.003756352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.380316316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.980405492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.237729509 seconds)
  done (took 166.587605254 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.819531893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.819693873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.817381882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.819033866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.358518081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.82059242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.81941926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.819709946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.2410552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.240603202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.820223708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.347305246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.821164569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.819743211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.820981504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.818038851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.39611778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.818820419 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.817525294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.814889557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81748162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.188564573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.814638461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.194132306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.383635097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.813735611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.811959252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.811894072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.811392408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.808757467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.808966577 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.807625921 seconds)
  done (took 207.686506536 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.807538838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.808530528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.807534261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.808929656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.80744336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.805573479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.806946081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.824835018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.538686061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.5364071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.803750125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.804202213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.80635156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.8025334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.802450377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.80129603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.801800919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.803471319 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.801690144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.803001066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.803062396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.525891531 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802038641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.530015001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.800869358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.80327125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.804315263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.800968374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.800895468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.801499695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.805483271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.799499555 seconds)
  done (took 218.392927516 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.052920625 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.806792813 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.807166349 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.724116024 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.806433994 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.805710767 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.801056339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.058580361 seconds)
  done (took 18.595393693 seconds)
done (took 613.010270932 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.279945617 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.128603325 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.981618404 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.830302555 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.072475483 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.862487166 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.82434728 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.890028194 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.441683505 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.897433742 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.470631764 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.848109536 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.560122094 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.853126858 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.94942894 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.883992765 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.414021999 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.510711275 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.003186874 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.884926603 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.994416087 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.757380265 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.912862795 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.479462478 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.579243164 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.813934464 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.891099575 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.419276418 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.836007739 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.982850558 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.567269564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.126002654 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.840554721 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.823557973 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.882818714 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.858233316 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.094249109 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.840236956 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.946192702 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.571805422 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.887968618 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.343054216 seconds)
  done (took 99.761294994 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.794708602 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.794414873 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.791195899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.793660225 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.793970599 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.793931837 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.793174758 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.794935059 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.793429557 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.793496333 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.79488029 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.793030001 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.793589986 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.793031617 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.791870266 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.792427697 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.793729356 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.794317878 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.795318276 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.792885958 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.793233835 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.7923502 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.805989355 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.793441122 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.79286815 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.793614828 seconds)
  done (took 48.376698929 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.807211841 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.955631575 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.046420191 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.827002295 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.806005192 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.80870773 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.823785226 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.810766028 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.808098089 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.807377921 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.901101652 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.812965265 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.823833099 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.044753236 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.824169782 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.806181523 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.809659642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.806612173 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.961522886 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.82324052 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.826607023 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.812773223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.825906164 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.819976102 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.808307812 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.806353925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.810217025 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.302735204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.816316601 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.899970665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.853718717 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.830835676 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.245385363 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.055589865 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.866137805 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.816182302 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.806535571 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902387773 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.812590144 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.807236035 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.82442629 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.811629613 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.042310634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.297509343 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.821769118 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.806575156 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.310844354 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.913379707 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.849085189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.818161185 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046516971 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.826184773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.80875071 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.808420784 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.843510754 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.812695651 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.806655903 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.152715559 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.820375563 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.825280633 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.813357474 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.808248666 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.965520386 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.820792874 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.959452065 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.819411599 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.815851604 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.809065479 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.047793572 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.826704577 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.29962288 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.82314038 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.808657505 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.900756058 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.964141467 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.343825786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.823869238 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967903342 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.261902894 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.836000423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.815713219 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.294230051 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.838096403 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.817197989 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.810080767 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.809794408 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.808325113 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.85079418 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.824527868 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.236645511 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.306438188 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.170617404 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.836718852 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.823683276 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.811146318 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.153432864 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.818124656 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.809604048 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.040801634 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.309882859 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.823709305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.816126818 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.288451584 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.826466394 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.829502207 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.818733789 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.049223569 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.827216371 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.85153916 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.809515125 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.818430913 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.811335989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.828354103 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.817506722 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.809988386 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.278961662 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.923907339 seconds)
  done (took 224.947746927 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.805468464 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.809999277 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.805432831 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.80980282 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.803550519 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.810256791 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.805515527 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.804154447 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.809283081 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.803546421 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.80504754 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.80446058 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.805616697 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.806134749 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.847232023 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.835638666 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.435253686 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.829450139 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.832134294 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.830641136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.48732213 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.837575113 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.830900236 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.830753335 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.829958595 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.830750883 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.835669585 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.843885541 seconds)
  done (took 165.957137595 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.836075595 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.953791702 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.854680041 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.86399186 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.844608568 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.832857148 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.858026874 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.852676258 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.840409475 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.834254151 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.832832994 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897448677 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.847434373 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.934444002 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.868886752 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.867647869 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.939610694 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.843814987 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.83345408 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.833637982 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.864609737 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.830984945 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.896667852 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.963373882 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.854561534 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.952688466 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.841295913 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.837032898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.834997159 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.954198917 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.852482699 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.897839834 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.865139682 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.854569657 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958141091 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.953793379 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.94234131 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.865582506 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.841459251 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.835041107 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.834650205 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.824489069 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.954014028 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.861192174 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.840819708 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.941472039 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.854966897 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.838545622 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.846101283 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.8351746 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.852303298 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.853511837 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.903677755 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.969163585 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.870161033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.862860988 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.861311515 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.121618945 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.847433717 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936953189 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.832157461 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.952220108 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.857574296 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.826134033 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.837368126 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.841336938 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.866042392 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.868760075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.941999226 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.845230051 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937495192 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.872874902 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.844399891 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.836516978 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.839045777 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.955809969 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.957192069 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.873797808 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.875726139 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.870730665 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.834033392 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.838262375 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.825770496 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.856011489 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.842087502 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.952282464 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.955444954 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.845871266 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.83981754 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.840010871 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.841269676 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.865012385 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.964712909 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.874534991 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.93345769 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.908018966 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.913930495 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.854535076 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.849818771 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.841221932 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.90163934 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.853161584 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.849181681 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.170545378 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.909919759 seconds)
  done (took 199.128946875 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.30830441 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.891958709 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.895083771 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.161509141 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.198607128 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.789519067 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.885222964 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.888684328 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.910423525 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.076252001 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.959228049 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.907665814 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.873891842 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.861450673 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.888770806 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.909280408 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.898736715 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.200270127 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.983251372 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.020831156 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.872427272 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.154340586 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.165521134 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.298607226 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.925243121 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.233305934 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.559969833 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.034799415 seconds)
  done (took 60.516063197 seconds)
done (took 800.41147583 seconds)
SAVING RESULT...
DONE!
