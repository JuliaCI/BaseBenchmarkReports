cset: moving following pidspec: 30549
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353272544 seconds)
loading group "string"... done (took 0.574218894 seconds)
loading group "linalg"... done (took 8.003661299 seconds)
loading group "parallel"... done (took 0.167024119 seconds)
loading group "find"... done (took 1.213359148 seconds)
loading group "tuple"... done (took 1.868489256 seconds)
loading group "dates"... done (took 1.352369811 seconds)
loading group "micro"... done (took 0.216329555 seconds)
loading group "io"... done (took 0.925554926 seconds)
loading group "scalar"... done (took 39.320295564 seconds)
loading group "sparse"... done (took 12.197230584 seconds)
loading group "broadcast"... done (took 0.95566052 seconds)
loading group "union"... done (took 13.444621212 seconds)
loading group "simd"... done (took 4.793627656 seconds)
loading group "random"... done (took 9.069069888 seconds)
loading group "problem"... done (took 1.86155196 seconds)
loading group "array"... done (took 21.326692832 seconds)
loading group "misc"... done (took 1.781978628 seconds)
loading group "sort"... done (took 3.346591335 seconds)
loading group "collection"... done (took 18.023589054 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.553415238 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137293944 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146170764 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134109548 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.16329682 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131454235 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138426051 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098946964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.853768772 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163593686 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128208067 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432254615 seconds)
done (took 5.485455547 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.189089615 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093624027 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094600995 seconds)
  done (took 1.254791685 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.081665039 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142990291 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082662582 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083010623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.08346424 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082593488 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082380306 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082935544 seconds)
  done (took 1.707610997 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088678659 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.083854921 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082018578 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.0839531 seconds)
  done (took 1.406888025 seconds)
done (took 5.718192163 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.795069544 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.227057746 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202876951 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.425347377 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147988921 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19371547 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646245336 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335131912 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205698879 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092010731 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12654995 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.405438498 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141777565 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662145921 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092817142 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109329796 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.155923238 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428930283 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08715337 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100560677 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108547144 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146626452 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.096066881 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092156697 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166819215 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086405048 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157562181 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102020203 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084748363 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.272403951 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191463831 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.709980759 seconds)
  done (took 10.902602031 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114351326 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114613903 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084775469 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141016101 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.113997711 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085788522 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091428944 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083862666 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.1051455 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.143839641 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.106979054 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121433901 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082390743 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087905702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097761523 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.224577133 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095963235 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.0976558 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084745378 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094428231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122999542 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094022891 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095010399 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095907667 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144423982 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196363821 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112167406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11339884 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.080280149 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100239499 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130530357 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142248815 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.08191982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08034305 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140603519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110568466 seconds)
  done (took 5.125672912 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.99425212 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1640996 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10593267 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147345736 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081260907 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124659765 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081399224 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09690126 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247428799 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.377300772 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635659592 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151262898 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12812168 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120237601 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084332011 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085211323 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083535458 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.289473712 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.117911422 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121180513 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09688175 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085874528 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084187339 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.080526646 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087526097 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08169033 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08453517 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.095057046 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089226642 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.326993709 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.138788667 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08439491 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956871971 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.184178629 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084679281 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117130467 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176935339 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105631782 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155550923 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083227691 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.21607273 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178322146 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084625027 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087752384 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081621506 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083002753 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100902175 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120804217 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135341728 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081266308 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082304603 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18425953 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080985335 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097452158 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.156469637 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168598486 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0825363 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.312373358 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107726684 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087785066 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107485635 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080673191 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18148739 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137122102 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084534423 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083367628 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085268923 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083319638 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08461087 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378841806 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082335994 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904797457 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087415048 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.092360173 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08590859 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087020568 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090104086 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089881507 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106021887 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08239567 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089510607 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082312492 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081853902 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082862201 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09593802 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.407146749 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082993204 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088435752 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080678802 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107038253 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112256681 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082247398 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081401019 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115724732 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084014414 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082161136 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083879884 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094948599 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085827192 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.183537085 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129019659 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086301177 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.104648943 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116675098 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085656978 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115539992 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094446062 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084300169 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.481098634 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08156804 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08853662 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081629474 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084219612 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082693342 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09418971 seconds)
  done (took 23.25363719 seconds)
done (took 41.343944297 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.264755152 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081368361 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08178745 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081710277 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082126626 seconds)
  done (took 1.750489066 seconds)
done (took 2.891018122 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141114823 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114526752 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080856368 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113226823 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080509744 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119490057 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116374739 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099389773 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115746376 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080565417 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112880071 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080691547 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080291886 seconds)
  done (took 2.495029978 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096545862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097179749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084433242 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098855029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077268008 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096363482 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095401728 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10352638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097267731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087770996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077206354 seconds)
  done (took 2.146836391 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095471811 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096782498 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083307885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09491523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077177964 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095396216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095058269 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09880703 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09536992 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087760615 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077819884 seconds)
  done (took 2.129323281 seconds)
done (took 7.901442194 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08973495 seconds)
  done (took 1.211479535 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.542995226 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.600532408 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092744663 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116626032 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.206305301 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123578932 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.250012827 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.097133497 seconds)
  done (took 8.323254131 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.119727869 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086246827 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083584807 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082983493 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082381273 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087718052 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086148448 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083691992 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085559399 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084356531 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085250799 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08261064 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086230133 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083009621 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084056508 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083557104 seconds)
  done (took 2.591108881 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110113666 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108557031 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087216999 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088048819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086190501 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085763392 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08823766 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087471034 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084649551 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08593261 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088783176 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.086551306 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085371454 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077478973 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087447069 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089308979 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084427992 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.088381166 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088259073 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089319756 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087983522 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.076987126 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085120265 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087188534 seconds)
  done (took 3.345636137 seconds)
done (took 16.603630549 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.12139891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08358808 seconds)
  done (took 1.332498216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.092392166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09353335 seconds)
  done (took 1.322548197 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.092571331 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.07856199 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099584454 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089542325 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079036372 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078854419 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09759565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078906967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078677258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079058487 seconds)
  done (took 1.988766992 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080668037 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088468431 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0819391 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092968109 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085945387 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.076967914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084013652 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080776214 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088940417 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076428503 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083842117 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096751701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083581728 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097545498 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08399389 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.080940393 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.082999556 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080181367 seconds)
  done (took 2.665323858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078734339 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079233297 seconds)
  done (took 1.299472784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079393821 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076380255 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079217507 seconds)
    (4/7) benchmarking "year"...
    done (took 0.078977055 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076681576 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075848741 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076246718 seconds)
  done (took 1.679507827 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.415063525 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.131499682 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33209539 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085786807 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.094929443 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272535446 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.080263976 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0851917 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085003974 seconds)
  done (took 2.762491117 seconds)
done (took 14.195523394 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095968068 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.100569223 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109665351 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394804962 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106054702 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080975296 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129205408 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192201493 seconds)
done (took 2.362566285 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226503971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.824462827 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.496563014 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219581186 seconds)
  done (took 2.684463615 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35155754 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100707053 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073170479 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081142893 seconds)
  done (took 1.761296271 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082543664 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083461111 seconds)
  done (took 1.318252528 seconds)
done (took 7.141269548 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080554837 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080353982 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078487801 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080448389 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077712157 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078296214 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080016378 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080476583 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105365167 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080569258 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.194595251 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080225536 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080168009 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077604829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078203041 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080540703 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077831009 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077591856 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07803233 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077435359 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078019158 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080010494 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077733042 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077966255 seconds)
  done (took 3.223543439 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097076465 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079964582 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084571091 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08454504 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081846365 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08529746 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.086510899 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081981167 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085910268 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084116203 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082140779 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081949993 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082112863 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081906832 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081827698 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081625317 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084280946 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080210665 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082299104 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081960958 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084030106 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079741271 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081942457 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084286756 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082010396 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082039027 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081927285 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079521447 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083580447 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081949904 seconds)
  done (took 3.653996816 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084256341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076242025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077129762 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084925848 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076554706 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077888916 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076943866 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077706929 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077434069 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07743759 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078186493 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076624634 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076569886 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078003632 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077127491 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081285127 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094143283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076327178 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07634999 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077094074 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080844657 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076956024 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076691994 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079213961 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076741419 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076560663 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077630908 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07680487 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077796545 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07733482 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08051805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081446791 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077085447 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085130538 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081497324 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076541408 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081373418 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076572747 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077565009 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076486428 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076655101 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07713951 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076623159 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085475036 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07746702 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077953006 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076720934 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077876292 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076972063 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079361901 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076481265 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076766409 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079061586 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078113234 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082288077 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076735938 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077445392 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076726003 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077818673 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07735142 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076660861 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076758688 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080246251 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07754474 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094566798 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086195415 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077137785 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07862493 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077795539 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080356628 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078788599 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092692268 seconds)
  done (took 6.850266993 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100576626 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10045541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07983084 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079238244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075598556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077747788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082885663 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077833014 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079917409 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097119367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077891861 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079910724 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07987503 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082038061 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078004162 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079879991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086246705 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075310207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077671058 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081621023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077911392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082714383 seconds)
  done (took 2.990565545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161366974 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083509602 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.118583441 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088172972 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084068803 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08836229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083162401 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083693728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083556182 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081589236 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081567276 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084188568 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083373472 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081398679 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081410511 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081761058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083708027 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081396656 seconds)
  done (took 2.783413957 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090953464 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080475463 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102013422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.080926743 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080380979 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083228133 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084654098 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087503313 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082165032 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080654885 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087326865 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082467804 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082756021 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08035265 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08252716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080454136 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082643579 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080509108 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09709368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084060087 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084301919 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087374606 seconds)
  done (took 3.033472933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093660915 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08149447 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094049848 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081812805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074732873 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077745117 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083494552 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079909875 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084317494 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081832545 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079499345 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077404267 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082036969 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079675392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082887294 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079562404 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081888223 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0797283 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081904883 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075174086 seconds)
  done (took 2.804021273 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097533031 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080612118 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080854605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086951267 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080685921 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080610493 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086701445 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080800721 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080939666 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101786899 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080512923 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081922374 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087267111 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08507808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080597128 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087042667 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089584709 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087081464 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0811079 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081057731 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101393548 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080944584 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086741289 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080806322 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080615135 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08064767 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080999887 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084484239 seconds)
  done (took 3.546587741 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080373162 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07973926 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077644638 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07758527 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077923879 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077839259 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0781625 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077672579 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080520982 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077935111 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08010724 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079695572 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080071996 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079910901 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080049479 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080469873 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079612214 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077930746 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078061186 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078116013 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080057613 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080350734 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079906136 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077476204 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077631697 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079785877 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077724987 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077822075 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079738353 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077611084 seconds)
  done (took 3.544105621 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087913348 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086567475 seconds)
  done (took 1.351192367 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076167567 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093951605 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076470565 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085297675 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083315283 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080693127 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086541256 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083084834 seconds)
  done (took 1.837085571 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099233276 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.088880123 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.079322088 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.091042875 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08851399 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098149055 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141647218 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.079374822 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089538247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080631137 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095634714 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081436494 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089417896 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084174249 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090201033 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093421686 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077001384 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084246889 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.081307281 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077619163 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080120279 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092527722 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088730349 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.074906663 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085012158 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106592894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095540499 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.078989033 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086246696 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.090979883 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089216282 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073929333 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079271758 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.079368466 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077211889 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08825949 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097470122 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086468141 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092115831 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079639402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087991584 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074489644 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087834706 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090360708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094988107 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08007981 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.080060255 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075210858 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080702992 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085444459 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075116907 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08485586 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074725753 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091507547 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087439691 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094821254 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078510926 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085902102 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086220477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086897859 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092836432 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088115152 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091127312 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080042731 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095243212 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089256332 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091463995 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074825411 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073608689 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077157813 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093379651 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107935509 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088751334 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07955824 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079647433 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077136935 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087287792 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081515465 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090697441 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091633715 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.078641509 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083993828 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091560016 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083760899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085748445 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085563313 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077602435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.0829961 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080580992 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098928033 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079095587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077254491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080502818 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093984139 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088485239 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.078733943 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080317473 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090770569 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073702118 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.079193694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079756625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084953732 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092231102 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08243724 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082079827 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091342437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.084977525 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083765254 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084221276 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075403365 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078828406 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080064947 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089925704 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072623306 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084694125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082867684 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.078293181 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088792591 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.076345383 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077377473 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.215595356 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093076195 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079497645 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077750074 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087975756 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.079638264 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082235561 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093292575 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078507236 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075474383 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075189213 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087323874 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.079751721 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087202208 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083661385 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086522005 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074218599 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.076930883 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083360501 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091198215 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082587694 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085500167 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089342837 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085403641 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.078260693 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091688786 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086417945 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081864728 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089006185 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083344495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074891325 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081801938 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086192891 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078298394 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086157032 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081946593 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086935045 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.079395065 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078522251 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084858085 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079699257 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081644009 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084683981 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078781407 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094871736 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085782411 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075075374 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077112764 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085852375 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080181295 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.078822261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08193171 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086231212 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.079609862 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077611526 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.078520991 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085154797 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086946244 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082250954 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080293237 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088276182 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097018722 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.078753549 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086736582 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078858868 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0798309 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.079738739 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093382641 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089967237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083411596 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085634816 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076150131 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088816815 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090895507 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081297606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.076974166 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082256237 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083763987 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090722954 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082883931 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07908589 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077428098 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08463013 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081400344 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085805175 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.078555307 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081174038 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084041295 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.078290655 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084361648 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079530714 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09329982 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086393485 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074300324 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080940739 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077914472 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090525421 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07458221 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080395126 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081766622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.07950778 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078175695 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085461946 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073699019 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091354267 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09168653 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084476254 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081541758 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.078449906 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090186385 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083065282 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085926594 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084792887 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087455837 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092494323 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080013454 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08424771 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092040843 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077371466 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072538434 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089793908 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07674374 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076252976 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.077071946 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.076702637 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.213929065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087056461 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090290438 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074296018 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087510111 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078949073 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082533451 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075109901 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088665173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086498407 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083710446 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091692306 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07988633 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.079203915 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086977017 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.078897561 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.079864386 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.080086419 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086608001 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.079605017 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085991509 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081546349 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085472033 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08141261 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077109641 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085181654 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.079120065 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085106268 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088285642 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079521933 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084776851 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086049566 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.079465599 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085764201 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082463451 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082026759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086321103 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084927781 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084165595 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086029908 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074889817 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090902164 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.078668094 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091791108 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084421583 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077472152 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085022978 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086356969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083841964 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.080252437 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.080293342 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084833171 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.079099951 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085955346 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091631615 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08041169 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095207513 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090355488 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08502501 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085972206 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084742568 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08529536 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081286416 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083028427 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.080287845 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084651516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07888935 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087358642 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086020165 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085102607 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085800514 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.079808017 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084388277 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.079990048 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07403696 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081563334 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081498738 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.078989188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091604922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079646967 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081957501 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078337657 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079743642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.078946781 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076079436 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.086065275 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085925437 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079736399 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089615556 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081458835 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085543112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093963595 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.073903546 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.077555367 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077016339 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080480765 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092054241 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.079168045 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092516986 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083769506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081981652 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076489517 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.079596463 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.077522323 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074503702 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077183199 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087269261 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081194878 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078107061 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.079132743 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085484226 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079095192 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090507861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.077616782 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081801411 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.078190592 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076044869 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080410721 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080282155 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084054232 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07840142 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079015955 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075472281 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07718805 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081873107 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083716895 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.077637385 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.214725554 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092780528 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079985438 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087722913 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082128886 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075224407 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087641831 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.079152309 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07867055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081801301 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086903875 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08738709 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080006076 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093505059 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08181296 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085546852 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079220905 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077285568 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.078717861 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.079571002 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07901609 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081609862 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.080015292 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093022829 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.077585584 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085164852 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08482223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083162322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089363474 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.080148211 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085993887 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084489702 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.080669331 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086063543 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092575192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082466906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086868335 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079971935 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085341264 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089152169 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081924214 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090824089 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085251176 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.080060281 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085722332 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080355711 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07933627 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.079221806 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078770113 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089241808 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.079631654 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082033832 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081313837 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.077339633 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083727293 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081296665 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092311407 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086180364 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086816861 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.074928754 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077350052 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080013844 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080629482 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085186729 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086270702 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088774695 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086014338 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082480997 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.078513532 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093314009 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088666001 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087051918 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080069006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087378005 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.080011235 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085977047 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08368485 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084118263 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08007404 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087711013 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085123048 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081592167 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089146055 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086768794 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079649873 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08511777 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085478202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083934304 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.074844764 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.079745432 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08530441 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087634951 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085418087 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079146978 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09432777 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080031698 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08424291 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082410278 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093637861 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.08710961 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.074201185 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084896222 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079792826 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079749284 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.074509485 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081063144 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080174196 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085687546 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08140064 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.074809838 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093989749 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092528313 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08453258 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077637398 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077033164 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07363435 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0733472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080456792 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078679689 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083729454 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092166212 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080072256 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08018456 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.073044922 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077907391 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085031035 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085256113 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075539433 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.073369242 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080422799 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083179594 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088580885 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077049588 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.077187105 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084490223 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084181852 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.075700673 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079972819 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075205956 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084659252 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093027086 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.077380292 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083499303 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086503401 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089294221 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.077783967 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.072891895 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.077538579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.083184242 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083279994 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.078033633 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.078734022 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095735705 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084311348 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.079547743 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.076433314 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08415598 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079695554 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090149081 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077862077 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.077736728 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087997001 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083618209 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082886141 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0870397 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08762231 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083317384 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083496859 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.077287252 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082111663 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.075292465 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07923251 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.077451999 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.076915455 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079479738 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081353468 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080735063 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090550797 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089505652 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07927141 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074978526 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079144175 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.079815471 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.072258211 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.077251281 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.075268759 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.075901464 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.075668399 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.076482408 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.082851727 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084846862 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081113985 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.077118517 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.076340698 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.071247898 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085973414 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083074004 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081973115 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074141772 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07637495 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.076793649 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.084062203 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0785902 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.075306216 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.082553724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.083061901 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082787232 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.072251653 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087817161 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075638927 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082756877 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078848872 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076734378 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.076897825 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083361158 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079069936 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077228101 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083104503 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.083086392 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07771346 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.074538558 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074569287 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085031399 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.075112306 seconds)
  done (took 51.063257651 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122831968 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079660696 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07792767 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078189931 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088110156 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080216608 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079612075 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079777309 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079676982 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081544666 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078509962 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078425667 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085385889 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093052846 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087825069 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082372499 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078166835 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078782251 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077878612 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078891405 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085090592 seconds)
  done (took 3.185458693 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088521147 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093632571 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090348434 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098092094 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086408012 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0854692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090143233 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085472429 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093328215 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087546732 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093123137 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084710177 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087546662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087042071 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087056773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084527773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.092094385 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085452994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.083983708 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088837813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083850312 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088848115 seconds)
  done (took 3.240106825 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080785281 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079753026 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086457655 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075272994 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.079707268 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07529692 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.082516949 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078096616 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.082383431 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.082397491 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082149757 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.08189804 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086553194 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075653741 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.083785437 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.078628229 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.120550512 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.083096844 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080346174 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.081065922 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.075849448 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08736837 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076023554 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07623751 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081794693 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.082574908 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.080593756 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.078496568 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.080172028 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082076266 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.0801358 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.078033933 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086363818 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086020483 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082410749 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.082111832 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.079658314 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.080262461 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.075523587 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.078329878 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088067381 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.075856969 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.079926253 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086221044 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.078105937 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.07752612 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086776088 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.079723259 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.0751288 seconds)
  done (took 5.291888953 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090634026 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.126575884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081548348 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107149249 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.092860733 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.085366332 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.084467053 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10845162 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076884584 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.077779634 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.094046166 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091108592 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079265738 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.083480145 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086289625 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.079142747 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080144502 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078078269 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08243137 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078644466 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.082217781 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086155371 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.092464563 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.090908686 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083026841 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079143752 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078754784 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.083587467 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.090360214 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.083223476 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.083582016 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.084584284 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.093638441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.082548988 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079229589 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.081438528 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.093267684 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.079906535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.082409645 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077276983 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.082354106 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.083530502 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085999927 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.094487406 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079394068 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084015803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078935929 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076899007 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.090672858 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.081507795 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.086399654 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.091566441 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082159759 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.079202609 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082755607 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.092935283 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.079117982 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.077233322 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081712289 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089632864 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076896194 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.081987341 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.090754843 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.080874513 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.084995017 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.091371797 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083866151 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08290509 seconds)
  done (took 7.242451731 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088991557 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110292993 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095039118 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096291161 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08960269 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089561665 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08979153 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089438962 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089495769 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092780321 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090117955 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.129189601 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08495909 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091632409 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089663812 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089651619 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089627083 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089486913 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089584684 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0890588 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089420115 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094973904 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089206584 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095737138 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092426206 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085076509 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089015195 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089985398 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09568101 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088698365 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092015142 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08925522 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089651297 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095095555 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.092629662 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.088545162 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.079441064 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088648819 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089387805 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089204913 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084978206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095502715 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0889394 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085211169 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089381932 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089361854 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09520403 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.092365483 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091391402 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093002847 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.089321908 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095357964 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08887507 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089262937 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095160256 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.097656065 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095156966 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095259209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088899345 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095705759 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095412237 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.097814046 seconds)
  done (took 7.023777391 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093650836 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086053144 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094782197 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07536533 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077748164 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085642741 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077922313 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080787309 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085908975 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086331559 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088418471 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085425271 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087943427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088198221 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085692708 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087890397 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085345418 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085768813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085987897 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085772691 seconds)
  done (took 3.037783414 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089017209 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097090194 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08136 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085431082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083824386 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085516085 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.083052835 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083860837 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081529546 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08379362 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089410652 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089423903 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081373163 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085378841 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089251862 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085066171 seconds)
  done (took 2.686291139 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097201034 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.086302856 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.091556872 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.079653802 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080525779 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07630278 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.07907597 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.074860984 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075989782 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092065098 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.078733206 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090332657 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.079584228 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078396674 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.076290775 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084667922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076197112 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.076718922 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.079332251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.090590548 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.084244762 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077680053 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083410127 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.079054443 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.082084013 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083813771 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.078317248 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081154873 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.076606404 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.079475029 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.082399947 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.083135365 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.075855201 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.077278836 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.078671407 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095373469 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.078945041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.079651766 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.085037884 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.079504633 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077358572 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082093581 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.078964059 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.080420659 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075705031 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.079481233 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075619286 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.082291319 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.076731621 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.082688541 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.079586659 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.081400262 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.079584562 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.08671856 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.081394014 seconds)
  done (took 5.778917247 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094594817 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083709588 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074705634 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077632121 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082548688 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081208041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083905648 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080855865 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081228062 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078324527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081831071 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083053592 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081696472 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083277547 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081409177 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083650476 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074742524 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080569309 seconds)
  done (took 2.79629026 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086150653 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08040854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.087073153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080311806 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07980348 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082169856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075250643 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078011734 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078255377 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080072197 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080030711 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082219934 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077783233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.081986502 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080119621 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080182702 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082387663 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077756954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080054707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075579209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082004325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07768722 seconds)
  done (took 3.083414688 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.108823276 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.099615996 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.153322702 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.095044918 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.101702379 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.087416049 seconds)
  done (took 1.965425016 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105384512 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113286758 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079568131 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082712668 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088304451 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082906235 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083316594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083606264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090389972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087935145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083367209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090608613 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090188256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089731487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088417216 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091927884 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083758392 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084202156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081054991 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095742561 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083843228 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090738723 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083946444 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08408662 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084125011 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090110132 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09130093 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088710251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083708208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091286533 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08890685 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084037464 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091660741 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088654911 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083196254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091129857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084074167 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096164603 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090157961 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089786746 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082976221 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089181211 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090791556 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088272991 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091295847 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084109458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087465025 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083855675 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084214088 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097228035 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089324346 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089917019 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088752293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09117856 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090972489 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097644524 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088508039 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090461076 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08965803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088854222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090585145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088668089 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089839353 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088693265 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088669082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090143905 seconds)
  done (took 7.179183532 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117935767 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081000402 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083923467 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088481457 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089751187 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0839981 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083789958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083982677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084038442 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081194033 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120903714 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083975196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090632559 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090510537 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084609996 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084057689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08406047 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090362729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080932925 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097700788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08396905 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090234001 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090083832 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090125575 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089354682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089634165 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084370371 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084415942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083959039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083500122 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087888703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084115649 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090102501 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08103153 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090026932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08394424 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083621435 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087751252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083677038 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089268647 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08957814 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09580353 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083439473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083748449 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088419422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083507154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083834671 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081072771 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083938282 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08091059 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08855388 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088797836 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088817206 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090062055 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084236789 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084409274 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083871821 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083863044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083972563 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089186915 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089961508 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085417614 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097421114 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083854744 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083514114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090147152 seconds)
  done (took 7.112385337 seconds)
done (took 147.458900354 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216170666 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190355607 seconds)
  done (took 1.717000419 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0901085 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.117456197 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097117194 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149211619 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087810997 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121694689 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120444976 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09779642 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087948851 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087377704 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087065964 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089802944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152834218 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088109083 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087169152 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090188445 seconds)
  done (took 2.980694478 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120964742 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179779844 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124737276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.085046343 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120067947 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.093246257 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084952996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098004664 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091960422 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087292609 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093047613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093843523 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086607872 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091064809 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091619932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09286943 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086978845 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092735671 seconds)
  done (took 3.14624686 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119480473 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110004717 seconds)
  done (took 1.563322038 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.190975659 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.151033624 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.220891898 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361193222 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169362716 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.440735402 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.155502229 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.158017426 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.134884179 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151868806 seconds)
  done (took 3.463900892 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11975386 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18397064 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30953533 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13629784 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092181451 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10664802 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138824704 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097922796 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.0995465 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099372829 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099506346 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094417293 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118429187 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092778708 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089283188 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094377998 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12210681 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088251523 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.090137943 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094861372 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122350011 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.086411192 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093101915 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087985607 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097504095 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096883596 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087433423 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085750513 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094493639 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088987276 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095835169 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.104070897 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096509143 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.122057102 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.090452088 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.12328436 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094452224 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09241792 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089291603 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092436839 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096272092 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09626306 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094625697 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094541949 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087609641 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094879611 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087514766 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085884746 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096536793 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.08728975 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095986644 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095465836 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.12216844 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087409906 seconds)
  done (took 6.990948783 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123681172 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122458425 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086767962 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.128080035 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120676679 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086394905 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.120990351 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114888266 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.123755957 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086599967 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085208098 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086687007 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09518804 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.096977543 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131385064 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123695019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088800945 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086302935 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124694127 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122939221 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085787207 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117660504 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114255748 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.122713681 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.084344258 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086376977 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.085602831 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086811252 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091567317 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093017088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084969738 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094517849 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.098816073 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092619709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084023764 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084807259 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084865261 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.093548179 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.093668316 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094339361 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.092018618 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083974645 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084769329 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085802079 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085606627 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083679955 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092650547 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.094176571 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.093055588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084943119 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086233937 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.084959064 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.086092668 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094341155 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.092227792 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094899426 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.094421693 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084984496 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084850886 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087449892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094525879 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093770734 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094049285 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085535773 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094561697 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085526845 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095227977 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100782565 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08502789 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.085947572 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.085197302 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085413804 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085491961 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091776389 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.092045774 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085966854 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.084477175 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084615581 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.094218873 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092446035 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084962005 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.09143973 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083624602 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08443437 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086032526 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086256712 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.091572159 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.093701616 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085838238 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084661428 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084624327 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084580174 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.084355108 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.091719708 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.093934854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093928969 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.092947332 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085634568 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.093562573 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091904091 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085574324 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.092624889 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084003562 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085452372 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085108738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092002426 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.090844844 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092533667 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084278598 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.218579518 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.093615772 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095918233 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.086244389 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.093296848 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094594801 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.093591643 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084094174 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095360863 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085184177 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094189829 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08590784 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094500132 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084956194 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093079714 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084798338 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084450357 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084947971 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.093758875 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.086491598 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085277331 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086345093 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085099831 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.092799975 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096913996 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086513271 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092727457 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.09303761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086643161 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.093375359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085588834 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.093025001 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085048957 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085926193 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083551699 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095427347 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085364697 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084879503 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.085511527 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.09477659 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085725828 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095017464 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092385298 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084476359 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096273475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09495292 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091764739 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09465361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08680842 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084943049 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084699372 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.085254236 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092238165 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.09395387 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086343401 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08429646 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091687355 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.09387456 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.083750892 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092287399 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092680972 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092709455 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0851891 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.08513746 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095300179 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.095010457 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092625346 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092665105 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092794506 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084792348 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09204675 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092636472 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085136101 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098465913 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085130374 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096460965 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.093188896 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091779344 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092912679 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.094346545 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.094589613 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094477177 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.096662261 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084671469 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.084472778 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.092678359 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084965033 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084510303 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.092276276 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085838308 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085563323 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.096741395 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084970073 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.094874625 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084017504 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.09296122 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083722684 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085989913 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09692414 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084242966 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.086062433 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092764008 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.084763636 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091050167 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.093506249 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094176269 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084334399 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085097329 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092787647 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.092150498 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083958001 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.220488156 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086921032 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.09301553 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.092996866 seconds)
  done (took 22.112936578 seconds)
done (took 43.323594057 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218505334 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167938931 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179141703 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12957197 seconds)
  done (took 2.122807103 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122199444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112760186 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.101809204 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081626494 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108243556 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08142924 seconds)
  done (took 1.972666122 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296705445 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208090679 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190774597 seconds)
  done (took 2.056385139 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.222576771 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205030975 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473574908 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296417856 seconds)
  done (took 2.656567223 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.154307094 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098168128 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.08013558 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.097765661 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137977279 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165074779 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10832255 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.133241875 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092602021 seconds)
  done (took 2.484527147 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.161027837 seconds)
done (took 12.815907851 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.191526779 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11017229 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088409798 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.082062563 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.142784598 seconds)
    (6/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.263832593 seconds)
    (7/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091066451 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.089331574 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100867941 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105911384 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.239364161 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099111915 seconds)
    (13/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09092252 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.130751112 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.190445221 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088384447 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.210248916 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.087903375 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065314288 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121361886 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115944242 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090478686 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.316882491 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.086998471 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086697707 seconds)
    (26/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.249022455 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.0986266 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.234955442 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.141911038 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196205059 seconds)
    (31/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.133534114 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081714038 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151182292 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095576723 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220478026 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.160908194 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135636836 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.247483584 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.200268258 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08864032 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087821074 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 0.171083 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089264222 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064311238 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078358767 seconds)
    (46/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.166390302 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.224911809 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.076981187 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127320646 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088300903 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.252039073 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.168779182 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180388569 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.082545732 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163935637 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172278205 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105805813 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085849555 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081002174 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078041844 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080714433 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087290758 seconds)
    (63/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087274464 seconds)
    (64/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076945648 seconds)
    (65/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089157566 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.086498973 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.078626139 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179938715 seconds)
    (69/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.084205766 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094087313 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.156898317 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128638429 seconds)
    (73/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.090609055 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090087204 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.199551823 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102453962 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108264843 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.220135398 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196123723 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.086651374 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135859079 seconds)
    (82/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.117028946 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081051173 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080246691 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087607818 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08842759 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190227159 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064312728 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136430238 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080231536 seconds)
    (91/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.243716915 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156503043 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.08761311 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10452794 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068564423 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.098566363 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09232191 seconds)
    (98/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134670606 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.086291662 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092930231 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082243155 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082991174 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081389049 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093379358 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08139038 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086303935 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172293546 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081920274 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.175433729 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092411395 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08076799 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064734442 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.237767819 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125171235 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.139740578 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.120269166 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08719675 seconds)
    (118/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133237693 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.158154407 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087682951 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.164330671 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093012805 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083582154 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191789904 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064791266 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064974416 seconds)
    (127/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088325642 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102967171 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226617004 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.08888735 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06420554 seconds)
    (132/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064760622 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133179416 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087221801 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.087317224 seconds)
    (136/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088264196 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.089149695 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.086154969 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109256783 seconds)
    (140/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.084102482 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216570371 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.102070691 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.094932764 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088170757 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0875121 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.167574613 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064310942 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124160105 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168134787 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082055337 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064560649 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107590928 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065783329 seconds)
    (154/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.099449727 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16789881 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077631735 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065090817 seconds)
    (158/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091435229 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12565925 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.081465909 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.106261089 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09335452 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065442875 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080622833 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173387888 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06499942 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108693283 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081675976 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076469825 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064542832 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.160468407 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.21440155 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08135163 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.102735152 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081192367 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.101981306 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106053178 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081313361 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.132501329 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.118723558 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080805871 seconds)
    (182/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.086600502 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087758994 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.130213613 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142183948 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.081510623 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194817025 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08812477 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.090858283 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064869817 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064579684 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10296269 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081915674 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089623032 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.118824573 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063998132 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126521313 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183702764 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082107061 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.086271209 seconds)
    (201/309) benchmarking ("sort", Float32, false)...
    done (took 0.145887671 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107267373 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142437117 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161312629 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.324668984 seconds)
    (206/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096276492 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157868455 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088437997 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066423459 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104743835 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067476589 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084414197 seconds)
    (213/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065179693 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06556311 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.083376637 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088793658 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06464033 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217383382 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142160115 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.103367382 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088303508 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06441462 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.089584237 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.087295194 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064237754 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064092945 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.157990516 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083070564 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065468169 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.106036405 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083028967 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06481173 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087294494 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.083227163 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081834932 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165040143 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091662294 seconds)
    (238/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065652155 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.135440001 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064198604 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06540427 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.106460243 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066293632 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082268475 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064637748 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.102294779 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064934428 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104836872 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065134636 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.105946926 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082198273 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08896807 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077006661 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.086712755 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065748104 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06462494 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078959937 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.065715837 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082955044 seconds)
    (260/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065052835 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.086397385 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06490098 seconds)
    (263/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065223105 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065363875 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065782819 seconds)
    (266/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130112997 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06584584 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.104129647 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135241039 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.088416912 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064704583 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065067065 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085987418 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082984358 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064314717 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.096346793 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.106186411 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065286355 seconds)
    (279/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081504134 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064347892 seconds)
    (281/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08258576 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065578726 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.082366145 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.087730067 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076831932 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078479631 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.083077559 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.086901543 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.101370066 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183189785 seconds)
    (291/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13535517 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081579386 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.185879323 seconds)
    (294/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09426568 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064255998 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.086116172 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.10570038 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081557189 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081451675 seconds)
    (300/309) benchmarking ("sort", Float64, false)...
    done (took 0.146465778 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078313177 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.081583689 seconds)
    (303/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.093633889 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081488991 seconds)
    (305/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07708367 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.081480286 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 0.205641921 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193288762 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.081585622 seconds)
  done (took 35.6372042 seconds)
done (took 37.014875285 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099902445 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112074793 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.089832471 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.106557345 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097299838 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08978096 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.087436117 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.092045021 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.094358735 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096100889 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095122374 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06820008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.090654528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.090637662 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.089166298 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110459069 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096624882 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090412573 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09022296 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.079030832 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090060182 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.081915953 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.081339643 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068186676 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093743081 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.086683438 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090871957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.090647586 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.082231615 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082275928 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.084053528 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090336688 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081384824 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.093772975 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088362244 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090066753 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.091197037 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091772782 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.081556919 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082149943 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.091702252 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081352031 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089386886 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.08793405 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.086229339 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086046342 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089968901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.091401061 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109857809 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086059423 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091305937 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092431663 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093565546 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087537181 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084349447 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.089539358 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.085414785 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110081213 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090024917 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086727501 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091444157 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.088543699 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085619919 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.089829528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.090024383 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.092252211 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09170978 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085626718 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.091819768 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086529079 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.081459892 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090259016 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083814937 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081557919 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092288647 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094666334 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.078264332 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086032179 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091797894 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089373076 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.078755577 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086107187 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08110924 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086364377 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086052254 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067689896 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083931386 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.088884915 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.079402925 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.089761948 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.088751821 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089411965 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.080791726 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092049926 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.078713217 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.085267972 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08176154 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081791416 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.080774133 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.08411612 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081103006 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086078727 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090237761 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.081130443 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.08636307 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094494571 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081361826 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088569674 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078548625 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07874515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.092809809 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091844268 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081438623 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08643811 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.078756784 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.08713243 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.078578326 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.081038017 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08116908 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081367236 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.086039088 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081392862 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086003672 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.087421999 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.093412028 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080941315 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.082877018 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085422128 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.080636958 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.085056728 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.080849882 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080399055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.080503724 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074584053 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085237082 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081457871 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.223766103 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087228745 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.090299036 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.081444051 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.090035706 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.084822024 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.085675317 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085302446 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.078388054 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073068766 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086285957 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086041499 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.081646594 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081370586 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.080514799 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081247797 seconds)
done (took 14.829950194 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082139432 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131982088 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.105485351 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.105587571 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.098789127 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082937427 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.087264339 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105505296 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.081648115 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.111814365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.101332602 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.101352916 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121884297 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.079332418 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082063539 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.083733179 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.081334817 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.094045757 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107067612 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.103895904 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120841543 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.079704577 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.101231225 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.102109141 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.098915212 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10585168 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083295535 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.083466206 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085161601 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10231366 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.106707964 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.084828971 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083326748 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102904375 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100744908 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092948518 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.082572065 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090807873 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083421025 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082661214 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.083530452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102363209 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.090119093 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.092583867 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.083240509 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.089488108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.080646572 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.095004165 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100191295 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087696397 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096891995 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10516114 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.082734424 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.095467515 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.078396798 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.097796678 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.088130402 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.082643519 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.081949378 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.086985484 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082169733 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.084325635 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.093257719 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.090879911 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086350114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.09432316 seconds)
  done (took 7.580669192 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099630158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.109222263 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.098433518 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.099184861 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081992913 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082005785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085318506 seconds)
  done (took 2.122332927 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082642521 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.100775351 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.103761228 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103984381 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.094401199 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.105531417 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090109589 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082796857 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108123827 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.081570852 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100518786 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110671693 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083351901 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094110016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105272606 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082547139 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.105165647 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08283196 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083239614 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104642248 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.084792146 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107100279 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093898893 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.082833723 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094031401 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.083440036 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126555274 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090645949 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081267523 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.083997784 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08174564 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121124224 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093913986 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.096178229 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081417036 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096506969 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.094089689 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083901174 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091916476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091955588 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.093706788 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083916955 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.081447883 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081179334 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.085562027 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.092581552 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.081462105 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084040329 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.083887564 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.100106411 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.081441506 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093799174 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083440759 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.085830166 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088252269 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085188634 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090981698 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.081775412 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100425952 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081114675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.097800575 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097070231 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.094391952 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.097183691 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083114729 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093483096 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.094335841 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08459741 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084381704 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.08445462 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09733922 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.083315965 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.084965546 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.092912684 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.082591587 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.104956833 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.105100308 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.082741574 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095680384 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083407547 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.081943019 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082797857 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.104904758 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085400534 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081218047 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.086965684 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085021066 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.083512397 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.081877012 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086527214 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.081271598 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088001097 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.084020357 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084077043 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084923873 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096960507 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.081631523 seconds)
  done (took 10.243929834 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085460833 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.083466673 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.084802414 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.083050967 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.083865294 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084105104 seconds)
  done (took 1.995395467 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.106387667 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.080830867 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.095976498 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.083846421 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.119554996 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.097533594 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.097813178 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092696678 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.097625084 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.095287498 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.097704622 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100479675 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.102001416 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.085785804 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.097106228 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.085081837 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.098278157 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.085614802 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094740877 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.087154453 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.096412119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.085770961 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086412217 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.100490572 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.087346191 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.08527079 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09257497 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.094863936 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094376863 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092960899 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.085803518 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.087314445 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090320708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092446307 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.097675334 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09063527 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083606046 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.090305037 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083495 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.087314946 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10011067 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086104752 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.088881499 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090748287 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.092867543 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.090863243 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.090446262 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092081416 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.09713453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.090131305 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090553799 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.084301209 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.087021773 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.090216615 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090564177 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092951112 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090521298 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.097371709 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.085674446 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090604026 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.081108717 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.087836188 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092932527 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.087419893 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08812953 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.090329429 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090924826 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086680355 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086219663 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.083473843 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.090618202 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.080731232 seconds)
  done (took 8.033088725 seconds)
done (took 31.428740216 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.524942673 seconds)
  done (took 1.969616525 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625884547 seconds)
  done (took 2.098536141 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.544749216 seconds)
  done (took 8.015529448 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390912656 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46672487 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.754836275 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149154378 seconds)
  done (took 3.267757939 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.73316206 seconds)
  done (took 2.216288252 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248299497 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238562758 seconds)
  done (took 1.976448223 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.369991129 seconds)
  done (took 1.842722624 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.089483067 seconds)
  done (took 2.563225128 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.246594626 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.172441277 seconds)
  done (took 1.898328364 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45602144 seconds)
  done (took 1.931296918 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.206900823 seconds)
  done (took 5.684210832 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236716259 seconds)
  done (took 1.74635012 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.25145407 seconds)
  done (took 1.728736758 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75029221 seconds)
  done (took 3.227905245 seconds)
done (took 41.653205835 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09875504 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.100968551 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101583842 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096948738 seconds)
  done (took 1.857410805 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.090473099 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.086441215 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090191734 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.086201133 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.090137582 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086350388 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.087715228 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.088687107 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.085915064 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.08676188 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.086505005 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.086305754 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08909182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.087932279 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.085039337 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08900027 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.0902825 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.086420711 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.089184259 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.085996957 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.08507683 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08924569 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.089010339 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.086183856 seconds)
  done (took 3.584273311 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.093882229 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.087954145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.090744471 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.08734781 seconds)
  done (took 1.84675118 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.092301877 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102695161 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.100560475 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09228624 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103370531 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.098424305 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.08325358 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.083290207 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.08424199 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.092499208 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.081747325 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108122907 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101145909 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092299449 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094419037 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.078763253 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081788372 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.100019192 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.092548557 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.092719225 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.084308813 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092606502 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.082312384 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101777669 seconds)
  done (took 3.699824958 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094048271 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.115380912 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.093253318 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.104324439 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.106008026 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.079054363 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092601324 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106608467 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148680093 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.079257566 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.085032793 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.079985314 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.088359875 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.079662306 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.094025147 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.122097956 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.125904003 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.083259106 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.114467483 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.080453871 seconds)
  done (took 3.465402201 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.088397736 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.086244877 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086336505 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.081092422 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.093184381 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.088568679 seconds)
  done (took 2.018170255 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.083995412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084081469 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.083514147 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.082905623 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.08789696 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083169594 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.081622462 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.083630037 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083885687 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.083617092 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.083053734 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.081955427 seconds)
  done (took 2.491651188 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19917068 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084554676 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.084539539 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.081645594 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.086079598 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082594379 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.096837492 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.083747912 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.108921124 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083100118 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.083352466 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085142412 seconds)
  done (took 2.650518739 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210822544 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089450837 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247434264 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161077454 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119455892 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12465467 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126320572 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123822308 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146952029 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109836523 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170474452 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175332914 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11951383 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147996571 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103323524 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.113748905 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161151796 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175416001 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117150399 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172173482 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15418534 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137082128 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156259212 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112451998 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116005027 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129784226 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.084917312 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09735836 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179742653 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140727996 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151958525 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122282931 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102753154 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187398454 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172485947 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149811251 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158526538 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096882266 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.112949927 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143015673 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208421699 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10176421 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169404948 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120364755 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092195978 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138664023 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124585909 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.26967243 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114791725 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103593263 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152814394 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191569023 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14142754 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099073295 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133446205 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122133053 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122800468 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129151136 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187999973 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166147754 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138302114 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.085370089 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121510525 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157633364 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141414057 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.117405789 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132375175 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102968193 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141417198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166014705 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131592448 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149514783 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125257283 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10075085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131413233 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1462004 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136540156 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180556922 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134117309 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086224706 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132169339 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110791688 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093320569 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156156835 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088780553 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183227701 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113618899 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.115605915 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140220711 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120916033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121159472 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164251249 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149539688 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11595503 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.079372542 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115807441 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12846242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149506764 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09907387 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118117229 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123133859 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.088853506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287070224 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09029093 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133514788 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.089411368 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132876039 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139042903 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.090136175 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133872894 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115742285 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114518203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139908532 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165085121 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101150104 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093786497 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171467466 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131646124 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112909033 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150274183 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161309281 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.113246401 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10995286 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153149383 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174776454 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102998735 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16869253 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114968542 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096224695 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.098394618 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133009868 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122309884 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133275419 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094213083 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.126856473 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170578979 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.087754507 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107913553 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144102079 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091663065 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093939718 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117082655 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115204832 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.108628544 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110393554 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1125931 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144857734 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133697506 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116282503 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13365118 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112472895 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171937666 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100410861 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.113860091 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115799181 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083350665 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138955262 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159616927 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091173326 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163054142 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128157186 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274828036 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13112019 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09727569 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146372838 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092794261 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.084042914 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148723892 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120782833 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120896802 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15542826 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124900093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131995682 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127393003 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140029675 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139238119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138659955 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117283961 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.101650165 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125090781 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135844405 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.08633196 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102070415 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.093585952 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117251511 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107203094 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097067595 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152070037 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133122771 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121915049 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125581182 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109482968 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156171289 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.089532948 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136401778 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.129028223 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108090175 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157206989 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158294121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142258252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112264375 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144841979 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.083939853 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087554773 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098505751 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131153237 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096379104 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096794232 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124668154 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155536523 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136784037 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143886037 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134488541 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129366074 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161608258 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083178647 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12909301 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147947919 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128882042 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.115162875 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251681804 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.111071829 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150374624 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116685037 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188724829 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124524973 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135596008 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164062812 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.113754876 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09226493 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11506455 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140428801 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113549957 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145990181 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109907899 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10037507 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117805251 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.088846073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11053971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135794637 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127737318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145970793 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123115179 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141627984 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091177246 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124303459 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132394212 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131850567 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077607388 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128541132 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171516785 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107773044 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128326636 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157536917 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092740933 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149108375 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177731297 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154099666 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097243626 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117841245 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130897995 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13432315 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128284442 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145299791 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115932745 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148495369 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121107466 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09700581 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09942426 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108224773 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115702622 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104646585 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111274183 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121176142 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106715798 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137257485 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112596103 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119551676 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274734648 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11196601 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.105840383 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108449048 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180963707 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129316551 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17939308 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.11170638 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146461657 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165501995 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088991078 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092531902 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.090832156 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145609519 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097447415 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139050254 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.122864213 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126626802 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132510145 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146328561 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108606112 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.082827797 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12050312 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141773162 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13431151 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109762743 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113523188 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167362146 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110243998 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092284558 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123765172 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127906372 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116377646 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17911584 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.074877001 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120406354 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089871507 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092839006 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134622573 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160772037 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.093224879 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.112263908 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130555307 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121955997 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134169864 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109930945 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121459292 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13943628 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153385311 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137102594 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101014214 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121821939 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135839949 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159625291 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111859696 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.108358574 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175665614 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308122469 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162397193 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.098089025 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12483067 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125098238 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119865947 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144927909 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097364157 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164916587 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094108211 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142753713 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112431347 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099455551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137367818 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123441949 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10059547 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150395755 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127315851 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09543913 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090442143 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125470145 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129688959 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115539506 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088859919 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146834876 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.087899957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142412552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178913113 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093595952 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116727867 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108037551 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092870839 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115313466 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1135149 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099536076 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.111887695 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175809647 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097759426 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152921832 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141271699 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122198473 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144093691 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114467905 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.651033527 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.090051057 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157107411 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12482541 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177304198 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111185607 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127829424 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121495192 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130140254 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147532879 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111130713 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.187269964 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286107585 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.125441808 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093289128 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113672312 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114734602 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098728751 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119206337 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123581546 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124963231 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.10408096 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124849504 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132078244 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.094724806 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108665982 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16005603 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125448627 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151925378 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145127247 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097556855 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127904089 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143969213 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092935193 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127354957 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160979952 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11709604 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1110634 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.093857292 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110718453 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179291078 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122356719 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164973073 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130713651 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124392075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125038923 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119130002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139827471 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116356548 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131403289 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102823052 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117377359 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124242633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094162372 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.089716919 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116806608 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120844993 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.109378837 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106817831 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112239032 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156702607 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.08585591 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109800903 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125566536 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14989304 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174962095 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098246202 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09619625 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128639064 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124556482 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120003881 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279417518 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.092771114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094815389 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.092103098 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.093906894 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115452397 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123985575 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129374641 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119517808 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165809128 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.09559368 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.239604828 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107768215 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115953054 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.082145504 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.090126416 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107946656 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107785632 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115247471 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123008261 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177286422 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.107927789 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102043067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101714338 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.088163579 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096528173 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134758489 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122536067 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128627744 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112603089 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.075619081 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117225849 seconds)
  done (took 63.653058297 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119043938 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098194201 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.111815612 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.160547663 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13543294 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214543177 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.165316579 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204291206 seconds)
  done (took 2.806570051 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.083965103 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.109192619 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.118302436 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.097765948 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.082423437 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.083985418 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236365193 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.09597445 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.082673643 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106135416 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.092272489 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.084679114 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.451537474 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.082219083 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.083038882 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074170227 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.082568557 seconds)
  done (took 3.630078848 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390820535 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623216812 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365756136 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09038058 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.90289051 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.103733929 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.227650901 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.153420261 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097562336 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536246108 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.379672396 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147525099 seconds)
  done (took 18.609471464 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.096931777 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.091185368 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.103601438 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.103631457 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.093340438 seconds)
  done (took 2.07553514 seconds)
done (took 113.890186396 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.095089645 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.335537158 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06693821 seconds)
  done (took 2.016966624 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.102904486 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.101277764 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.100723145 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.098956282 seconds)
  done (took 1.999578593 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.090481288 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.09212043 seconds)
  done (took 1.771682608 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23757922 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.186693922 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.111389254 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.095473094 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09289751 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.093272114 seconds)
  done (took 1.873602166 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.085478572 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08805034 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.086002807 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.088918639 seconds)
  done (took 1.936730128 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.088185091 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065325272 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066973144 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069336212 seconds)
  done (took 1.879411625 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.100006003 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.097330965 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.092310772 seconds)
  done (took 1.879702137 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.115453246 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.105194456 seconds)
  done (took 1.81066706 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.093423354 seconds)
  done (took 1.686565006 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101913896 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111769019 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.145910307 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.128132339 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151911446 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127925481 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.099520735 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.100780485 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094311627 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.101710477 seconds)
  done (took 2.755330649 seconds)
done (took 21.827764079 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094220517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.382620652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.375187161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105835387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685683955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.37253326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.997976352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.108092789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155413002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.083766092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100331807 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.665590844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988789123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339243241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97503226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345456706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.667260589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085233956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.084659593 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.084498928 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985962621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0850586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.084354703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085689668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.666454011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.38904686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085249527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.341265121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.084617674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086508145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.372230262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.084890319 seconds)
  done (took 16.617165735 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086764973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136509637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.088204813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099882741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.086904791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08549771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.087385449 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08534992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135693746 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084742829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100867201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.084815173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.08905127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085862048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104041636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08504256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.086207076 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086484747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085318432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085323316 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103709418 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085129912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087701024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.08584942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.084783457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.097461885 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085678777 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.084773056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085302214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087088058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08771954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085720377 seconds)
  done (took 4.537160183 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131739936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139813186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.090052068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121197229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127700732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087255394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.162604056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109580534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142741406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085284632 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101346416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.084953555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119490427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085913234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104562093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085397639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08582824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08636288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085284205 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085266678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103730971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.084808682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085460631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085808555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085134438 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099028576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085597772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08567092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085472395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087458985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.088887768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085855859 seconds)
  done (took 4.791984888 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.086041229 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.089299516 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.096128783 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.097131346 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.082807658 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.085732546 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.086909672 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.083214262 seconds)
  done (took 2.312913463 seconds)
done (took 29.855192887 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.092071865 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.08252445 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.086532431 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102605802 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.088814579 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.093938991 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.080686885 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.089739154 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.087129466 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.087364236 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.088597897 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.084126359 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.085562044 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.080589156 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.088220371 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.082144824 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.096514457 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.085704387 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.094959845 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.096565427 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.083647165 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.087393632 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.089265379 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.095054459 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.094572508 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.094433763 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.090639079 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.087711794 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.082240548 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.084891004 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.090754097 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.097153235 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084605672 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.094250467 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.080982566 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.081490755 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.085359453 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.083921898 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.095534773 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.090228803 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.08277106 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.089708483 seconds)
  done (took 5.298377703 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.099498329 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.104297928 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.097413336 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075269734 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.080575216 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078496895 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.101975204 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073534499 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073617634 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.100930175 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06986737 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073785932 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07434111 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068062764 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073272541 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070950026 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075223342 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068577314 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073315863 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073601182 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.101711969 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067477579 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092136826 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074619552 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069657004 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074983648 seconds)
  done (took 3.704555865 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089054715 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101043703 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.107182018 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157387782 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125251643 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.094995966 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096014042 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.106453959 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111382742 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.083392373 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.08795293 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.107230676 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106860662 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.089329883 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.083570826 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.099308548 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.099079519 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.085004766 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.089633454 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111210945 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103549949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099938836 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108788233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099282535 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.082480469 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085800832 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.087679212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.101574078 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.085911043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.094178915 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.086172386 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.087718262 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.085124431 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.093670059 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.086739993 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.082812509 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107919663 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094564738 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095690291 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.084703558 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.093072406 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.085219752 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.108602178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.142965621 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.082568249 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.087486406 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.087612707 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.094449605 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.082834079 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110833028 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095443052 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.083316169 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084473786 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.08296134 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.082674747 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086469839 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.085446085 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.086117242 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.093789897 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09020217 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105198832 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.08826829 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101199117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.082896771 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093974893 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.083169365 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.084857387 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.082782589 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111535922 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085380218 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127765002 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.084928646 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.082203766 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.094465592 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093900609 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089319265 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.083668893 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100548025 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095182596 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.087714115 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.091852955 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.086223746 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.086920755 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113872157 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.083761307 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.083589943 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.082115001 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.087317172 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.086996153 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.08401133 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.095735993 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.082386939 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.087040232 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.1010168 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.082955511 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.084125741 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.087207799 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.08592828 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.082337165 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.093927176 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.087278805 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.084311145 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.093654747 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.083728879 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.086660112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096460719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.089763522 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.082474805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.08532819 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.087167325 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.084454366 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.084704434 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.08697171 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.085341698 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.09038015 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.089764603 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.089181921 seconds)
  done (took 12.466317424 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176364379 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.167218372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.086061122 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159942546 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.091943836 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.093948167 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.162904071 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.108609277 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.084905108 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.08544551 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.084495315 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.123715696 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.119261868 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.129882248 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.095368935 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.08459941 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106145488 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.127527674 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.164071227 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.158861309 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.106450315 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.091779674 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.086555446 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.085327741 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.085849347 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.093375916 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.100328039 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.09249168 seconds)
  done (took 4.806386866 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.092592729 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.118931566 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.088423254 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.106126981 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.103146549 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.081595022 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.086032658 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.086033353 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.100219639 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.090471211 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.082353664 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.090126054 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.088430994 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.085458637 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.084967221 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.087929169 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.090847184 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.08354549 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.085552924 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.087371967 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.093460611 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103081731 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.087726249 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.084096079 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.086832575 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.084115071 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07462341 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.098745402 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.084101604 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108419506 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.079190595 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.086486564 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.098157333 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.084845724 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.083755022 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.08461873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.082000835 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.082024886 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.085533162 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.080237059 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.080203422 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070334862 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.083014256 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.092344788 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097033736 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.068523287 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.085628083 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.087210457 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.08684967 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.079787338 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.086583778 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.086643326 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.086832353 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.090999675 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.085566757 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.087468671 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.085263601 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087929882 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.090462709 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.083422384 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.077727758 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.080210319 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.08644792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076026495 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.096532453 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.086145272 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0808812 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.081928425 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085340205 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097354691 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.083528573 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.086318399 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.079300975 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.086640404 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.087011776 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.086460542 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.084702533 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.080297437 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.083896215 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.084323239 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067545531 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08387814 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06612662 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.087387232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.079879076 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.080607357 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.084274048 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.086192088 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.092754929 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.083475213 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.087907008 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.084541651 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.082753265 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.086493204 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072207474 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.087137271 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.09447413 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.094939364 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08204512 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.080265089 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.097239355 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.086403114 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.081064859 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069831863 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.088744073 seconds)
  done (took 10.690290223 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.106553692 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.082924657 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.100460791 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.106881217 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094357516 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.088410189 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.094238339 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.082628751 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.099681694 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.087546341 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.09042337 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.081561097 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.094823986 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.093261264 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.083085547 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.094627271 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.085966212 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.101279698 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.098370758 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.081836367 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.092754512 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.096064981 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096355412 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.097970436 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.097271163 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.098509615 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096252431 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.092305329 seconds)
  done (took 4.274051628 seconds)
done (took 42.840985676 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.709631485 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.95016968 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.691580789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.911613453 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.746506428 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.911578185 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.782470199 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.684645215 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.87425299 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.730163774 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.985465987 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.768044993 seconds)
done (took 64.499823715 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.710645599 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.823076002 seconds)
    (2/2) benchmarking "String"...
    done (took 1.910769911 seconds)
  done (took 5.346735135 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.880486431 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.42108947 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.925377614 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.68788052 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.694553431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.947404694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.485268599 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.136453034 seconds)
  done (took 29.912113232 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.883069805 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.918310344 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.400458488 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.433903797 seconds)
  done (took 15.292820827 seconds)
done (took 61.849902934 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.698571117 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.715059442 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.691903396 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.670545576 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.787842653 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.698263699 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.815135475 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.921890479 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.690849093 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.680540205 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.692145488 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.186468238 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.699599583 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.846323728 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.690676031 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.690871515 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.74500003 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.148245167 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.849959188 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.70009127 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.710753615 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.737257016 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.692431079 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.692367902 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.710577327 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.690954872 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.086211923 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.701265475 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.527956731 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.690776467 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.740290307 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.028798253 seconds)
  done (took 202.241945601 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.690049939 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.922517083 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.965161853 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.725083284 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.219814333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.866921922 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.797313521 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.403000033 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.691630469 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.693102499 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.947910017 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.692746612 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.983984568 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.636369524 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.717681114 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.697346716 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.852206569 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.97627607 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.722582668 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.843161636 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.691037135 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.844992866 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.8090592 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.91702019 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.722445602 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.793897859 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.691056229 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.702598868 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.880980092 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.812989177 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.707322658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.695775061 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.897423766 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.56333904 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.696921923 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.705656416 seconds)
  done (took 167.793405474 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.872761913 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.692939473 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.691281123 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.691211064 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.696657201 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.690805146 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.814751755 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817196368 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.328211353 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.15823937 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748213915 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.691625415 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483996032 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.692491697 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759889396 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.704268007 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.693006382 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.707090063 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.71991191 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.694882924 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.693363091 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817781958 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.704372669 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.692374867 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.702610642 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.693712343 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.697638003 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.057908428 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.691808692 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.776294168 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.698323661 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.697386212 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.933832243 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.694118393 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.694368089 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.543554583 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.216990043 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774294546 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.695058399 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.698746009 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.692931864 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.911092363 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.694050702 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694863359 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.69254951 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.692622901 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.696766165 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.828172042 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.69233929 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.817087077 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.696008185 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.173066835 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.693345292 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.695512786 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.487318705 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.278381793 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.693119623 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.696336819 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.693896293 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.694712654 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.693956381 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.700412886 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.417711213 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.767381698 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.69477626 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.697022431 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.700713372 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.693774676 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.694094659 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.940981589 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.697088072 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.242184218 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.752964598 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.821468189 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817611631 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.698588614 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760442584 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788113611 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.694605759 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.694167314 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.694204232 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.694755278 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.775784431 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.695443791 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.820153427 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.706334967 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.696597251 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750120547 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.764184089 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.695057916 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541871226 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.696027228 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.694484376 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959505823 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761431907 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.696245087 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.698051687 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.823250268 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819643633 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.698710036 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.420439687 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.696094527 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.350537947 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.837765781 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.696773336 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.832407858 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.696757729 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777938773 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704413745 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.697969484 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731786607 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.697049343 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.752375428 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.696693305 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.067944816 seconds)
  done (took 392.807291673 seconds)
done (took 766.389236902 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.318626012 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.286283556 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.389747778 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.305488155 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.277008365 seconds)
  done (took 13.197397757 seconds)
done (took 14.818389729 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.780073829 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.787765014 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.721348933 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.783896624 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718300842 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.783776542 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.769379049 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.724186267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.752143767 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.724519045 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.754109891 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.724801123 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.709251798 seconds)
  done (took 24.354504571 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.936007732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.120096313 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.765556095 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.936069051 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742435837 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.931850279 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.875630491 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.848194755 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.845812269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.711346381 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.709092636 seconds)
  done (took 22.045711371 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.933788739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.941960996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.773293396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.936004924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.74591931 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947448131 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.862732261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.847312711 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.856336819 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.710787394 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.708566414 seconds)
  done (took 21.887119015 seconds)
done (took 69.908532722 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.706070573 seconds)
  done (took 3.329100765 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.732886023 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.910561244 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.714441773 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.710942316 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.708289091 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.709086643 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.710919024 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.708063489 seconds)
  done (took 15.530266302 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.706539485 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.705691543 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.703143519 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.703131333 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.702851999 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.707041672 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.708413129 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.705619144 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.707300648 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.70676116 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.707625147 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.705288414 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.707421168 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.704797442 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.704260672 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.705498693 seconds)
  done (took 28.916588949 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.706226407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.703749192 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.704575521 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.705984167 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.705226264 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.705537624 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.706620211 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.705757018 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.704690725 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.705302025 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.707107769 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.706020019 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.705861098 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.706452547 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.704261005 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.707211185 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.705930755 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.706286418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.710430646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.704987042 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.706277499 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.704931271 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.705108997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.706785474 seconds)
  done (took 42.568055519 seconds)
done (took 91.968247095 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.496115239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.475901914 seconds)
  done (took 9.598328953 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.708325976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.709336509 seconds)
  done (took 5.047970088 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.707931909 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.708359073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.707520079 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.706984752 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.70907727 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.707881762 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.708324062 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.708147552 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.707503615 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.708171229 seconds)
  done (took 18.706982706 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.709133794 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.709725575 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.706707619 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.710210849 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.708180537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.70638087 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.709467866 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.709119822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.709711008 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.706312267 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.709542022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.707270918 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.710593983 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.707730039 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.710001234 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.706543132 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.707047583 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.707049213 seconds)
  done (took 32.379281673 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.709496686 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.709793751 seconds)
  done (took 5.047284701 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.707050956 seconds)
    (2/7) benchmarking "second"...
    done (took 1.707995072 seconds)
    (3/7) benchmarking "month"...
    done (took 1.706526974 seconds)
    (4/7) benchmarking "year"...
    done (took 1.707672108 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.709026081 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.707559365 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.708094307 seconds)
  done (took 13.58216165 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.711782332 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.853094659 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.92221011 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.287569406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.712161701 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.71313564 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.606608237 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.712440769 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.713586782 seconds)
  done (took 18.86069605 seconds)
done (took 104.850253627 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.572191963 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.705350651 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.926535601 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.807849114 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.724387135 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.001815159 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.733649936 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.986027335 seconds)
done (took 42.086381185 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.743541654 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.470684252 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.512894658 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.730410996 seconds)
  done (took 15.342716236 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.69434557 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.014140135 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.711516744 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.529883796 seconds)
  done (took 21.639027943 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.074491979 seconds)
    (2/2) benchmarking "read"...
    done (took 2.055416454 seconds)
  done (took 5.762769445 seconds)
done (took 51.117818967 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711512978 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.711301299 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.708788253 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.710923396 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.707558583 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.708280925 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.710803433 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.710838299 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.712174679 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.711675465 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.710615071 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.710840859 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710563664 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708378815 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70868307 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710985265 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.70876297 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.709390421 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708556755 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708212481 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.708952907 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711787492 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.709758509 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.709011268 seconds)
  done (took 42.666787042 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.711287251 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.712770286 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.71296238 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.713033486 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.709475707 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.71341301 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.712888394 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.710083666 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.711701749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.711824618 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709799484 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.710195055 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.71220177 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.710548671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713077808 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.710293672 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.712996128 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709925298 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713272387 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.710031944 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.712975033 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710978206 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.710697475 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712988802 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.710544116 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.711896905 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.713063196 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.711123514 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712335257 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.710156413 seconds)
  done (took 52.979034572 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.717227845 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.72161048 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.713007794 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.713266704 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.712679241 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.713550087 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.713565414 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.713013297 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.713584734 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.713292086 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.714314416 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.71297399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.71344699 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.712926908 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.713419006 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.713751392 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.713165487 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.716942319 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.713867743 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.714931477 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.714513173 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.713482285 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.714921272 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.713081196 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.714055673 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.713452627 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.714179263 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.714483874 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.714511012 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.713513441 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.714027603 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.714324235 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.714077818 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.715361082 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.715243846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.71473733 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.719663657 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.723657751 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.71465142 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.714327318 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.715661652 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.715398209 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.714777185 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.715731695 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.715398826 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.715969365 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.715506658 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.715656329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.715844527 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.715873582 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.714756413 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.715788905 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.715451777 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.715558027 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.716041822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.71650948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.71564934 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.716214987 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.715092408 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.715351812 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.715500162 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.715668173 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.716142784 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.715947797 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.715749466 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.716649621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.715672359 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.716729315 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.716208305 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.716389124 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.716015902 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.716874667 seconds)
  done (took 125.124066713 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.715980125 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.714834033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.714911754 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.714819881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714796066 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71780859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.715007199 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717339049 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715479589 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.71767293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71829637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.715593276 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714376559 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718713619 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718335775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715244283 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.718755916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715443324 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.718330347 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718629445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719059487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.715984276 seconds)
  done (took 39.400083236 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.718799642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.718450994 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.71696289 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.718120773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.716447753 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.718963817 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.719880117 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.718836763 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719643284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716431135 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71574611 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720477667 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.716209598 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717467913 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.717106391 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.716407465 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719469201 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.715950186 seconds)
  done (took 32.558420387 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.716083646 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.717787794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.719447135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.716899926 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.716921369 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.718934199 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71683953 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720277676 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.718987691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.716719956 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.719266566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719224073 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.719048821 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71738016 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720007716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717078019 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.720108005 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717243664 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721470115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717806272 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.717065253 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720266331 seconds)
  done (took 39.442100476 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720033281 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.721415424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.717597954 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.717742781 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.71795918 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.720755274 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.720828414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.718378416 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.720737506 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.720637421 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.718422074 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.721302801 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.718976072 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.719303766 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.718841466 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718574849 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.721229622 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.719278442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721636256 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.718385665 seconds)
  done (took 36.030239408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723132692 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724019085 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.722508975 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723983453 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723724892 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.723918427 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722406381 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.723587101 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723469563 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.724010575 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.724122119 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724265156 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723552641 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.72399358 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723649583 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723733574 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.722855184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.723461766 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72544322 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723877387 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724385208 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723706677 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723727286 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.724338158 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.724369486 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724119105 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724689814 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.724426749 seconds)
  done (took 49.906786167 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721788289 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.722931241 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.719520972 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.72068267 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.720112904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.720368917 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.719821437 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.71980624 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.722456563 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720534261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.72285707 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.723087939 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.722993447 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.722640014 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.723210428 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.723606118 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72422324 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.72082404 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721766465 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721741179 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.724085098 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7241915 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.724358987 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721307202 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721327948 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.723854595 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72211831 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.723351821 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724259274 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.720959558 seconds)
  done (took 53.306721963 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.74301678 seconds)
    (2/2) benchmarking "in"...
    done (took 1.742630926 seconds)
  done (took 5.127445707 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.722969393 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725232465 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.723788715 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.721037578 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.721711863 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.724443571 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.724858047 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720563802 seconds)
  done (took 15.426979038 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.727206412 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.724262005 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.724158978 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.724258198 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.72471654 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.725075643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.734713844 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.725087058 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.728011947 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.726931594 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.735062789 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.733098757 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.730031272 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.72809341 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.727269722 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728421455 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.724639666 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.724596381 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.725042262 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.725302126 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.725836638 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729876136 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730721803 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.722847826 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.730550039 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.739430822 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.732640051 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.724945929 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.727712342 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.732466889 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.728446986 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.723408621 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.725553427 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.727283794 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.724724214 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.726503656 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736834899 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.729161645 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.735514228 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726414422 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.725938217 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.723611822 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.729999437 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.730398359 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730860732 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.727288466 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.726743812 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.722385628 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.726570411 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.732561539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.731073513 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727534341 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.721956169 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733684623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.730949087 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737498927 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.728152887 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.733785525 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.739372262 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.741608006 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.741596392 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.737317538 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731876773 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.727608579 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740324322 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.754810559 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73711849 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.725390738 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.72503642 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.72670125 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.738085544 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743803996 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.741087316 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.728862679 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728555367 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.728538136 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73095111 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.72777458 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738469896 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.736214317 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.72859801 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72838219 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742257222 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754547336 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.730373858 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.728910716 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.72913676 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.72846994 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.729903708 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744027694 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.729619778 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.728314112 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.729476736 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.731196632 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.731139777 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.730066191 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.728256214 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.732420555 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.725975321 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.728782772 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729663895 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73570389 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.742033419 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729915669 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72993712 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.738987115 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.729276578 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732408376 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.739528353 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.728992925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.730598092 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.731933383 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.738840853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.726479993 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737191628 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.739676755 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.730038962 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.734398833 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.7307554 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.730083056 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74411952 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.760723602 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.729754984 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.731869386 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.740066154 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.744293133 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732078781 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.73893605 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.731339723 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.72968318 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.728636374 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.735684591 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.729539223 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.732832037 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73041264 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734508677 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.727272047 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.730240726 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.731081422 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.735255783 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.733152851 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.733727709 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.736091531 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.737387746 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.732117305 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.737126824 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.743823092 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.732157782 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.735564583 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.73385423 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.728502152 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.731084492 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.735490617 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.733344716 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.732824399 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.731782577 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.734087586 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.732319132 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.731926913 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.731404348 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.731987802 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.734816586 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.739580894 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.732841298 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.740448269 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.735668613 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.728746403 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.732262125 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.732599399 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.733124518 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.732645751 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.732072339 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.739422495 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.741273699 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.732701741 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.732977759 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.738345079 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.732988454 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.732796399 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732408491 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.739163403 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.74394522 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.733128713 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.743347522 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.734010714 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733163307 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.733495775 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.737124609 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.735577292 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732822699 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.739303254 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.740756102 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748753397 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745905131 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.734881223 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.737723076 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.735916012 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.738412962 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.74109319 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.733811299 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.734334192 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734281618 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.736084862 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.734057801 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.737373467 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.734025572 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.734464245 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.734621284 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.7341545 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.735504082 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735287301 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.738753821 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.737624133 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.731865641 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7343761 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.736091236 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.736741627 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.732877626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.73549889 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.735300887 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.734682211 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.736028792 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.745817657 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.731262387 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740034938 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.739779792 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.738419064 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.735107618 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.735837096 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741187785 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.738155635 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746384432 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.737347784 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.738947011 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745972544 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.737340276 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.736590077 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.742813592 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.736718426 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.732864485 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.741809222 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.744155739 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.734241879 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.736125773 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.7366317 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738792107 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.736905713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.746372257 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.734007558 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.739747511 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.735515333 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.739168306 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.733807455 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.741167294 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.740070732 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.739240972 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.741931779 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736449614 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.736724533 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740867522 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.736487272 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.738112455 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.737589327 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742517626 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.746263121 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.744620372 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.738218473 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.740351647 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.739947322 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.741410568 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.740910772 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.737634687 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.739727897 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753734781 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.746506908 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747736774 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.743127598 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.737631361 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746642948 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.741874889 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.743035203 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741505124 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741820439 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.740060206 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.742191276 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.735785596 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741869073 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.739320676 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.744392983 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.743064316 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.742863768 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.738488265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.741067329 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.739036673 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.737990908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.739591701 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.740343081 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.738144544 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.743604939 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744131586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.739870089 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.741042639 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748597218 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74235159 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.74285042 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.741805142 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.742166398 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.740352472 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.741340583 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.739081814 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.746590246 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.748009153 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.74610776 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.753500291 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.74490852 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752480459 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.740493377 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.746614691 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.749611298 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.737449096 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.740436001 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.741872983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.739825176 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750466375 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.740974658 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.742257825 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.74484338 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741758882 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.743392254 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.74039369 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.740521399 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.740809463 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.741101107 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75178363 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.743129465 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.748457075 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74583713 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.738288985 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.740873667 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.740401927 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.741154768 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747511821 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.741828497 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.745511128 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.744744424 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.742486258 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.741474532 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.741510303 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.741382189 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.738657282 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.74155353 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750783363 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.744250517 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.746823285 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.740823352 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.752355355 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741825817 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752931961 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.742928991 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.74332196 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.741194598 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.742328944 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.744714307 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.743017855 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.745700508 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.742686317 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.745524731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.747503234 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.742131882 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.745705565 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.745840551 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.742345854 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.744624167 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755946561 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767292566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.746818235 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746909906 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.739626721 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.74691504 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.74773853 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.743747312 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.742137579 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.74934402 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757665049 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75269979 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.74559032 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.744055976 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747253516 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743045709 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.743599798 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.743732375 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.743136338 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.743664393 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.745953262 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.743889119 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751219251 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.744578069 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.745840573 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747369971 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.747682888 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.757470558 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.744679405 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.746504788 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746713799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.744257521 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.748686024 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.747465897 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.743898195 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747862958 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743879255 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.748504368 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755096397 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.752089638 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.751128565 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.747069039 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.744741509 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.748396939 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.746459569 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745274407 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.744906473 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744518211 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.749148739 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.74514787 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.746754522 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.744341998 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.744545504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.746920279 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744455291 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.75176144 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.755861985 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747728845 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.742403127 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.74424025 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746759034 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.74573317 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.74880799 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.758153464 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752575927 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.760499643 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.756429055 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.751393493 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.750638643 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752264337 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.756294975 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.746113429 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.749801148 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.747170176 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.751136541 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.749564877 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.752781884 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.747262738 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.755807823 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.749535706 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.747355018 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756585472 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.751549986 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746691064 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.750291441 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.75435333 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.74911174 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.743899099 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.747359119 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.749399763 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75665356 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.751323317 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746737652 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752613521 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.746387808 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.751060788 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750840142 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.747631998 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.751369565 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.744115792 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.751287023 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748231598 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748436436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.744214167 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.748060886 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.748560119 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.754622417 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.756238206 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.744594835 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753655919 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.751887362 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.749265344 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.74858026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748359549 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.745751864 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.745132122 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.748451927 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750283342 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.7493031 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.754519393 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.749281593 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.751296166 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.750055525 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.749470672 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.757247209 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.763282968 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.756232326 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.746701945 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.749377427 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.750296394 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.754892863 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749563376 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.749382181 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751579614 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.752760778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.749356583 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748742647 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.750002743 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.755834981 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769975859 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.750662591 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753237137 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.752709319 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756683529 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.750750358 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.746985926 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.7500546 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.753121375 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.75536609 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.758714538 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.749986469 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.759902777 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753302524 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.751566812 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.754517106 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.755767888 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.759460943 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.756522724 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75056108 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.750645285 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.759649655 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.770202531 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.750591442 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764625716 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783490199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.752526914 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.751872077 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.750798822 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752123172 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.750767568 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.753377643 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.750843347 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.750768165 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750592734 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.751884252 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.7534479 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761190346 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.757221123 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.75166659 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.751898505 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.752218725 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.753395845 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.748592039 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.752092813 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.750947374 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.752037834 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.754232229 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.75232057 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.754768719 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767713812 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.765013517 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.752384433 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.752844703 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.749168508 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.759139452 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.758405878 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.767140946 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.761311461 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.751964167 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.752938202 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.75783437 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.752445288 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.749724471 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.755013953 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.754876965 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755095576 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.749890922 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.767677611 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761391267 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.760691719 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.755287386 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752780161 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.753560308 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756500344 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.753186198 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753558672 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.756627319 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.755075554 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75872438 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.752526037 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.754855146 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.75980602 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.760566552 seconds)
  done (took 1040.019900298 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750716599 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750848158 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.749826951 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.750393826 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750938342 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750720773 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750433217 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.751162348 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.751477176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.750282373 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.751081214 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750695441 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751043814 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.75129849 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750958052 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751125277 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752328357 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.751081075 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751555845 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750738107 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.751076197 seconds)
  done (took 38.43941393 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.753172883 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.753027636 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.752375529 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75525201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752780405 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.755616061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.75279279 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755685717 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.755955793 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752977573 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.756058412 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755598146 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.752366793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.754247638 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755052841 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756144138 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75713309 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.752576843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.756229973 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.753716612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756796983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.754477772 seconds)
  done (took 40.270925741 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.756073765 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.75592352 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.758805773 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.753199708 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.756243189 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.753577827 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.756824579 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.756183476 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.756727853 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.758840613 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.756642427 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.759074637 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.767707613 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.762591174 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.759475624 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.755892011 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.89964394 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.757148898 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.756955907 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.757705184 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.75259935 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.764879541 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.753781648 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.75306089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.756249091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.757708366 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.755326499 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.755362496 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.755185029 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.758703937 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.761343096 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.756394032 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.757875229 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.759628143 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.75581946 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.757113813 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.760368603 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.75668508 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.752377626 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.755028732 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.769339388 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.77786314 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.758327683 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.765439153 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.75647293 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.756199089 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.762952161 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.766153748 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.754191884 seconds)
  done (took 87.971787278 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.754644045 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.755261571 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.752677133 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755991211 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.750975179 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.749547832 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.750022177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.750778633 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.747159097 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.747760503 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.74740729 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.744349013 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.744787641 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.748591199 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.747992471 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.74523052 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.742955936 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.74299551 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.742958992 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.74306969 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.743639971 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.74657298 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.745574828 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.743856443 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.746393628 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.742447148 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.744490268 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.746441585 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.745061613 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.743400208 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.746091973 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.746212308 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.746774418 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.744482255 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.743454818 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.746681948 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.746613021 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.743940796 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.747038038 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.744090232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.748413272 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.747167401 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.747335401 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.747016272 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.745167137 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.744469325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.744411598 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.744604884 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.744535799 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.747755591 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.747197862 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.744759979 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.746459998 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.744515673 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.747570996 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.749059092 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.743836006 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.744222167 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.74735868 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.745613638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.744823795 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.747805309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.743982469 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.747219005 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.747852809 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.744261684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.745985961 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.746858486 seconds)
  done (took 120.432614903 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748566538 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.747398507 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747615323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749042111 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747045477 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.747769319 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749125199 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.748027531 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.74767415 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.748670372 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747561672 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.747742176 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.747886332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.748394305 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.74856585 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.749915907 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.746935471 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.749037245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.747990721 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74876199 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.750504624 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.748325884 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.749681921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.749202588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.748535765 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.749120597 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.749827209 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.748405594 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747893716 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.749173253 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750675271 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.749013766 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.749696695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.749338537 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.749840453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.74810312 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.748408919 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749324399 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.748761963 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.748198871 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.747782303 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748914299 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.748654678 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.759189454 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746518987 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.746703426 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.746431302 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.74590045 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.744825816 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.744975514 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.742382464 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742688622 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742361305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743009023 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.742664675 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.743377133 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74167706 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741851489 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741583259 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.741691262 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742352383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.741389414 seconds)
  done (took 109.997885802 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740785738 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741740486 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.739752608 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.738715929 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740105176 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.737678094 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.739935105 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.740052665 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741481198 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.741085846 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74072294 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738393876 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738997958 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740897245 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.738321303 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739448256 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73850085 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73874831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740689866 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738437996 seconds)
  done (took 36.451384681 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.739160405 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.741921297 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.738777891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738362717 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.741135555 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.739732417 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.741180071 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742292275 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738640678 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740830805 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.74410547 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.742152007 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738085597 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.738656417 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.741580753 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.739324046 seconds)
  done (took 29.503981826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.738859029 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.741403795 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.74159166 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.741852356 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.738645993 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.739094115 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.741968111 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.739042361 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.738834513 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.741538232 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.743133655 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.743161954 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.741715278 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.742726411 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.73955014 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.741999864 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.739681432 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.740479158 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.74125202 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.742263547 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.739021951 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.739087165 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.741647512 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.742338795 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.739064971 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.73848717 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.737300425 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.737783037 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.737808906 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.741935584 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.737199853 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.738250562 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.736956158 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.737451685 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.742031354 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.735491358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.738295514 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.738918816 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.738906626 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.738565744 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.740373741 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.735605031 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.739125833 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.737435524 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.73617498 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.738343946 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.737144358 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.734272271 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.735170022 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.735191797 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.738083572 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.739117236 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.739659823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.737538787 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.738228855 seconds)
  done (took 97.316353453 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737257397 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.738472368 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.732269538 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.735578998 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.7349316 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.733293526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.736151143 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.734435999 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732813313 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.736153042 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.733116239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.73490537 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733874317 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737815719 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.737559892 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735225 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.733091181 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.731769954 seconds)
  done (took 32.882302542 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.733212888 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.732107743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.735177536 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.731905716 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.732112399 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735671086 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73318527 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.733599549 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734396788 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.731966131 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731895776 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.735516857 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733618495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.733796811 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732329885 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730881829 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.734517405 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733986254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.728850095 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728822209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732457136 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730547013 seconds)
  done (took 39.772439264 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.732393301 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.731282659 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.748074319 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.752225593 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.754385796 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.767925321 seconds)
  done (took 12.133527934 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727897619 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732909979 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729270402 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731829644 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732270533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729849741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728744466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729251955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731429983 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730502446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730415411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732606682 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731224124 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729813875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731258394 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732729778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729138158 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729108004 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729590133 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731115538 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728986733 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731595225 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729942365 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729574017 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729841432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72883174 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732147852 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730439637 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729152657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731559083 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7310393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729536688 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732047991 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731258369 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731802398 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732377708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729207347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731751722 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731192096 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730231772 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.730731069 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731209024 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732189096 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728985387 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730063008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729044406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728390527 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728347354 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728169177 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731642205 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731960867 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729267618 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731274318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731401933 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731548264 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730802556 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730850261 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728624163 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731036409 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728017289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728033748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730841773 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728975418 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728527278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730931247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727528985 seconds)
  done (took 115.85118719 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728543654 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.728611551 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727743702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728130573 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729146247 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728807496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728791388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728714432 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728334294 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727416284 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730998218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728229579 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728443665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729476019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72755765 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728470522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72770537 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728131042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729824638 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731289226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728714291 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728709104 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729360888 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728752123 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72972129 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730830955 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728916734 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728763613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.727706165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72778955 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729208261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727957072 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72775205 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.728671882 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728541123 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728210381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729489515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72774986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727803217 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730282583 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728063143 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730245113 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728771784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727311694 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727055293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72770532 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727014232 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729865178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728074127 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.727617111 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728308176 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727842088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728653081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730343089 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.727868044 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727996381 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729474281 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728511525 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.727679332 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73122918 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729151341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72748608 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730603984 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728365059 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728235187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728584915 seconds)
  done (took 115.740152246 seconds)
done (took 2410.385121402 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.777610629 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.71324486 seconds)
  done (took 15.137399145 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.89639005 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.846597494 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.730793197 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.73286611 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.730814775 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.747854726 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.73752203 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.730852426 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.731397099 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.731612338 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.730615042 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.919114731 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.738432772 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.731524601 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.731254739 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.822650151 seconds)
  done (took 49.939139552 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.735328846 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.734366359 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.746674636 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.735777401 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.73412241 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.747198211 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.767065984 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.736739126 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.767224338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.746252007 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.802101224 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.747538743 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.732940447 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.784181209 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.747942147 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.749363174 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.828429385 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.811357916 seconds)
  done (took 33.300758272 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.813417828 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.736654063 seconds)
  done (took 10.20353635 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.731709517 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.770480238 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.800556894 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.72560994 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.758233762 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.747205657 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.736453386 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.754982753 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.759147958 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.751108182 seconds)
  done (took 69.183690297 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.739861456 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.737149289 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.734632197 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.732550095 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.727040286 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.73096959 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.732466292 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.726598707 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.398523552 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.769754818 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.741910676 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.738388072 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.735389541 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.734665265 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.729170523 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.756750469 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.848063119 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.728220869 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.728919273 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.739582486 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.734635988 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.787212958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.748099775 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.73215628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.765431923 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.398293244 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.742497272 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.739025773 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.848394086 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.730694629 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.733581513 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.920996029 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.73730788 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.202472861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.008218652 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.735339675 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.748272517 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.743677469 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.728377038 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.855416389 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.734939802 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.741208958 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.711386493 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.986537479 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.843645998 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.780633862 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.07288645 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.752553682 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.73551409 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.765498852 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.739210094 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.736553942 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.748858702 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.248551377 seconds)
  done (took 125.396152426 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.728168052 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.079597191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.898788009 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.731637991 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014885654 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940762039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.729476024 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.778407581 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.732898354 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960235185 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.990920708 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839261791 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.730222485 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.728453525 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.731336207 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.726773587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.886567506 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.803315379 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.731759255 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.728903964 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.76094049 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974449229 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.856842943 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.729986125 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.758886406 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94363808 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.854181589 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.835583106 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.467129988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.72826627 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794397136 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.730551401 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.730852145 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.728242505 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.887958845 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.826134102 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814943544 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.731120774 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.72867014 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.727607509 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.394587232 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931753561 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.828094759 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.862692315 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.985079325 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937548423 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.515452845 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.729389364 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.473158107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.895067046 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.961580545 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960955189 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.852296626 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.730915755 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.077090736 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.729189633 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.727877852 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983057549 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957065942 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.829760107 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.731232433 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.729216079 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.728608205 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971921939 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.73183196 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.82856247 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.733693844 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.731754588 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.830064705 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830749268 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.96295507 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946386036 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.765945288 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.075333889 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.235261899 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.980455613 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.799343109 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98372183 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.733321104 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.729800689 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813584318 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.587026026 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987089357 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977449996 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978529514 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770140136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.455773247 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.730383542 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.959092611 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956430342 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.992938418 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981908803 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.968782349 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.054688414 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.730005042 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.73006047 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.058368524 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.860442233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.733695201 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.077911472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964923871 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.262603236 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.764546883 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036627944 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.864214731 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.73418572 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.365807791 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.732366992 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96335503 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.774760765 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.733557267 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.732325175 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.955018885 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.728839224 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.732420837 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.376965418 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.796032987 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.735947524 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967127846 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.734489641 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005469948 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.733761548 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966167912 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.173732554 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.767479813 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.908873839 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.982364514 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.734983892 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974490003 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979478361 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.849920561 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.955815459 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.446273426 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.734897883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020004168 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.735010422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.732976035 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.90549986 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.734089461 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.877773112 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.734761106 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028388861 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757567231 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967564808 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.735652478 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99072976 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.769560005 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.786905963 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.735608053 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85873836 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.733890112 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.558077709 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.893395056 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.737170802 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.735018081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.297654189 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.147540849 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.886532095 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.961527928 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757983512 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809807294 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.407135398 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.73359441 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82227864 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.759301884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.124192209 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.734624087 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.990630772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.736731267 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.733111953 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.734537407 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.971272035 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.920035286 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.734985587 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.732991721 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.642515182 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.733868482 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.73553487 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.920980796 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.35971669 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.734793352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939666138 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.736973336 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.865459199 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.739771732 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.814415159 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.073892823 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.733557716 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.736033262 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.733682574 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.735543652 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.737891187 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.947251913 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.763839299 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.23269997 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.875030162 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010967269 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.049259522 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.981536521 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.781556132 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.735753821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.996455347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.738555965 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.801218661 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.740035939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.759125421 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96747233 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.740218246 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.947916695 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010058974 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.746375414 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.78760028 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.738230971 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.737524635 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.736494857 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.884387076 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.824094527 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.738569425 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.735469815 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.852771143 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.861034278 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949002268 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.739133373 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.790344074 seconds)
  done (took 872.95876008 seconds)
done (took 1177.76777471 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.736366947 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.740551383 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.722950235 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.73902141 seconds)
  done (took 28.597732979 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.744552403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.742179757 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.74358051 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.741583901 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.743920628 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.743092322 seconds)
  done (took 12.118241599 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.761330442 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.738754501 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.739362755 seconds)
  done (took 20.898174847 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.816532047 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.128229061 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.877028226 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.190342579 seconds)
  done (took 9.669806482 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.743010409 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.743116401 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.743273132 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.744321149 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.744357692 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.746680132 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.744600909 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.744013297 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.746350598 seconds)
  done (took 17.359386318 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.988259179 seconds)
done (took 94.292659581 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.755013549 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.816687653 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.76992434 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.882359295 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.089574262 seconds)
    (6/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.179638477 seconds)
    (7/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.750547823 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.026272081 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.927557659 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.745323242 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.148424359 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.931707943 seconds)
    (13/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.883227403 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.773179163 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.2275386 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.915831807 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.919817657 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.774326292 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.109600198 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.736544149 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.432885426 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.852058203 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.993091532 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.835191786 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.108012958 seconds)
    (26/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.063851027 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.84576903 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.134568816 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.868060425 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.745760391 seconds)
    (31/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.992253227 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.895828484 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.781347919 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.747460736 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.137055885 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.734483142 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.971782006 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.839664021 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.155473158 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.848291014 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.925408819 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 4.624465528 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.078217937 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.10722364 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.860382524 seconds)
    (46/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.886929892 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.940398941 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.732614628 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.123852091 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.854539963 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.533602448 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.972518342 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.820408764 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.462451068 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.846948134 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.982101592 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.100563912 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.999617638 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.009849183 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.632302148 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.915890592 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.772070936 seconds)
    (63/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.772109117 seconds)
    (64/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.038516469 seconds)
    (65/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.844999939 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.851198018 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.838720404 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.951508141 seconds)
    (69/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.852299697 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.748950559 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.934651109 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.950621352 seconds)
    (73/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.763749159 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.767889394 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.475213249 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.017306851 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.428027086 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.743930964 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.082633694 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.777489814 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.751279175 seconds)
    (82/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.911484052 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.751971386 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.647404857 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.996120012 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.892021889 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.109652788 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.970703944 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.864035561 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.833218548 seconds)
    (91/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.924469583 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.889853158 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.763982628 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.105289283 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.933126462 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.038695998 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.767788489 seconds)
    (98/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.918213365 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.780309701 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.886692842 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.43412099 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.754936207 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.941933701 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.413526678 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.846043728 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.071058982 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.911708346 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.054572115 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.228838247 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.753360514 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.230102247 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.098902928 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.740041327 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.831503127 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.833251785 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.340865416 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.986477047 seconds)
    (118/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.894905093 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.757859782 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.781385875 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.75107549 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.757398899 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.902236991 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.75154579 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.481091799 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.818012802 seconds)
    (127/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.763759008 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.145094153 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.736705049 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.46061022 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.881435948 seconds)
    (132/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.039572072 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.985150763 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.013130488 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.777276 seconds)
    (136/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.77269031 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.735311452 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.09426207 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.868183421 seconds)
    (140/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.837071693 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.085720874 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.653284353 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.448816047 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.785546389 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.777723578 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.985690885 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.918856873 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.934517302 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.985942292 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.759411088 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.161504837 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.378717986 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.038368284 seconds)
    (154/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.587064647 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.628890535 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.778400028 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.735005227 seconds)
    (158/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.840500003 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.837787045 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.164308417 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.784983193 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.889814019 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.741481128 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.888506715 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.895067207 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.067987845 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.761664122 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.15745652 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.258601904 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.859612183 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.758305119 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.088597974 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.155475228 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.773016724 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.100503273 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.897164799 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.793304939 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.111595025 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.999285755 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.857707592 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.919636175 seconds)
    (182/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.786056168 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.138938908 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.878707891 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.902449348 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.377380477 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.759645069 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.910012933 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.763991243 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.65900971 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.118712268 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.16613058 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.761382104 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.867048877 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.185200708 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.213675933 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.87345925 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.942671605 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.760874446 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.867317454 seconds)
    (201/309) benchmarking ("sort", Float32, false)...
    done (took 5.456119399 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.808293436 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.794735408 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.857071263 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.849638213 seconds)
    (206/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.260775634 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.768703861 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.828684074 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.855521997 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.778869727 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.739795627 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.442803053 seconds)
    (213/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.129021438 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.067319779 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.835548895 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001760917 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.999902786 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.874430232 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.864747486 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.734266342 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.788929336 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.059731351 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.440528748 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.982870821 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.932371543 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.862204276 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.762274374 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.765925882 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.063935406 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.562658553 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.111885186 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.875763341 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.79207555 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.82338809 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.981938848 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.766018823 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.763337906 seconds)
    (238/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.348508661 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.870598537 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.942542509 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.750205006 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.025297233 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.748343044 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.178306066 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.065491551 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.683103964 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.967925985 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.869743613 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.968501281 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.668996977 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.903749171 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.769329791 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.879722535 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.925889173 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.947577166 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.870133585 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.861516238 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.549854111 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.762788201 seconds)
    (260/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.913558493 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.786518193 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.00019934 seconds)
    (263/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.852688257 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.04509284 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.749171216 seconds)
    (266/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.803372204 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.74882729 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.711878904 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.765200064 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.260997001 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.923783879 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.056765785 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.786608853 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.896902865 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.936871673 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.608267232 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.570485434 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.154600043 seconds)
    (279/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.154843674 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.863222252 seconds)
    (281/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.767369959 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.776751801 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.912653602 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.812352732 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.952220385 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.856743234 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.779538911 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.564330197 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.740148263 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.773308689 seconds)
    (291/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.765271381 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.068852571 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.764991129 seconds)
    (294/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.661211772 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.197585238 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.803171041 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.390335996 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.774335213 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.859312425 seconds)
    (300/309) benchmarking ("sort", Float64, false)...
    done (took 5.631870054 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.850434008 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.171592581 seconds)
    (303/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.265895408 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.105429463 seconds)
    (305/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.015522339 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.989856337 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 6.766706677 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.767597169 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.76526154 seconds)
  done (took 968.434666031 seconds)
done (took 970.391766591 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.000809089 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.790008225 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.771209295 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.794155783 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.885211968 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.798584966 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.782414921 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.774573376 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.81963548 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.821422287 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.770508978 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.79561579 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.774738173 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.7748082 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.772213494 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.789298109 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.08512908 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.804264588 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.791648606 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.782263207 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.791106084 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.77131565 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.82247721 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.797247216 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.776979794 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.775093852 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.775728976 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.79315389 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.885669901 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.776849814 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.774772024 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.785671821 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.085896317 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.800747687 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.768320025 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.793970189 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.78555368 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.781212345 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.77721982 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.806470627 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.172529953 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.813285965 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.776780269 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.773376818 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.774344808 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.777148933 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.775729345 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.779375654 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788761907 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.789732335 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.162695209 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831467858 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.776830316 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.775239988 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.785154155 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.775633125 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.777131093 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791603205 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.795864484 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79148996 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.069611441 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.808488278 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777342551 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.792943013 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.783476535 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.198255219 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.809617322 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.778754474 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.173643025 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.819382422 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.199303769 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.8255405 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.776752562 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.790714452 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.808638963 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.087992004 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.800247139 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.77484392 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.784533204 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.773345182 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.784872823 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.790272729 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.780361627 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.7765802 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79247537 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.802331172 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.786222795 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.779275709 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.78504874 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.79729922 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.785187289 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.787260928 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.77981469 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.772619319 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.785921685 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.779445667 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.779593615 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.781796233 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.782032482 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.786941983 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.171935408 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835358731 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.773498486 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.772955832 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.776705459 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.792331116 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.172061005 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.819347266 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.799132444 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.82442398 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.778469585 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.072559427 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.81019014 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79491003 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.786425975 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.779810803 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.773123571 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.072208068 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.196613175 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.83427797 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.779243183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.775200923 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.796629281 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.779390148 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.775251979 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.091147376 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.809372874 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794921715 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.900249982 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.788765601 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.811456442 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.77615372 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.782872851 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.807986752 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796416561 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.811096646 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.781212497 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.797268743 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.797616493 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.776757749 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.791485112 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.789636959 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.779269729 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.783698254 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.773479206 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.808148212 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79350012 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.793609788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.799896129 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.902348399 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.777417752 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.074773078 seconds)
done (took 280.695040138 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.853669117 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.77471453 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.869667396 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.777806153 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.864756074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.851950115 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.77372669 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.773840022 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.774071869 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.26419237 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.773833292 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.781920501 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.772305369 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.774714247 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.848210726 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.777496386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.775463545 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.211515792 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.779988356 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.859323727 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.773346156 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.774739656 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.777123644 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.263148138 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.772778613 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774565026 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.858518004 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.778464688 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.214905694 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.775247362 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.772581066 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.213516668 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.857901425 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.803017351 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.785366348 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.78103704 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.868653113 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.790202002 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.846696649 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.84556511 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.872797395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.811517458 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.773184576 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.774182015 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.782472188 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.779305969 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.776066606 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.808902993 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.774453401 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.780667899 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211691588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.783372313 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.783270292 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.775837285 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.776542374 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.807796949 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.776214418 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.780133311 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.860361572 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.780631562 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.848741757 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.265132847 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265462485 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.77962309 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.773616224 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.77730322 seconds)
  done (took 178.932398578 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.846497854 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.857918573 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.845716674 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.784835979 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.830088328 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.846841234 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.785103654 seconds)
  done (took 14.490823128 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.786551851 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.780479994 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83334558 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.833046129 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.780511089 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.936254359 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.779669465 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.792843631 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.78273365 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.80681692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.782204626 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.780460183 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.783620718 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.776711515 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.829489851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.79357966 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.897456236 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.782188467 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.781180917 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930053789 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.78326929 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.786148546 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.806669391 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.793225007 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.783282307 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.787635574 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.376349822 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780108532 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778427936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.781084993 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777777257 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.823657208 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.781813061 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.777557052 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778896474 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895938459 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.780770795 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.78040264 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.781680692 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.776844795 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.782004951 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.781911849 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.782065509 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.779732128 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.781998916 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.805661482 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.782302059 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.781107484 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.780810061 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.781855325 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.808589896 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.783086903 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.780115347 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.784683666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.824925048 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.784012278 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.781919529 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.780444677 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.783365687 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.780857921 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.932418645 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.832478561 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.784096724 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.832017832 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.783075351 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.783268898 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.782337794 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.783359363 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.875845663 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.783613059 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.833352747 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.780670811 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.942780312 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.808355818 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.783612578 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.786529666 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.786789806 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.782651586 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.777875632 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.790449193 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.780593276 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.785684614 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.791174277 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.785976515 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.782230805 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896531351 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.924538878 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.781684089 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.797193749 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.792108533 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.781200293 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.828548613 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.784233466 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.781361196 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.841905728 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.901751458 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.811771109 seconds)
  done (took 197.182769754 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.792058904 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.791491583 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.785745561 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.800345667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.784480009 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.784917915 seconds)
  done (took 12.436437327 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.787637119 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.786266428 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.7841217 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.784226395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.786330212 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.785055321 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.784804081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.787576349 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.788763922 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.784285588 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.785697274 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.788480612 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.786164274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.787828266 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.785419938 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.785354215 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.786631604 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.781794452 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.784935352 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.785275579 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.992772018 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.786402445 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785428225 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.790104892 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.789616862 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.784505663 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.798680543 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.784652585 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.784714775 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.795630194 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.789891574 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.787576426 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.792108217 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.793307469 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.791594324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.791581612 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789468103 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.787298559 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.782913694 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.786154763 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.787953105 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785525989 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.78567947 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.788021821 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.788914425 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.795789092 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.792325526 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.798032709 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.788518678 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.789570649 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.789815985 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.786595065 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.78727628 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.790070758 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.794034253 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.79367695 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.792439323 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.786965842 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.786711675 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.792877808 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.789020862 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.787034052 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.789754585 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.791585086 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.792153358 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.789423733 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.793017301 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.791639519 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.78842558 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.787722656 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.78903697 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.78531631 seconds)
  done (took 131.677327864 seconds)
done (took 536.427685699 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.057941487 seconds)
  done (took 8.759157679 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.811714611 seconds)
  done (took 8.573235054 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.265600214 seconds)
  done (took 9.96843649 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.855330829 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.788946659 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.798082667 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.788227891 seconds)
  done (took 28.957875004 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.893387651 seconds)
  done (took 8.596049452 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.803437605 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.779451255 seconds)
  done (took 15.318438251 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.796963652 seconds)
  done (took 8.498425653 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.805564315 seconds)
  done (took 8.516898912 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.805391774 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.801641105 seconds)
  done (took 15.336258829 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.764980441 seconds)
  done (took 8.466499516 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.948946923 seconds)
  done (took 9.754758032 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.804513451 seconds)
  done (took 8.577776644 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.838262876 seconds)
  done (took 8.541122248 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.851529902 seconds)
  done (took 8.553156989 seconds)
done (took 158.119934801 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.78608403 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.783971166 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.783096586 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.781942982 seconds)
  done (took 28.836054953 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.820970186 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.821540746 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.840901564 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.831229282 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.825158625 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.820836285 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.813806666 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.814899141 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.832542621 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.823288832 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.824944015 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.823954659 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.84177234 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.814497725 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.824874182 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.823669201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.832476685 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.822909387 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.815016635 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.825620272 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.788869974 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.834189512 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.828444563 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.790111099 seconds)
  done (took 45.43972263 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.987396616 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.864077167 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.943116158 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.841592925 seconds)
  done (took 9.339618469 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.841940736 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.842534753 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.855275086 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.893766158 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.915853219 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.852949086 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.81663644 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.813139131 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.797258269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.843944111 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.919780528 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.838103882 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.934580766 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.789314723 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.974799184 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.789693142 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.790067188 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.840882406 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.894968193 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.906901455 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.791092248 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.842088406 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.844702122 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.843388885 seconds)
  done (took 46.177592544 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.788611027 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.797091842 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.795712238 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.789033057 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.789823538 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.789219155 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.795300996 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.791430235 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.810858419 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.792190959 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.788930055 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.789778211 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.788625348 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.789961073 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.788832645 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.801786992 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.80287262 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.789792213 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.793261503 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.79602286 seconds)
  done (took 37.574038988 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.785337186 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.638740375 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.136929935 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.041887229 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.786657403 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.788603872 seconds)
  done (took 30.883204053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.804692816 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.797816769 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.792803711 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.85132179 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.933904636 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.800632647 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.791967349 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.80360863 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.840055248 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.857532823 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.814247078 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.820981317 seconds)
  done (took 23.615270276 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.788601526 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.790416773 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.790052036 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.805290522 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.802927259 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.79978299 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.798881168 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.786427459 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.806485031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.813344516 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.801521063 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.804817404 seconds)
  done (took 43.298052534 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870085456 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.674564072 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237438248 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25629804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.320843885 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997266573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.787776811 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.879551813 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.790846791 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061848235 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.193069735 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001379327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042322159 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.597849075 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.794281313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.253027794 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089003386 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014263837 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81780373 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432279916 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903248906 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308281249 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.498997115 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.90611957 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002034707 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.920357903 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.047409599 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.746181774 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84213675 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797587812 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798717719 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792966287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063385352 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915714882 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8645664 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798302899 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208870946 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.502961455 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.777770971 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.452839019 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.324368678 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915966278 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796268699 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791276079 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72386463 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312946734 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886678561 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.793769376 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.491949862 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.790758775 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799426788 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875335736 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.793499655 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.606191702 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48485822 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065062874 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.787864672 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797951778 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356966072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838910182 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439942381 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.732970478 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.886827509 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.506828125 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260476309 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.951431259 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.794595818 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793992333 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723107839 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.453685329 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911853768 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938615134 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.812764948 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439653958 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101876751 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.26759277 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855750715 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074289342 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.633803675 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.73111584 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016235638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.751306176 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726038716 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.647033572 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72746331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01213498 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828815546 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.372418596 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831839175 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883016466 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.804219503 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814463555 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802919608 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016635719 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.67217985 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795847728 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.150306614 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062171552 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816602407 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.886422339 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728102734 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.798359634 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048275344 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.006545634 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.029883733 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290422542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892587459 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.726771201 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.813481342 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.709542765 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808870576 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.075262168 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86445279 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848235303 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924910858 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.752939601 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05456309 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753268783 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.898359304 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.212398985 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041167254 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12340936 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04766381 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862968548 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.795333846 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.797973666 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.519220212 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419551349 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.016196451 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.793208088 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274870509 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.806817507 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.796817663 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727779328 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.457838523 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.21936141 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.890355992 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016127213 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.735780837 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072673086 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728246175 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941257989 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.783028218 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.015980185 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.456848144 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.881220583 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052313687 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025754036 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.023188424 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81081044 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815994986 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893784506 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818661302 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.221986276 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053230003 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.797941725 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.801177857 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.52190473 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.860399642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802371476 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.799682003 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358457114 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085144848 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.830317732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.804336796 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683001414 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.810678798 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863282184 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802816645 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.805753314 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.317971215 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310744091 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.804382921 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.450449412 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02238932 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805420432 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.512515065 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985049485 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.816570938 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082562645 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868289607 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.731573579 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.500860337 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.500937032 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798679549 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.732883935 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.80021324 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807009963 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810158056 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.99345903 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085665459 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852676043 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.460539547 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.908997224 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808492008 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.802787045 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799847337 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.29481944 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858465989 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400370439 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.810796573 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932886234 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.810547374 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.729665932 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.804332321 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802306149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.797227825 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.752633545 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852868309 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.465186942 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015104684 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060791084 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.213919597 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814569776 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.473155597 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.923845098 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.822592876 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.164634671 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316530587 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.903683683 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867076342 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.810782238 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.528268916 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.546699257 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370881321 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113880956 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13336063 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167534066 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.176199517 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125112085 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894284449 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037483951 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330256327 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863031304 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898290044 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744884692 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823856212 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.462838472 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164568558 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816746472 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026612782 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101802135 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.238669758 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94447827 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014168527 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837029217 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.602381887 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833237762 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.324919307 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826521369 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.255232192 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015633538 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893837272 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.169313707 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893962296 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.805383659 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146290913 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847527859 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.511555143 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164419791 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.187578055 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.337992869 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038100362 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.812122554 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.249513663 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163924057 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.981756028 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.927298364 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738830189 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.814631647 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.814600755 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.799717564 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.778717309 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.643155702 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.061882953 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815533868 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036377359 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.911134318 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178275792 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.714166266 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.810848869 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805305018 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06148366 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476133516 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961649464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.104529161 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.382969739 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815784928 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.739328015 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73995004 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.51090374 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.808801834 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.782693153 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02304001 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.918340938 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493133497 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.170695963 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11535332 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056788176 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.818509578 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089607133 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085575008 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.304039349 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829282035 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.903940012 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.173355452 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.50111306 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.030350765 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042932982 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373124654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031028832 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270550287 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.761698813 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.805793576 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018280536 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.027317064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.237650569 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98834 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.519121758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.822716651 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179831486 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875394416 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.235540389 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005254337 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.900099505 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819861722 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890617195 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815802339 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.819362807 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.819657299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825352953 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.241723976 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.930612768 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.82179707 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890617892 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872013569 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.389777655 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.819405072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093285203 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185092723 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154534339 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875968237 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.808505758 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808888685 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738448554 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938725942 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.252180766 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081746793 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935042505 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.951756299 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832356243 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.181995077 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.039275532 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119279939 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085136265 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.701615283 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433616785 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.930558893 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.030980048 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821575161 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.01930565 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033987569 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120870511 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278710498 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.919647156 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.002261507 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085070581 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.185253449 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.810881939 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400736001 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.817702651 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203728378 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.845567749 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266669358 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078949966 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819678814 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93666896 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819233453 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.007621864 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.263805786 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.500986179 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170255866 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668732677 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.820042799 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102234089 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155487796 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124368973 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892153589 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822348037 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.511511822 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949191023 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.691954735 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.039038084 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.814642661 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022350591 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.523225644 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.819001311 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098653915 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126574143 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.808891501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.714923792 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849397374 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.821589325 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032038436 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040247279 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06655089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819948817 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.818346996 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.62813331 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100892822 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878738768 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747880071 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.817024257 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863046467 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046427407 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829870769 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.331042494 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.515904509 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095250619 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.732677804 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831893267 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.20109033 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196015431 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155783414 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.341980583 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039051285 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370000174 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.634569348 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185290774 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.815608587 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.191300632 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185089777 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.812370946 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297549145 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919260696 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.092986553 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140191052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.830370465 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594595133 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.84918138 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031451038 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176372708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74763105 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.813541982 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.841247845 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.811977349 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.801622619 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821885334 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.749062154 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231154624 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.646455234 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302644401 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.815694833 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.91012981 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.21873414 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343736029 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918032219 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836337988 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816267636 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.517177045 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.100642521 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065114393 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.302999283 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.880236593 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.81645991 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81305852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737876506 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003624466 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.008258493 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101539786 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.138113065 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.922645734 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815934444 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.027424559 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021515934 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.256980621 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951547272 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919875184 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922416728 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.736888857 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.525927693 seconds)
  done (took 1631.676193841 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.840382883 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.867576402 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.823002465 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.82945956 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.836747782 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.832275768 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.87782232 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912295376 seconds)
  done (took 56.551079486 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.814789308 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.981436197 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.825892509 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.816093143 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.826747628 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.817234672 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.984159052 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.830994788 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.87543524 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.827304412 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.817858759 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.833859226 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.093384602 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.841060239 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.816505799 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.797472753 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.823654386 seconds)
  done (took 73.366437524 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.817546553 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.02352293 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.847926293 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.813895608 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.004384677 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.827472044 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.779592138 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.85032228 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.820039458 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.225808934 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.105833802 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.870586206 seconds)
  done (took 89.720012817 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.830939137 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.821012253 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.82098959 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.822107325 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.821900677 seconds)
  done (took 10.85697971 seconds)
done (took 2129.056687147 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.05072806 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.999326447 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.051786725 seconds)
  done (took 5.785848042 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.967190313 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.014050136 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.134469857 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.139420522 seconds)
  done (took 9.995127449 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.105099142 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.206173863 seconds)
  done (took 6.046907223 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.136735473 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.850793421 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.199109289 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.818013882 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.819864412 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.820673796 seconds)
  done (took 22.200432579 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.820412513 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.82662055 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.820690371 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.8241006 seconds)
  done (took 9.028968082 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.799461909 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.490450597 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.801588282 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.814594791 seconds)
  done (took 20.642401159 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.974366629 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.936356591 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.963776012 seconds)
  done (took 7.611726875 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.043075937 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.050126981 seconds)
  done (took 6.829901515 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.984137445 seconds)
  done (took 3.720225431 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.848582599 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.092802091 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.313472407 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.828997099 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.449236206 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.074405287 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.174931327 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.062060164 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.278804749 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.314141239 seconds)
  done (took 25.174571475 seconds)
done (took 132.008195342 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.375266439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853205455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.023886878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.192551355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.090391223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.024682065 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.033799653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.185652449 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.875427092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.86582748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.20088788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.061822131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.994214214 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.841323561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.998054005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.843355077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.053330139 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.213439095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.881531089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.107141994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.055466574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.834066305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.026842901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.848747408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.059903713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975465397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.379713965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.846010286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.007142341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.390822564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.97969667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.246864283 seconds)
  done (took 167.106023497 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.823690185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82395859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8243885 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.82188643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.288019556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.824032391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.825236743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.822058334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.236171966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.239083411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.82379496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.280798826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.824104314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.823555817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.827134009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.823160647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.383659791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.824441446 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.82437103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.822179286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.824085493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.124082034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.823351864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.133263902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.386289666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.825632715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.823904122 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.824388955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.823817143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.82403854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.823899911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.824899436 seconds)
  done (took 207.589633447 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.822833455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826474697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.826438552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.825086666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.825947747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.827790702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.828583608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.823831134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.460563211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.452211465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.824865776 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.826020438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.828239891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825396352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.826754066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.824350716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.824803868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.824144962 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.826282664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.827598375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.82762303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430997387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.825550904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404208948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.826312508 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.824000698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.82611786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.826157035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.82475503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.825654677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.826639623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.826542037 seconds)
  done (took 218.614778052 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.084672336 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.829838296 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.830293643 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.749499112 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.830561222 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.829503265 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.841667224 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.098916558 seconds)
  done (took 18.8414498 seconds)
done (took 613.901151044 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.183504675 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.028132907 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.002830486 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.854270499 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.104621904 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.901611555 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.847262233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.916685766 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.663854225 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.932714005 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.512810447 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.873020556 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.602451543 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.877189003 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.971516978 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.90521777 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.405983704 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.498834524 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.032533529 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.956850222 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.030712899 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.765242352 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.935815482 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.710445819 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.644566446 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.822335146 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.864494828 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.406372431 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.861559405 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.011707583 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.501108424 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.089552103 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.870658587 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.851025826 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.903005279 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.883133352 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.048556845 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.868508171 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.979142695 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.56355779 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.927463643 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576596274 seconds)
  done (took 100.93209269 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.822138967 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.81611919 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.817236838 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.818658602 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.81781961 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.816505665 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.817674271 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.816804702 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.817923941 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.817297443 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.819351612 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.818749773 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.816393899 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.819878938 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.817885662 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.818243793 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.817998914 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.818493642 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.820169868 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.819833526 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.817581372 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.818429891 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.835742316 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.818194431 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.820490601 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.818143654 seconds)
  done (took 49.055511631 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.832798719 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.994011543 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.081677585 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.856035241 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.83365701 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.838220041 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.855263959 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.839510048 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.83732244 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.836804582 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.940560331 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.84088002 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.854772922 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.080718229 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.853397447 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.834499015 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.834541072 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.834707904 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.002926711 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.853684895 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.856193043 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.83959783 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.855517718 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.85049965 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.836521742 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.835307957 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.838395604 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.273265095 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.84641604 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.942069991 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.897682367 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.862105015 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.211460628 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.090598358 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.893939527 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.845411101 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.835227265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945700019 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.843237319 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.837054426 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.854502586 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.843018814 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.079779873 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.36418201 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.852560466 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.834961233 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.280100126 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.956555469 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.877311117 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.845713926 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.083984867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.856763984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.836704185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.836966529 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.873495543 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.842048723 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.836378175 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.154960052 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.849941011 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.854683172 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.840944684 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.83715551 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.0029379 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.847160318 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.993961453 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.846983172 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.843742316 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.838505303 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.081684544 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.854954967 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.371171612 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.85283018 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.836744689 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.941011746 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.998807183 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.310247836 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.851343334 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.006210454 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.228986834 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.863288661 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.845890896 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.258966201 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.86625703 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.843846039 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.83814637 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.838873464 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.837666358 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.880632767 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.853884892 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.28420616 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.373725747 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.175193794 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.86654265 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.853711114 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.839453759 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.15545014 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.847670874 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.839478194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.076320348 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.381046571 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.855495028 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.846010461 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.355164799 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.856207763 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.857871203 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.847501073 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.086975372 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.856777288 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.880916966 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.839484157 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.845452842 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.841065543 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.858623233 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.847476549 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.839210934 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.347810495 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.965868965 seconds)
  done (took 228.369206053 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.836187797 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.838057687 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.833066271 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.838814747 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.833816793 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.839790077 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.833589694 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.834723736 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.839125381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.833935243 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.834484185 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.833592798 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.836252635 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.834218911 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.846822371 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.840673145 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.440475956 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.833714032 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.835109009 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.835325524 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.484640448 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.839786882 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.835603941 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.834827154 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.834816719 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.83775416 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.84157036 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.839893692 seconds)
  done (took 166.43550156 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.841271754 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.957827395 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.860908134 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.869734605 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.848386041 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.837759001 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.941229116 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.863466362 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.846244413 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.837622852 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.83814407 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.901837268 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.851852988 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.938423317 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.877929284 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.949245104 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.950767753 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.850378219 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.838693586 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.838000913 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.870510816 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.8319212 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.901800673 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.967767251 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.858577804 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.95814886 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.842350067 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.842283872 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.841169734 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.958669183 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.85721853 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.901670281 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.869534947 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.859860938 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.963334031 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.959567291 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951319876 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.950995245 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.851615128 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.840416084 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.839604269 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.824465559 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.959926011 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.860601572 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.843664674 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944992752 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.861810771 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.844330924 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.842479679 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.841041789 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.856592833 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.861840802 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.910445206 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.97641553 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.877083666 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.867355196 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.944322781 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.949519093 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.844405926 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.942727677 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.834667504 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.957649812 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.862435417 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.826291442 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.842017449 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.847174636 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.870630044 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.949647305 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.953601938 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.854660426 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.943338392 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.880439956 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.848320358 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.840679022 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.842982367 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.960061955 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.961932941 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.881386985 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.881155136 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.874727706 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.834915292 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.843996349 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.826214701 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.860251272 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.846516723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.957911974 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.963407899 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.853982536 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.844629099 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.844171384 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.84456182 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.870425216 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.969202902 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.878880578 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934836134 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.916117548 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.919089114 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.858465948 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.856027893 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.848325931 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.908991364 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.859040582 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.854601924 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.112011039 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.907203198 seconds)
  done (took 199.79564178 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.212396434 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.896695786 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.902980466 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.17374591 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.202748759 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.734556677 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.88975946 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.891782959 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.916716759 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.078856688 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.961772932 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.908996233 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.881475583 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.86830111 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.88999759 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.912378017 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.899478625 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.244634811 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.110940912 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.027979602 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.881640635 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.180113646 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.208511386 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.472806483 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.945757876 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.291923254 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.464803036 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.02311406 seconds)
  done (took 60.839324613 seconds)
done (took 807.171636478 seconds)
SAVING RESULT...
DONE!
