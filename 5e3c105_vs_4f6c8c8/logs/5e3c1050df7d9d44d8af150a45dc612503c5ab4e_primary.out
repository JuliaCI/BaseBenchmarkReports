cset: moving following pidspec: 15126
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228346612 seconds)
loading group "string"... done (took 0.549328501 seconds)
loading group "linalg"... done (took 7.648034447 seconds)
loading group "parallel"... done (took 0.170565061 seconds)
loading group "find"... done (took 1.162699771 seconds)
loading group "tuple"... done (took 1.835370047 seconds)
loading group "dates"... done (took 1.250179248 seconds)
loading group "micro"... done (took 0.232951656 seconds)
loading group "io"... done (took 0.764248869 seconds)
loading group "scalar"... done (took 40.812969384 seconds)
loading group "sparse"... done (took 12.907418911 seconds)
loading group "broadcast"... done (took 1.153900067 seconds)
loading group "union"... done (took 13.440267693 seconds)
loading group "simd"... done (took 4.786869831 seconds)
loading group "random"... done (took 9.690896708 seconds)
loading group "problem"... done (took 2.152347166 seconds)
loading group "array"... done (took 22.649745175 seconds)
loading group "misc"... done (took 2.112848769 seconds)
loading group "sort"... done (took 3.468753255 seconds)
loading group "collection"... done (took 19.530042849 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.57821039 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142197 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14933379 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147061709 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188394198 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15600512 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158319611 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097558333 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.035753253 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176299101 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152261599 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521702987 seconds)
done (took 5.297480127 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.220206711 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094246169 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103930382 seconds)
  done (took 0.934836213 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078349277 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143630339 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094566437 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07797682 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094718505 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077057802 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094464031 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077417915 seconds)
  done (took 1.402129646 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086352393 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097369654 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080670068 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09647327 seconds)
  done (took 1.103721893 seconds)
done (took 4.489418156 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.73595213 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275154301 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203422881 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463418724 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195708758 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215297971 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675922728 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339307794 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25226006 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100286356 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142777487 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387357632 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137757874 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683097008 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089198494 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12313419 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178264081 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445276823 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083953054 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110643956 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117403607 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141615024 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130887877 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090557475 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186416289 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081523702 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193909366 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108326463 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079551443 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288492431 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200536963 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688258723 seconds)
  done (took 10.925815973 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110019545 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134283716 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098404495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138569071 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134277166 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100149348 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083378228 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096801048 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12241503 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174871926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130246436 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120253934 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096029975 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081281595 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115343114 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245174096 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120113714 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102765407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100694212 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103063401 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120856665 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112718804 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109262626 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092825559 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166885812 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223189381 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112840468 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127094738 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097008589 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112205613 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144608026 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142481039 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094949918 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079330623 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172439066 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124566714 seconds)
  done (took 5.198425412 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.080240172 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19006219 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121999565 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170694418 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079687519 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142681661 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094754631 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114328178 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256830051 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187441242 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174977528 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142089198 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099816591 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097489308 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081066796 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09763336 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628861433 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156071613 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133682224 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096292648 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104176518 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099396427 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363893539 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08658907 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095954846 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081747424 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082368596 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159851664 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085152973 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.154481176 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099905381 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100660093 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134793984 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198759396 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124805221 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115687506 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096252888 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077085405 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190254581 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086901795 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128012694 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09618464 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10207072 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135672553 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134383684 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095687356 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080126736 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202566526 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096626124 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112108339 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.92730104 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182385345 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088346429 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095039888 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320520487 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098106053 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097824047 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081075478 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276606323 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18967989 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098108491 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078086002 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096350517 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074904701 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098347532 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379650455 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096620328 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.731322486 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083292898 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105831073 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08280566 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096907459 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.120449174 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086690037 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103939805 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099019227 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098301984 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079529558 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09675032 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094632981 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081405408 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107784716 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099959746 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081426171 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161012773 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079148295 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114858453 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126638155 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082956039 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094944926 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077292964 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129019922 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098546333 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080378336 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131166317 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079082378 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109270685 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098862329 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142673574 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079991494 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.151718583 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080373821 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123644143 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098638301 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112699309 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112276692 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098512594 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08328818 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096078078 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07605006 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164987092 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079563039 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097469504 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079851882 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109198045 seconds)
  done (took 22.462632026 seconds)
done (took 40.408756618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.316603612 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103369644 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103568181 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103532492 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101479492 seconds)
  done (took 1.543689121 seconds)
done (took 2.33317868 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288803005 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172733162 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095610605 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167241402 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094025102 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173260524 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159884494 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112537223 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199878002 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095876437 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16338007 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094880184 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075965937 seconds)
  done (took 2.710468698 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094906946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115351423 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083609001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110961293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07607758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112404473 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091744606 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116973457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109425536 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084415265 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093523503 seconds)
  done (took 1.877433692 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094226771 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112984976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081784152 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110891487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076077267 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110494039 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091054563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11778462 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110785939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084489563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093984911 seconds)
  done (took 1.869800441 seconds)
done (took 7.23835312 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090834221 seconds)
  done (took 0.873269926 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.934091509 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.070406697 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113058232 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150666899 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.29812695 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192873122 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.485792058 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125503616 seconds)
  done (took 11.358186353 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.112876037 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114416861 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101772663 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085930252 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103075979 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085739993 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101503787 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10057659 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086255709 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099420031 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083461488 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102211797 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098989979 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08521927 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103582838 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08423158 seconds)
  done (took 2.393521443 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118090456 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116727842 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108295876 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109112756 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085534317 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106224617 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106586365 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087548508 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103195449 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103903997 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089170939 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107602169 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104846171 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078544075 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106978906 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108149567 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084876322 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107430409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107227179 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089576386 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108685046 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095788734 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086873091 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108038527 seconds)
  done (took 3.323971931 seconds)
done (took 18.735673098 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159519511 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10818062 seconds)
  done (took 1.05613063 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096181112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114088642 seconds)
  done (took 1.002283192 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096910237 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097111321 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122705777 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109970067 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07958657 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097604032 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11995995 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079587101 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097949798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079194733 seconds)
  done (took 1.775997771 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083379701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110524206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101613512 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094400237 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106661427 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096039386 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087648717 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100770242 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109979067 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077143282 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10411243 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115543286 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08589349 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117471942 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104777997 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082826301 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103215988 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099717009 seconds)
  done (took 2.578443541 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080981399 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097676198 seconds)
  done (took 0.97480937 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081720046 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094547057 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080367046 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098322515 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094220453 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077648658 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095489581 seconds)
  done (took 1.417306082 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.494298061 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13765668 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261823066 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10238226 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120701628 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301922402 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099752105 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083522138 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10405117 seconds)
  done (took 2.54158983 seconds)
done (took 12.139258134 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09356054 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115942777 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111525221 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.470136387 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107505341 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100456887 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147187737 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250735814 seconds)
done (took 2.20044153 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144171263 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326313628 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116740873 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067456702 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09856974 seconds)
  done (took 1.412581327 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08013765 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099154265 seconds)
  done (took 0.982886028 seconds)
done (took 3.349871855 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080789506 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130145444 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079168974 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097639719 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078440525 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097255771 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076179512 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099748526 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078847689 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.098036222 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096444942 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081538717 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096681004 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078200993 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094172356 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079839472 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09443984 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079872935 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094583055 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078270943 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094537317 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080699758 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094643175 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077695205 seconds)
  done (took 2.977281142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099894094 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09936194 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1027219 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086124416 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102337768 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085929711 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104417978 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097458199 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085742447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100363361 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100364897 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084149152 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099612018 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0837693 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100574258 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100844219 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085089327 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098458985 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081975077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101954205 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102300578 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080770879 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10281919 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101879775 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0840132 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101556573 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081406004 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098740828 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102231301 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084325215 seconds)
  done (took 3.650478699 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085151841 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093977547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078822455 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102346673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077876176 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098025648 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07748325 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096715964 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077570159 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096467919 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07819553 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095696742 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077259115 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097806541 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076701519 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101098326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107731551 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078196786 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095727545 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078822352 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097913761 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077593595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095811948 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077355389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095815819 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077652131 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095360457 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076890863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096643727 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076129564 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099497211 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080752124 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097154308 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083129977 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100388313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076268923 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10013717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076167182 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097765521 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093506786 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078132459 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094226536 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078321374 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100872156 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078835719 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0976882 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078238121 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097682572 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077428644 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099012251 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077239007 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096328059 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078064986 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096747592 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08122738 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09601604 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094902551 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077819356 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095658953 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078413722 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094643188 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077454151 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09737129 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078714017 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111506755 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084214364 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09606424 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079620937 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097692366 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080281 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098878922 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108005891 seconds)
  done (took 7.21342212 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082899006 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106101788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079347326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099038587 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075710078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097397381 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099705657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079597399 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097846584 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084769365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097296018 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078376807 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097891816 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107723699 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079327827 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09764574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084347052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094593693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077291628 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100847971 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07772392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100261388 seconds)
  done (took 2.809217087 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208892549 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105537033 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142753453 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106647989 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082519499 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107437624 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102211447 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086426541 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103319671 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082046088 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101732439 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101684917 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082794324 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101642436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100122708 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085473412 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103091118 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084139507 seconds)
  done (took 2.705846725 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093269641 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099072886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101386411 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099974718 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098897448 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083656595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105356294 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106941206 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084151816 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098297676 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089145662 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102252023 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10154154 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082036939 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101652734 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080200912 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102496133 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080386813 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108696685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104607347 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103959189 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091057379 seconds)
  done (took 2.93823315 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096474997 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101977517 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117742455 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084614291 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09481096 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078982114 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105837439 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079937707 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108030608 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100107985 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080871437 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097832432 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087220689 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099428856 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10391791 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081176864 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102460625 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080682523 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101356846 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075482319 seconds)
  done (took 2.700297911 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102873757 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.210359829 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099407196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092417205 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101448719 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080575967 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1099367 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101518024 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081509501 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127136285 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101484966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081816049 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110951813 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107618511 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100168132 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093424117 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110892606 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11034105 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082082714 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100858178 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126095917 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081644484 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109908483 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100220224 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082122816 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100513051 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099027362 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088487978 seconds)
  done (took 3.717797621 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081792818 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098323703 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079114246 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096019542 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07883067 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096040752 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078646697 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096537425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081419983 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095997303 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081096772 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098785304 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083082375 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098951207 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080695068 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099571749 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080802245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096458922 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078204543 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097071472 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080302792 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099646076 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080258186 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097199012 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077110867 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099825701 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077576863 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097150116 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079805939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097402335 seconds)
  done (took 3.489183847 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092035073 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106463333 seconds)
  done (took 1.023148957 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079742773 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114704023 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077953233 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104506394 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085587955 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102131117 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108578339 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084606128 seconds)
  done (took 1.582516052 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097062818 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110395619 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082308888 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113521443 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110199853 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096859052 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168990618 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101312734 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085491585 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098906282 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112250345 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080752042 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105808602 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081023327 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106434378 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087405443 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098944399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105059265 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084315704 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097895974 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082623398 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109517999 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08209358 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098316679 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100671909 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090317542 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113434831 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.080875519 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103950898 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107555954 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086662365 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094184808 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081386104 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101639641 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078340364 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109598994 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116411449 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084531427 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11058148 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081081788 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111428052 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0956529 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086154761 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106191698 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109484161 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082746001 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100981759 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077324551 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097497927 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083763592 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095805855 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081433124 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095497655 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088955685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10479169 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110608761 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079934105 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101620062 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083422015 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104729025 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086950544 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102749939 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102286027 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081435841 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107579989 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086343882 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111105145 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075776702 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095649666 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100675821 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092166042 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123842234 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.086675024 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102927719 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100772366 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079380996 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103265867 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082594688 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107215037 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105947917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082433065 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107412398 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088461107 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101263437 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083652905 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109465508 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098588156 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083192683 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098358928 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116617736 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08160601 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097795847 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079490977 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112023726 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084384874 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100159927 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079343644 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108570494 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093078615 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082933042 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101954222 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082428832 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112136962 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105208426 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087762934 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10968183 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087709458 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10173105 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10218642 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078670603 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101148839 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083811966 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107376064 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075274441 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104183615 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08227469 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101479907 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108527426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08017887 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10074448 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088738948 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106898931 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078823391 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098068754 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102996729 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081895971 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104037756 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089418128 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100503572 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075905631 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096778004 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103617612 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082814331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103830614 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087522126 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104808144 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075466539 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099740545 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104772083 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09155235 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101700772 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081714555 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10751523 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10060716 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082244407 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106655364 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084401839 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100241175 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086710709 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102636964 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076026751 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105200654 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102830322 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08081996 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104956739 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085543601 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104184528 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081753399 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100125802 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105781932 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08316023 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10024387 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081064193 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099461515 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091653159 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103946802 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095446852 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079882039 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108833299 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079861147 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101154867 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080418809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103791033 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082278346 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100666942 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099193399 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084223293 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112781715 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085532968 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103445201 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106243021 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092451854 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101145607 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084122547 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102440081 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102163664 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083591826 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110452996 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086790477 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107350139 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101730226 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079961515 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10616285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090431938 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100207453 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079632451 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101320581 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085015768 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107427978 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104572715 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083176373 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099489514 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082521946 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105658019 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102206281 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082936635 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099935016 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087162015 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100476043 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088565639 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104266211 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111033519 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08573269 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09683677 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084537002 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10018818 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105632955 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078856644 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098318288 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082267481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102127777 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081284318 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104193237 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076926645 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109114479 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088843889 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101844196 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098994741 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083384075 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107726421 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083338396 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105461634 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084510826 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108419137 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112104987 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081942888 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104412869 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091596447 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102271418 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07485757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107456128 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09897263 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082595035 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100943389 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079939091 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104615018 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090056513 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109082262 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094737993 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084593416 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10016752 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080020574 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097059296 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08596456 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104933269 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082167551 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108721861 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102053218 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083566488 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106267723 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082121355 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103706579 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102206536 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085755836 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101515876 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085706389 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100403548 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085303148 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103886243 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.07967686 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104306837 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081243237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101810862 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106752891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082854083 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101874202 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084598953 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103439146 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081961075 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102850108 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100033164 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086612439 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101946195 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083017662 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104241485 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077374884 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109582728 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082087083 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111228985 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101268556 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079885006 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106927808 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084490906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107142779 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082631071 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103709581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102022084 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082197388 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104399859 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08840872 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099672054 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092863671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110024353 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102640548 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084305176 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101512013 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082783968 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101341801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082105123 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103774202 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100769617 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082566038 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106226372 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084839305 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102978722 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083648351 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103622583 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081372112 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103431558 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095126021 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082436773 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100719677 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083175287 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112859627 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082307227 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104748812 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09921459 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084720749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09979712 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078849052 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109674893 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110518902 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083381794 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109555384 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081148453 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104322329 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111554263 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077319306 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098967053 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081028709 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098646475 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091565483 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103103065 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091409767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102973379 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080976318 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099585421 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102686934 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081692473 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095350324 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080195537 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105686258 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08498503 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101023763 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083568474 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104982562 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082858503 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120974932 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100867452 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083026582 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102918767 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078738711 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102006913 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080496021 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106421341 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102039752 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080314172 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097837211 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081838518 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102189563 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083291605 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101752733 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083671574 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10931782 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081487996 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105734811 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104594856 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078063518 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105093208 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081649584 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102161983 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080948741 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107181956 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104821646 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08466368 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110870697 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081067094 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103429068 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080916595 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100926561 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100508389 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083553761 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101332919 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081817517 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103311175 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090033095 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101482174 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083540338 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103182988 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101703689 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090523604 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103362917 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084641659 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110895099 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104601053 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085112058 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111050028 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086166906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106714014 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102287476 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084899245 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107406089 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081964678 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107923285 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082447414 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103741221 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08293134 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101163955 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081151267 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102538916 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099974525 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088749085 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103466394 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081679024 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102685496 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079494524 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103864135 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106033612 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090744227 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10518201 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08518679 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098570938 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079099886 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104164687 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079361418 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104353973 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104700059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089647241 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104538496 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082874622 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102783086 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091231524 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109814127 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105244966 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081460941 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106519863 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083573552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105272544 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08283515 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103507505 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102252189 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088369433 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103230366 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083212579 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109346813 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085475063 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104353909 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083431 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103516674 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102135497 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079092453 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103142596 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085366304 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108749803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084911752 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103656884 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113345784 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083034046 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102212446 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087392326 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101608237 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086708184 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099495181 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083639048 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105399929 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102871311 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078500413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102755786 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080761781 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104720855 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082358141 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099714193 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113093185 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093268426 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105981737 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080896592 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101826482 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077094496 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098786764 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081727549 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105046103 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103111147 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093212296 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10237896 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082288705 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098411912 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083102002 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107261122 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085682485 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099986234 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096899635 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083069737 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105834376 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089086722 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101157118 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082355255 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106432048 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083832436 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102778447 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106361932 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080188672 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107299331 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096372519 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104482181 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082024468 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109507545 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11063826 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083517948 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099361446 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083012372 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106660044 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102541409 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085434796 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10393473 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098048158 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106321716 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100622517 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082845007 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104211474 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08268687 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111608102 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083628914 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104941382 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105574297 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086714623 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112080457 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085656255 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111955586 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104969326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086748871 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101213329 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08335486 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101204555 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081521283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104774958 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083147591 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108614713 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111295013 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081849952 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114657582 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111437571 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087977964 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09953568 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083348142 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102648993 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07844003 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104286335 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081227668 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102153558 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080325747 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102949652 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083093722 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109293174 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103720709 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084314502 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102861815 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079528681 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105294711 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085592903 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104791389 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078733423 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104183382 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.1030993 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088276883 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108114735 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083841713 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105817313 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085128632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105012775 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078580369 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112194012 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101202682 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087544473 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102239132 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084319746 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104538171 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086387387 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109972129 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104129003 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086017311 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115111308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085938109 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101095259 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079956199 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110392128 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100940176 seconds)
  done (took 57.763086317 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146517976 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080950386 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099064975 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07823293 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114024635 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099278812 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079716682 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099477127 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080103806 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102469775 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078389159 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099573112 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108230594 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125079953 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093238847 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104854386 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077327147 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101873898 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098489154 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081084247 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109942654 seconds)
  done (took 2.929168715 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105518007 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11837257 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115136714 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117918547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08891451 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117018946 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114652643 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114282393 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099763931 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111862316 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119154817 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115012373 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090600273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111992925 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110846609 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092699233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119655293 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110787051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115018093 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11355392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115690699 seconds)
  done (took 3.284343252 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084634067 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10215836 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084512222 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097812828 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08283036 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099243261 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087328056 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101456583 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085193851 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103831158 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080368356 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103841247 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103864075 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078901917 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10283544 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08159609 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151685154 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108297855 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082658108 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105629229 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077305385 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106521446 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098359087 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08053015 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102197923 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088476491 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105383221 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080815019 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103814948 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082286723 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104826595 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080242419 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.1056692 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102707401 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083314301 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10216041 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083784326 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103013296 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0795548 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101752848 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08362196 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100227825 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083539137 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106200193 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080401942 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102928375 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083913919 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104251813 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097310631 seconds)
  done (took 5.517681702 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103791903 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162233258 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086203362 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144239406 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121387282 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112806706 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087366552 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143766498 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10429529 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08128832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122734354 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120763514 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104002448 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088026384 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111565119 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103383209 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085463756 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103826184 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107662677 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084838409 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108599533 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088825556 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120559052 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11861089 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108943171 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082900834 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10443371 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108534397 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097522085 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11066198 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108816941 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089470906 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121295312 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106605153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082645995 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107447053 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122645725 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.082794606 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108544624 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10210204 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08628721 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110407213 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109757739 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100552343 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106425588 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109157465 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083764951 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101390053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116556222 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086441571 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113711907 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120108644 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087107924 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105823429 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109651391 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119070508 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083893555 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103355327 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087346776 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117985872 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102471119 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087727552 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11962435 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106908135 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09063321 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119444209 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109529685 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108091798 seconds)
  done (took 8.181739551 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092999082 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111534566 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12091134 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121212503 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091033983 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112277 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111726498 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089547032 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111713836 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118016454 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110885179 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134313754 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086084255 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115359499 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111709214 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090687098 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112365696 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112004841 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090627187 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11267323 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111570964 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120586897 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090426508 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120558908 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142132757 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105894351 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089675081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11168867 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12165419 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11124831 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122078093 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09243669 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112225772 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12041916 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123663608 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090456708 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104909748 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11063256 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09149809 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112506957 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105306421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100427403 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112366486 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107180985 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089658018 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111664852 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12269881 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123690999 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113961149 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096809456 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113185903 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121260311 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109864377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090134666 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121347986 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147758016 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120705177 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122018367 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11138604 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101037952 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121417759 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128997574 seconds)
  done (took 7.741466662 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107108219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115511624 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117959253 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100701445 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082832619 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109247351 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081640073 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103040285 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11315439 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094231455 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117499245 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109435911 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090392685 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118211422 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109776074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113007105 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088776732 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10971589 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114698367 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107439767 seconds)
  done (took 2.992549641 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093395988 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124208064 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08403664 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112995148 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108788438 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090860529 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108539169 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107178314 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08602089 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108362422 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09509924 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117210607 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106327193 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090318013 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117416856 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111788329 seconds)
  done (took 2.551675557 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095952131 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117765576 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121395157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08311499 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104890963 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080349395 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107285801 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100330056 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080612704 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123669111 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082997958 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109830779 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10496516 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083251484 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10257382 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087135201 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102114852 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082220069 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106501242 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119222847 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095157319 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104850219 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105374913 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087097305 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104909084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08890821 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106914005 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103576375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082915735 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106181103 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084002436 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114214336 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100710006 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083384607 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102704856 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082568475 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105719151 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084071239 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109482767 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104249853 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083496841 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104762531 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084427694 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10704119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079869933 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107355239 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079406453 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112634582 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103712168 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084011159 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105516234 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085411162 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10754672 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115953952 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087491793 seconds)
  done (took 6.291822811 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098861549 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110131682 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080114665 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104485956 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086821012 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109613053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108293396 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087664846 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107534414 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082350775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107595014 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088308553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107863569 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108661374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086983497 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110274428 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079402076 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107287908 seconds)
  done (took 2.668953555 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090639143 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10551827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092345272 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106587689 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083694353 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109637466 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079616546 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105839178 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103919677 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085512446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10506466 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087400718 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104485508 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086470292 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106128419 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083692769 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108989669 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102692829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085809745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101440791 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086982225 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104929659 seconds)
  done (took 3.021999419 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117895925 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126201871 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091868685 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231143341 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103584623 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132420653 seconds)
  done (took 1.699426864 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109208198 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120760394 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106501109 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106956131 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115236413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084886836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108471077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10805665 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117809071 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100958954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109091914 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118026623 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117661572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096410271 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115142071 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115561135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107257178 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087230394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106287435 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127432983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087089767 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118897623 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107842634 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086346114 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108572104 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11759858 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117996621 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121909147 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088366864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118236112 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114316892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087653966 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118762213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122875686 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10786714 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098451429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108805899 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128470024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113740253 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096721595 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109463118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11481547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096493247 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114702988 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1184738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107985821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09214603 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108871587 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106988243 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135491586 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092206085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118598252 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115848863 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118092031 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097711294 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15631029 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102013144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117729389 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115987596 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123356799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116809376 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094616464 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117752752 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123761212 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115707678 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117469601 seconds)
  done (took 8.200667453 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10202248 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127446603 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107985196 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1219779 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096381113 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109048732 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108081592 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087064264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109013117 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107302426 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152687721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088453882 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11876477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119380913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086312648 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10868241 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108387846 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118238347 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086567633 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135564186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109066903 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117616398 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117991183 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097265603 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122625833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115428339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10757322 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088223914 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109089069 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10795473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093839896 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109908055 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11748983 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086662852 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119287998 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109037523 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085924717 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114828444 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10896693 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114477886 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097376539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129029607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109041381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107880654 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100004602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111355046 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108957464 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086742385 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109011444 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107967347 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101090703 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122993227 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122654857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117946553 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108329697 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086991077 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1095173 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10836086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088255488 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116416795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117672436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086337821 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135510618 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10932199 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108560189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117606781 seconds)
  done (took 8.083089477 seconds)
done (took 156.538097215 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.223370902 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.233168159 seconds)
  done (took 1.359483093 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097267069 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137602796 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094331165 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169737239 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10633548 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119352347 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138624483 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097037871 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107523402 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084719506 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108536032 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085884937 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17270375 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084442576 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107187318 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107327682 seconds)
  done (took 2.728240641 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198961826 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25609442 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101041031 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107022057 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087199004 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111431686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10445158 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091799912 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109955935 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084849855 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109060251 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085673313 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106262127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085799024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111042516 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087295518 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107187878 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086806713 seconds)
  done (took 2.941358787 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112202079 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149618618 seconds)
  done (took 1.17688041 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117725182 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180261738 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316343157 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155128957 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106149548 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127864362 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156476375 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131180357 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195973224 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123166431 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122084386 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09782415 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140624743 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115521426 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093214808 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118746113 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142393567 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091431151 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116598253 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115598791 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115143325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107318925 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114814515 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093927207 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180444402 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120419224 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083812869 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107900989 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116109996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093980689 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113829612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123906817 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097460017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177174548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101235011 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176587902 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097275281 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112726088 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114818497 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091947747 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119977986 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118705022 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103823806 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118893635 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084318372 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119174526 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.1060386 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085187337 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115260101 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097319092 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115973091 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113857046 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155486813 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119020948 seconds)
  done (took 7.588420175 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793167817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155300549 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089379809 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88136436 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134496392 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10390848 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775025277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110082304 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252745338 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754244636 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133257181 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119016824 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20356237 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256442944 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962817944 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287449007 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686125888 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101612206 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150349246 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151810236 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118677396 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135439603 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107898765 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.425516069 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116381218 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111771981 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095232663 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11908892 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158014508 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124154083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113212632 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175464649 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24724225 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204049903 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09330998 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111324582 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110043425 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16735651 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263309731 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189221484 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178085285 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109438234 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109130401 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099117152 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13191828 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106924785 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161686865 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173309829 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1668937 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115056799 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119552023 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09669761 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121361326 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16041679 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121078615 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315574965 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307041178 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087768235 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121155624 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126367714 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259474609 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101088173 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22269925 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139672582 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209990684 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089476686 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803513531 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167029662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111875457 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093816428 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119990595 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116019062 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09772308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165393802 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391637866 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123961058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114640243 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088635478 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225394579 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122816777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08955339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160385286 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116686153 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120012846 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100346715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123094336 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166309129 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250370547 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099244536 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119487961 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115602648 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101447285 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117434898 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208516903 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217079547 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.159366443 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230325863 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098958646 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183924903 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167192108 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11832227 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171044211 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118930622 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100740628 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122207079 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214575073 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144232546 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123056003 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092312069 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118977468 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147139572 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12703729 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095190207 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19102902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454106229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166645842 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10956633 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126683936 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09667739 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182479388 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094345486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256737356 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121939336 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167980429 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119203621 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087545225 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120540303 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161734365 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121300535 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120161084 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099692565 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118481031 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233574416 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216321254 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120836313 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219182422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18146534 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117784949 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16902202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121254848 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165388352 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120547577 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11941905 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094408142 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792344763 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122593956 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097725358 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116115459 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18639377 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110638652 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102015576 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124619017 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107639604 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750818242 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126592396 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121079225 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101856492 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117947362 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120119363 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095100425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11646704 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158633091 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22525277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11980197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118716845 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101893262 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15877201 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117775079 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124320397 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123831835 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101762763 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122227302 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115037359 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102100273 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189334906 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161291947 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21912308 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566510053 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112826099 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124129875 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223777421 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090403433 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284862026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119411679 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201417629 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184693447 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098109941 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306902022 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184888257 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185868815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105212303 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193593283 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088863567 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11756476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164456703 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111565695 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094777766 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182557178 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102904937 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123799606 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958164312 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089007754 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244712905 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086902187 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169309408 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118176667 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120170539 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291129005 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089942374 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127265833 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162717597 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116422994 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123172278 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716020687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125229434 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098777605 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118065992 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219508255 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161689227 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120095191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118615222 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096933619 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182926923 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208485917 seconds)
  done (took 43.741650986 seconds)
done (took 60.444087993 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276237789 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216779357 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263772991 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170091226 seconds)
  done (took 1.940746402 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170882145 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150631756 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120573264 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108361223 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151908156 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084089593 seconds)
  done (took 1.72385105 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365657961 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276470935 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242999704 seconds)
  done (took 1.826524831 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316271223 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247779342 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473547394 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325132698 seconds)
  done (took 2.400235184 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20826947 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133740485 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111734849 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103592837 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198358978 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247008667 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143708 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203334264 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097807077 seconds)
  done (took 2.430651011 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19752933 seconds)
done (took 11.46028468 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.267087543 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.212772877 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.219000673 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.193646445 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136947716 seconds)
    (6/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.219244643 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.160313787 seconds)
    (8/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098256588 seconds)
    (9/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125035879 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096692452 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.151845132 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241360195 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117779001 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134923015 seconds)
    (15/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.258374869 seconds)
    (16/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.147845591 seconds)
    (17/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.206192643 seconds)
    (18/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110109288 seconds)
    (19/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.260127651 seconds)
    (20/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.197084904 seconds)
    (21/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240988622 seconds)
    (22/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116956791 seconds)
    (23/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093596833 seconds)
    (24/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.205446388 seconds)
    (25/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118911144 seconds)
    (26/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067117734 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183117296 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155853479 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.215046286 seconds)
    (30/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090782535 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09481809 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.219394622 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116390894 seconds)
    (34/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.118452172 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121172215 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.15958257 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09140221 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11065504 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134568663 seconds)
    (40/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088182948 seconds)
    (41/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170903253 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150986955 seconds)
    (43/286) benchmarking ("sort", Int8, false)...
    done (took 0.197556882 seconds)
    (44/286) benchmarking ("sort", Int8, true)...
    done (took 0.212647479 seconds)
    (45/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.206570244 seconds)
    (46/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.163342075 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.194691499 seconds)
    (48/286) benchmarking ("sort", Float64, true)...
    done (took 0.22173717 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118762185 seconds)
    (50/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.250271992 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13300984 seconds)
    (52/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099253865 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132037797 seconds)
    (54/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094865597 seconds)
    (55/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.09247996 seconds)
    (56/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.198652585 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110685151 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112587185 seconds)
    (59/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.075567481 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142030108 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184226165 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101423747 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.184850435 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106537575 seconds)
    (65/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097406606 seconds)
    (66/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184796004 seconds)
    (67/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091908519 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110651121 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.178391278 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068792196 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164215192 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08528869 seconds)
    (73/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.166206109 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.085606203 seconds)
    (75/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120106921 seconds)
    (76/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.180752235 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08682988 seconds)
    (78/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167135296 seconds)
    (79/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11144264 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096868436 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150582239 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113555361 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126439031 seconds)
    (84/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121741545 seconds)
    (85/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090028922 seconds)
    (86/286) benchmarking ("sort", Float64, false)...
    done (took 0.171881275 seconds)
    (87/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119430102 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089540273 seconds)
    (89/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149643803 seconds)
    (90/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167019062 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086824293 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109195266 seconds)
    (93/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093354627 seconds)
    (94/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171210662 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093687116 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.136241547 seconds)
    (97/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170955195 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220749679 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198670528 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085135993 seconds)
    (101/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.109184783 seconds)
    (102/286) benchmarking ("sort", Float32, true)...
    done (took 0.222285688 seconds)
    (103/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094276833 seconds)
    (104/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117039161 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09339328 seconds)
    (106/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111776851 seconds)
    (107/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133421836 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068235078 seconds)
    (109/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.129258047 seconds)
    (110/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177322334 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133328241 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092025462 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136240627 seconds)
    (114/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065201231 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118976366 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090962264 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.180485479 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116745474 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116906535 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09509654 seconds)
    (121/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122001787 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164818625 seconds)
    (123/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177731975 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116496014 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093134305 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091527597 seconds)
    (127/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.160567838 seconds)
    (128/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145855236 seconds)
    (129/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180308706 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095073243 seconds)
    (131/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109852538 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086362414 seconds)
    (133/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.148421614 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085125406 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172987545 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10929679 seconds)
    (137/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.178174687 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118341095 seconds)
    (139/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.154472004 seconds)
    (140/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097487676 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137715479 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.088100124 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123830353 seconds)
    (144/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066224864 seconds)
    (145/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091776688 seconds)
    (146/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092638212 seconds)
    (147/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.088883541 seconds)
    (148/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083286512 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132978484 seconds)
    (150/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067224902 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084237378 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160479465 seconds)
    (153/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.089449653 seconds)
    (154/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067666173 seconds)
    (155/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066831393 seconds)
    (156/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.20486348 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066112778 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183166416 seconds)
    (159/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.152872261 seconds)
    (160/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.083833165 seconds)
    (161/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.10035167 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092738369 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137290041 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085681615 seconds)
    (165/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12169583 seconds)
    (166/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128957301 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068276072 seconds)
    (168/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066738092 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119892928 seconds)
    (170/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085386511 seconds)
    (171/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091971012 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 0.216205691 seconds)
    (173/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096129356 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111475707 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092960675 seconds)
    (176/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160292934 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.40305698 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 0.212899361 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08607891 seconds)
    (180/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.215827094 seconds)
    (181/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.099925139 seconds)
    (182/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092812906 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06612872 seconds)
    (184/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065766927 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094283667 seconds)
    (186/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076454588 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090264201 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09379665 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118823032 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095216087 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123241568 seconds)
    (192/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068888254 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116023401 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091336492 seconds)
    (195/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118067729 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101955275 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11175242 seconds)
    (198/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06636768 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11727895 seconds)
    (200/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.096352679 seconds)
    (201/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092325751 seconds)
    (202/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.075964133 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111813503 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092111081 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110571465 seconds)
    (206/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084602477 seconds)
    (207/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090806965 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085834608 seconds)
    (209/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066311926 seconds)
    (210/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117767623 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083629333 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185070667 seconds)
    (213/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091109739 seconds)
    (214/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118325458 seconds)
    (215/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090056686 seconds)
    (216/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095489654 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11134617 seconds)
    (218/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092494887 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10897993 seconds)
    (220/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09340846 seconds)
    (221/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114775244 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085946679 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110390028 seconds)
    (224/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067194691 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065768482 seconds)
    (226/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.091656609 seconds)
    (227/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067143913 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108605537 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066720943 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107678993 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069109969 seconds)
    (232/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074729694 seconds)
    (233/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090426092 seconds)
    (234/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068972044 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066839668 seconds)
    (236/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090601465 seconds)
    (237/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093646941 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111380443 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091389457 seconds)
    (240/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.145013887 seconds)
    (241/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147979237 seconds)
    (242/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134390124 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065737882 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114798567 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135375681 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094433669 seconds)
    (247/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11159224 seconds)
    (248/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066401658 seconds)
    (249/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090604582 seconds)
    (250/286) benchmarking ("sort", Float32, false)...
    done (took 0.148530496 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090916712 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113873743 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092108653 seconds)
    (254/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08533583 seconds)
    (255/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116293792 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110067859 seconds)
    (257/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124101549 seconds)
    (258/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.1177344 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067022744 seconds)
    (260/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066889687 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118352046 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086223859 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110698896 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06747323 seconds)
    (265/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112659483 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084375339 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119278429 seconds)
    (268/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084599479 seconds)
    (269/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092544606 seconds)
    (270/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077202068 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066617968 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117549234 seconds)
    (273/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077534473 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112974956 seconds)
    (275/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066662841 seconds)
    (276/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117647214 seconds)
    (277/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089322992 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109780674 seconds)
    (279/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088207252 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115337667 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.076758046 seconds)
    (282/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13618133 seconds)
    (283/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092037307 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090379884 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067864433 seconds)
    (286/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086933643 seconds)
  done (took 36.036559527 seconds)
done (took 36.980470133 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10036091 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148176745 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093678128 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135414741 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123673088 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09059106 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119034941 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096494917 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12344841 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.1243255 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096648188 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093691863 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097919747 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120801165 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094971051 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139458565 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124489455 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093421318 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119889844 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084569665 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120593931 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085286997 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113190922 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069271704 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121942587 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093318996 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117312994 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118816835 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088404635 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109827285 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090875566 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117935343 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086957948 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124365901 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09250651 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119761228 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095562555 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121898623 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087693364 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11118287 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117777337 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086622482 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117063568 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094612513 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115861495 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092261658 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118461994 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097891641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140417819 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115117112 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095061128 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12004454 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095477431 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11755519 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089416437 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119705747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090741346 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139570522 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11861054 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091237503 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119087391 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093586349 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116394042 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094424709 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119757324 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119899719 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098796358 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115997414 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097154294 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116743871 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085884368 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119119848 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089324327 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111302989 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094628123 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121993576 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084428921 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117393958 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091814724 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116023442 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109877419 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089990177 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111703729 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093346203 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112795983 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070586965 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.088724254 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117873266 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085295482 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121001747 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116465422 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09431846 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112179754 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097824524 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110540861 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092163691 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111194247 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086152469 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113038068 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089785605 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110078301 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088137435 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120122075 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087539409 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11735426 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096883364 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11183688 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115780551 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086636206 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109683643 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101269427 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12140322 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086782184 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116316465 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084777786 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11859636 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084962549 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111968448 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085255597 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111715803 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092553188 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112261852 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087730067 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119076777 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123885258 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087123168 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113455075 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090364246 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109911332 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09335051 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110156383 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086673891 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112629921 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078217536 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112460769 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087879202 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117477181 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089581479 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118707268 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088319361 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119721593 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090442356 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117488677 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09133541 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110983251 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074146674 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116342486 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088795403 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112623188 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086471366 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112708041 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086630505 seconds)
done (took 16.934873839 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087976853 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183081923 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150896414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14225898 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105416452 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112377445 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120571369 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118462443 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114096146 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142053519 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108608478 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131776723 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147174113 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085419081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111978032 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090852979 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112781109 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101614347 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145374624 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132535609 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162315165 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085120938 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145754299 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135866134 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119492936 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113631322 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111695048 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090802245 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115097149 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101499891 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132753562 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089551339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113482645 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134092571 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103155588 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120437102 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086237812 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118979311 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085960027 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113042354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139441257 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108125262 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118364766 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117007939 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090525179 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113702346 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08897653 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121238596 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096636047 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116869988 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125530439 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155492974 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090855186 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121775835 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085626052 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123136868 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119654712 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090015513 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111367564 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090213957 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110464954 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0912083 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126996404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141436235 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091348621 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121563264 seconds)
  done (took 8.6249357 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105108514 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139945957 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103827311 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130483822 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111660341 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087555953 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113142997 seconds)
  done (took 1.796744026 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089076136 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136579866 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109577601 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13938907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133547709 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107697117 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1243476 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.086586718 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132003545 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113071992 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109780259 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150822681 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088501821 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12132481 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138005819 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088436094 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13749026 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086904923 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117773871 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135531881 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092450716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13644844 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089662815 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113749403 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101708133 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114774277 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161259585 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092953342 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115432869 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091124843 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112431263 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165073757 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100498262 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126103771 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111870019 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103622691 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128459926 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086065489 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130501347 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108947623 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128622099 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112621113 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091472358 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.110384685 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093989708 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.1229124 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089773493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114193601 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090186484 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133171415 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.0878339 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127226499 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087371275 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117589209 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113374236 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094674204 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12259092 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089830876 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133678399 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089350639 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131408057 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129134637 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103267989 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130001285 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090485274 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128284343 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101607394 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117593851 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088679008 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117460181 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129531817 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086460893 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114378858 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099148154 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115480826 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110784981 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138366447 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114573728 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099521014 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113540253 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088608094 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114470705 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111467997 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120760957 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087671395 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119270703 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090300673 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112758464 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086138819 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118471605 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110957263 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090834984 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.1156263 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089829297 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115291351 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105146652 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114631259 seconds)
  done (took 11.840716583 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091454365 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113678161 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09312747 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114177549 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090414845 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11480742 seconds)
  done (took 1.634918481 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11363153 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117816766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102071365 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121627471 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155837944 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102558422 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130207629 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123521924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106099332 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126783453 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128193692 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10373088 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136231323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11960026 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103124385 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120696797 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102758616 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124781128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12620188 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095130826 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137153782 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120246005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096212765 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132543184 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116824458 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096134759 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124721991 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102042813 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128261322 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121543721 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096092074 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117283356 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09505701 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123468241 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12959662 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095017717 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12156114 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117312832 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100213718 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117418626 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104467524 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123081367 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12614641 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093212699 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123544589 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119301035 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093603158 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125045607 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102106121 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120180231 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118454576 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095735534 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118624553 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093510205 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121646272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122055566 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093898246 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130006609 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0940183 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121875181 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118237553 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09188506 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123542757 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115856807 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104981909 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119019593 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094664589 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121414316 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120565769 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095765841 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119369547 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092361305 seconds)
  done (took 9.227080212 seconds)
done (took 34.126143633 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69430971 seconds)
  done (took 1.709987386 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.823328765 seconds)
  done (took 1.840303588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.13958552 seconds)
  done (took 18.183401689 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50319749 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.591474161 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.000115934 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178549521 seconds)
  done (took 3.291216264 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.975476693 seconds)
  done (took 2.011580155 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285015471 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231803089 seconds)
  done (took 1.538804415 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784803174 seconds)
  done (took 1.818142398 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.365927898 seconds)
  done (took 2.388530927 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329154761 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183036208 seconds)
  done (took 1.545191342 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548237484 seconds)
  done (took 1.581069942 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.997441043 seconds)
  done (took 8.034985192 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268862567 seconds)
  done (took 1.315747166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301848985 seconds)
  done (took 1.340456894 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.571408097 seconds)
  done (took 4.607132234 seconds)
done (took 52.234024795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099393271 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126482639 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102020907 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125029327 seconds)
  done (took 1.481988105 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101836922 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121930447 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099535339 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120978219 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125868928 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096179076 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123201786 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.09927405 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121247442 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094945533 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121389485 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118907054 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098995873 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122891336 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092970817 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125148929 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098627632 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121669845 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123754089 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095600573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119320093 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096510006 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125255735 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093269976 seconds)
  done (took 3.697338851 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100181552 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118103573 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096536253 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118090341 seconds)
  done (took 1.476245549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100658881 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142697686 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13798349 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100111929 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142664996 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13590085 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092711285 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116830034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093773221 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124426027 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089512901 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149385824 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137457416 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09821623 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128099963 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086718486 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118167842 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136619917 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098817754 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126603207 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091648196 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125933472 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089156089 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140241375 seconds)
  done (took 3.842861124 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169146544 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127501731 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138189885 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094398516 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159348491 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139644205 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087373323 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140844288 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08648852 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131564173 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116951376 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134277198 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128931891 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086350711 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114411922 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086517932 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129269237 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12835706 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091185807 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127344052 seconds)
  done (took 3.463636875 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098078237 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117500058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087904236 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116846801 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099147663 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121470879 seconds)
  done (took 1.686702652 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090807042 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113782207 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089903304 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113802018 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094721786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114110295 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088996797 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115378223 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089514135 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11731071 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089311933 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113848301 seconds)
  done (took 2.278034303 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498361635 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118582861 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118601711 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0896619 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12126293 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089059139 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129779113 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091014723 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14071236 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087991932 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116566452 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.088951167 seconds)
  done (took 2.734924304 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231348132 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126606698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285509287 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369910173 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157844789 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176370188 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281467269 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163883937 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223785865 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165331201 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201798679 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222880159 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151432838 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189956369 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137854959 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143341506 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204623736 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245521735 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153045806 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207333963 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226801592 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167615385 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178939847 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151139158 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137767667 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171136437 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092378417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130032874 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233123667 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174762096 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214511942 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162401705 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145643526 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208517677 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250941904 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220316964 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281680487 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137272439 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148302809 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168786216 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266310099 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13844481 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202101734 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154422035 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131835614 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216323809 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167590371 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175396815 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153070445 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137688486 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193735734 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238947757 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190378748 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138129107 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304746398 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15154962 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200910961 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193291562 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250542654 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199389051 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185509482 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120901179 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188210313 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221076768 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185417409 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173905638 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206937528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119918902 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226014183 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188121514 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164447064 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220903776 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186257784 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141298148 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169723946 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17249659 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170682344 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258400826 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210383592 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095659381 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167892294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150176611 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133667338 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193254082 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098310639 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239770351 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143987094 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135200693 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241286572 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160344401 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160849538 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200688994 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229552105 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147545923 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083081491 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153295959 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155366484 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191477584 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13985624 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1598712 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161191011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130315703 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183144389 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124527208 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183000093 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11769939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1740711 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182217892 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12682044 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159550877 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151021491 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124761543 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199659512 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198816602 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141674021 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105412946 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23705179 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176895893 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151381455 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176757953 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227343235 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117620222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149605587 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225956192 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21506932 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140779338 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228563357 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155647417 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108645755 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13207094 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181666695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15487127 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160726934 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134202756 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182796615 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231479384 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0982907 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138365354 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192053796 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134579014 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132179403 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162177962 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148259271 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110191988 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151114653 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153285852 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20837661 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180262486 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154526805 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165511109 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151934182 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2519978 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113967887 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152292086 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148283015 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119348568 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19293683 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196891595 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131724473 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230104076 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172821417 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203693317 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170763752 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134986665 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177046472 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129672824 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09190977 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220552498 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167414574 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161210267 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196414036 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227791427 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182601796 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182532045 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198423634 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174372525 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164421209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156087627 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111739939 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160289754 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169663947 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124669194 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143483983 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133668099 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120078579 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143025883 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134533974 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194723643 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196676785 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190693067 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162108025 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150050909 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181149513 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128406723 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174680855 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177871482 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147857045 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198748517 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220644874 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18540495 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143893192 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199579697 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121644464 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097483074 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14194016 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169565451 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134478497 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135851539 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162865677 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180068037 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18005728 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202216483 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211345277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172156097 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217513213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096302848 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16849962 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185675988 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17712094 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.19409501 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144398706 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149689308 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179832371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157501607 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25537726 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168067995 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175388144 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234462812 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122742269 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132455597 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152172988 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192388857 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153956647 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176572551 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148810412 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141951342 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161286474 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133732325 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159929208 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183721772 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161737383 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217421644 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148740825 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185948484 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126727215 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163437686 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158444311 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164716552 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081541388 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175902312 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233226347 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149060126 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168647586 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188470867 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131576167 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310896485 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244511562 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197613023 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138035871 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155378499 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159972396 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16379946 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172726371 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178271132 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159587206 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187690211 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159291122 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136564113 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112358356 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149858198 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150605441 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132119195 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148358928 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177500343 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138274555 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186532987 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163028669 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160051863 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172630992 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15065503 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143041802 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122175542 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24430425 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184286178 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239388288 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150543352 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179859377 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232206725 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09936793 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13248522 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104293161 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177840412 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137550234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22121639 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187776625 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234140418 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185511106 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193812764 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140190207 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091081384 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157389276 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200247689 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208534215 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154295062 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160099006 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229412303 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118982992 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132663935 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176895171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293938405 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147822964 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222015757 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081484833 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280082058 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129471618 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104380831 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164402425 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237060836 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135842546 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165088023 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19679057 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17047669 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165616226 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148990391 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189941134 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217059835 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230724782 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181571419 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133478872 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157017462 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177659728 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191020693 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157356575 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141653145 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230226932 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196352751 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196238076 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142477296 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168855781 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168871427 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158164652 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214283749 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107171715 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235243105 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105459771 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222234163 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152351188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144449728 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176569078 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189420315 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144487501 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18783057 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212963098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106674421 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133810687 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168798681 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208457036 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157007813 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100250287 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178714434 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126192402 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192583788 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259772267 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136551893 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155579941 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147693344 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107369342 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154882157 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158277729 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140943175 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165876161 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204857981 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135406306 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19157608 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232377584 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169842516 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17362242 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146199296 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69210926 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131965403 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195450346 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160814884 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232486288 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121638831 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201994438 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130078954 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19577975 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195669316 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162398064 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232450077 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191242195 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206147525 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10366017 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158024975 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163091679 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144102622 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152337432 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167078906 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160230825 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154559795 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177712239 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199382234 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106453359 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141149396 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198703186 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161483245 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210528861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179136315 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110757852 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173861384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218208574 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133334043 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181093068 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236039718 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114370211 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153527987 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135308183 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157040458 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261076683 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096957913 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234691966 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186269006 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160697065 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170898755 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146852447 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221746775 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158058705 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188688642 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148232891 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160753768 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156053617 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109358918 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130816619 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156818804 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169553118 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150286048 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159909266 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139834106 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222737336 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095350042 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145470412 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293023227 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22082908 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214225693 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136883323 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136423417 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162232292 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151396199 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177480911 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179183194 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136289432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107315796 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137149533 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159371065 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112567584 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158646166 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197094378 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166060028 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238601528 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135960644 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251591587 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141730383 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156875734 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087151332 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133495011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151926491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146970158 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159732305 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193566728 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268059521 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149240291 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133261042 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121473173 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127125062 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135652918 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166183315 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165025433 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178445401 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145796337 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080627568 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157928526 seconds)
  done (took 83.37899437 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164274735 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134155012 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149255691 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203907176 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178222456 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269316993 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211920585 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254240951 seconds)
  done (took 2.698705496 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093677276 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14850025 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15784914 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133244753 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091758025 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119524385 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347944495 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132311699 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117609877 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120435768 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175249181 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09363749 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556196241 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091395854 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119412711 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10950664 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092253636 seconds)
  done (took 3.830167139 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476874384 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.737484655 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.516436385 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096999748 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.191824541 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112234124 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.798453523 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201548133 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117140957 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492484752 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.780561826 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16177982 seconds)
  done (took 18.823186154 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.1151613 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136775462 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122216522 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152915898 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141115832 seconds)
  done (took 1.811740701 seconds)
done (took 132.233343455 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103688201 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40424982 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070726514 seconds)
  done (took 1.650236982 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107462074 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136675746 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108299377 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136133966 seconds)
  done (took 1.638757701 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098596411 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126778234 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109450793 seconds)
  done (took 1.480488087 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324560259 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189731952 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170470387 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105895394 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129023266 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103545163 seconds)
  done (took 1.485454196 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097143457 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12802568 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0979261 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130372326 seconds)
  done (took 1.602474123 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.0942827 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070638468 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100585506 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0744279 seconds)
  done (took 1.484179 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114213952 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132206779 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103741839 seconds)
  done (took 1.499046058 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128434599 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138818092 seconds)
  done (took 1.417331416 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105635139 seconds)
  done (took 1.251381778 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117060133 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169146054 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190820642 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16578052 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.236104557 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165820836 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14049197 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113823055 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132037765 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144668663 seconds)
  done (took 2.725762844 seconds)
done (took 18.165925441 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103493868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.517563999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411847883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116170537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747692275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379392904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033945678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146474937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16406382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093756375 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13931806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673961376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026312415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.473407696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982627098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377926832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676671418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121531043 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1213469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094358206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017303561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092153549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122853374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091895157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704789618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425285694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095492935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376690162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091753901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126319437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382036486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12334244 seconds)
  done (took 17.189822385 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095438506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173029298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097440416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137723281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122911181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09337546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123876944 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093362291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179188276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122398541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109445896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122077346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124528051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095567964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142443954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09159622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12571891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091667486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121513847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120055659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111723767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120498751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094134732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12132918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092814575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135314341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092995174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121798903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120218631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098559568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128273303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093896198 seconds)
  done (took 4.871608335 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140334944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182179875 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128215405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125948629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168982645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124768972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198295653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116205036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18161258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124152336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138680832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092373954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157370626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09370132 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1441074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120776803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095795228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122746715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092994749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12327624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139216889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094159769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122551496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092847513 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123304357 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107322817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124875053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120182813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093873743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126214372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099295536 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124091283 seconds)
  done (took 5.203737474 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097453703 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125161983 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108997038 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138208072 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093571736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126048151 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096479574 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124808032 seconds)
  done (took 2.06976937 seconds)
done (took 30.481759007 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110694668 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127086546 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106027371 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134864736 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101155557 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13180446 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091300792 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134919425 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133097946 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102884544 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136512828 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091517848 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122755306 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091721584 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135294209 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097115854 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133403783 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100453794 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133948991 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131832723 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095302772 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132689675 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102729866 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133230749 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103894251 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133684445 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136122117 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09989957 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122972833 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094091496 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124438683 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103799063 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12455197 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104883221 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127255656 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097288313 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123732786 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093729051 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133713886 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131241768 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100126376 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132821705 seconds)
  done (took 6.052660734 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10818737 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139115122 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104940544 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080174047 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117772462 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079777634 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137898338 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078531846 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.10974966 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107747471 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073297789 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107169767 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079475117 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100876729 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078112854 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074549352 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108079166 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075694622 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075925255 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105116486 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079627513 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072322905 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108700371 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078667483 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074307531 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110202447 seconds)
  done (took 3.624677566 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099854761 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135074141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112839108 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182968127 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159563136 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098973714 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132678762 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138490811 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109107593 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119810208 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09671727 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14859394 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109450219 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129497829 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090753497 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137593328 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134921489 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094566456 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127260237 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112569684 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138732403 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101313145 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143283222 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131815115 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092103046 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122293847 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096058236 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135038775 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096382708 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131387512 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095762232 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124873478 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122007694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105916389 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126324169 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093367199 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141565519 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101717836 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131445224 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091181154 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126047277 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121357843 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114661863 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1688103 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09094959 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129702007 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098488537 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133271783 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120751507 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110943045 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130634906 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091039085 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125850284 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092032884 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121888001 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10584708 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124436375 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093588329 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1315738 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123130372 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105751426 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124511764 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10829857 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121790263 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099600778 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121401413 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092025625 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12149854 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142981606 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094304641 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162606645 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09307039 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123930196 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100009513 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129851718 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126632352 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093350966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136557438 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102331607 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125232724 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102603119 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12675431 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094427016 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141627183 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093897249 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124941209 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120544636 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100561188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123668388 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094831719 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136219993 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092015182 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12478896 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109509718 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122327556 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092728032 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131632483 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125260282 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092270797 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135286738 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097107841 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123223114 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101079406 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122603909 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093938227 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133008098 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126359059 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092083422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126782224 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09879333 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123620986 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093413999 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126011737 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094276178 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132392968 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097939344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127672002 seconds)
  done (took 14.839811701 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227759383 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216004296 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204249408 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29424849 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135617205 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113065544 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20935741 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155498151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123918529 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15854306 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173469064 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.190655535 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168168444 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.17924708 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170067892 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092318028 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142851446 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163248087 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213155413 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25653131 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144448267 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.09942068 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160299621 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159766713 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137199235 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131970758 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11084432 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136578002 seconds)
  done (took 5.84637306 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109236507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156023394 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096995282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14511464 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148981613 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092566181 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128562042 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093042399 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135774576 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134983807 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092129522 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129768352 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098113273 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132310087 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122033452 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103861731 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131167567 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094086096 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125563655 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097345066 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129835289 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09996644 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127525995 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089856143 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13274183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120587781 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087032241 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141995571 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091288662 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144811781 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120392814 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099572048 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132538504 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093140674 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122651886 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094748832 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.1245541 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094582074 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124767534 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090441955 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122548166 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07709612 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121781176 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10529802 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130248223 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078705846 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130249941 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12680638 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095728982 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119299877 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096840554 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125042512 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096931691 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129413995 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098951408 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123880721 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096984896 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115736083 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099528888 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12461181 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08461599 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120411791 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098924822 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11711341 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101712733 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127432167 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091209606 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125087364 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097118852 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129269117 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095822092 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126586793 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090417825 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126214695 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095239009 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128074375 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094945915 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122810465 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091859198 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124079586 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074406731 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124376934 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073451134 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126581477 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091796324 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122477983 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095056051 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130897684 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137921558 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095029815 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131866238 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094261973 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122858037 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095575623 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113351656 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096937458 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139097629 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140345315 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093522013 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120875892 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1067285 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126576232 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093034685 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105623398 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100556336 seconds)
  done (took 12.97437193 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128104888 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153763487 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094137774 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143483671 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155883811 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15683114 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101128996 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.1300337 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095268564 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142255334 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092963763 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13283967 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096799879 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138232245 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155850781 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103620029 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12542063 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106762419 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132617801 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16908319 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111501358 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143003231 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107483221 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125059201 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097266705 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140813867 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161250236 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106763451 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137939791 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141319628 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108254409 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161034643 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112222921 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128906511 seconds)
  done (took 5.535850365 seconds)
done (took 50.032905221 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.288266485 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.491685165 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.257856694 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.283749472 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.28338651 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.275612531 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.272004421 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.258272802 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.502819329 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.260575725 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.51416648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.928241166 seconds)
done (took 59.801099888 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.263930778 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.395850391 seconds)
    (2/2) benchmarking "String"...
    done (took 1.525192077 seconds)
  done (took 4.106973526 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.686458597 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.214933021 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.523766764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.262088659 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.261991982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.550439159 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.055404593 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.637311518 seconds)
  done (took 28.690878538 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.271088704 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.352716017 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.290424462 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.270794108 seconds)
  done (took 6.372086902 seconds)
done (took 49.304625975 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.248945517 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.290135597 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.276312899 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.261461836 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.37956249 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.286376034 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.622446379 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.29858877 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.28282739 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.24442343 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.292254616 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.27294163 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.26228175 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.640085335 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.267543303 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.263032557 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.315317809 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.762631654 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.678904711 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.274967432 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.279600533 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.2874118 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.265981464 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.266613888 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.282921503 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.272619063 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.264652544 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.290664129 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.95416382 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.266914944 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286519696 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.833871252 seconds)
  done (took 192.960346902 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.263655471 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.201558065 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.323254551 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.312904196 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.746591848 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.476549018 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.412778185 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.839347481 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.288758662 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.297536799 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.420127085 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.265403925 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.49055742 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.28237767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.294131747 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.267578745 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.519908675 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507832613 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.317802502 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.451419937 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.290333318 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.368015306 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.289761148 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.402220082 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.312614171 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.367965793 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.279157753 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.276623804 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.460871814 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.460472418 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.294951623 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.324936076 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.916903993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.126237017 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.287276051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.270988162 seconds)
  done (took 151.898495055 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.331131545 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.265745265 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.265862156 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265946828 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.300883982 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.266882474 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.853966591 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854177398 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.767995197 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.623294365 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.6720897 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.552126741 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.267217104 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363657502 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.280612477 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.268183473 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.282329892 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.312268911 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.268055102 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267370179 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867155074 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.284085901 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.308031603 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.448282041 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.286599871 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301682711 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.660567303 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267637314 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300906868 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.603928229 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.321616455 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267954689 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.664247238 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.109451542 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383106325 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.269732666 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302503365 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.269409143 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.550951863 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268728405 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268344709 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.267448155 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.271922467 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940850367 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.268463511 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.856788644 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.269744509 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24391948 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.267647952 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269362354 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.632245446 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.958608423 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.289293735 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.268619886 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.271603704 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.26991688 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.270263689 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.303765501 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.596392625 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.364108831 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.289437908 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.273167916 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304235984 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.269733355 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.269701576 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.274429418 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.269889342 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.743873882 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.351416472 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.485310862 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866209402 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275489129 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.271209852 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36970746 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.392808744 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.271448027 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.270020965 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270702459 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.270222015 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.382357555 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.271207618 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.707127173 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.451833164 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290763826 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.676848863 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.369331189 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271508778 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682913356 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.270178044 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.270447219 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.271387915 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.051714828 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370976061 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.272022729 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.271088117 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272661868 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.710193123 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861103918 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.56143065 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.276330863 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.664672562 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.271533446 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.725905531 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.853949904 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.959043611 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.27285326 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386014122 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.45293841 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.291453976 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272594215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.679539671 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.272711653 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331991458 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.272716536 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.67192739 seconds)
  done (took 374.813343208 seconds)
done (took 722.190992437 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.948266692 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.938359689 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.055391366 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.93965737 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.892353976 seconds)
  done (took 10.970660587 seconds)
done (took 12.167850754 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472526741 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.473058301 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339207316 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.475557213 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303511111 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.49293534 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.452520065 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.292908267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380696462 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.360839605 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38016449 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.330898873 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30274744 seconds)
  done (took 19.253648881 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612279602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.603939773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336397425 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.609719984 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.312448041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608155515 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.480206321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.511301114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.495927294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309089409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.287880204 seconds)
  done (took 17.365261982 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.609842344 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.611845562 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.340747152 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.630849425 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314811514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.615462273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.484061836 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.504551782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.500774106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309962452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.287856295 seconds)
  done (took 17.408794788 seconds)
done (took 55.224793904 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.28426932 seconds)
  done (took 2.482287921 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.319979509 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.48700202 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.30314529 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.287306404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.28550643 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.285384066 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.289385344 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.28558558 seconds)
  done (took 11.742246497 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.28340824 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.283232021 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.282416238 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.284033262 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.28051153 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.284407254 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.280970023 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.281376829 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.283994085 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.280629614 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.28485058 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.282547929 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.2807541 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.284060442 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.285276833 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.284558788 seconds)
  done (took 21.727158667 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.28516253 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.282227691 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.281995359 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.28257109 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.281702009 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.281989181 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.282634409 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.282312227 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.282308719 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.283036595 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.283444812 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.282249865 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.282386093 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.28181109 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.282960585 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.283283891 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.282304473 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.282927914 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.287369291 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.283407938 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.282898346 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.283689848 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.28340517 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.284132632 seconds)
  done (took 31.995183742 seconds)
done (took 69.146775999 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.564596544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.012417166 seconds)
  done (took 9.777852669 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.285699032 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.284800497 seconds)
  done (took 3.77207285 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.285634672 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.285583275 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.286007926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.286411607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.285720422 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.286563957 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.28725215 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.285744978 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.285990095 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.284438997 seconds)
  done (took 14.061871316 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.287322856 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.28705923 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.284509271 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.286142896 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.288488338 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.285251042 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.286821361 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.286377366 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.286405496 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.28449046 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.286784824 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.28466338 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.286632367 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.285315671 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.286588784 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.28556816 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.284995197 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.285648339 seconds)
  done (took 24.352489397 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.288310329 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.287042335 seconds)
  done (took 3.779103148 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.286618313 seconds)
    (2/7) benchmarking "second"...
    done (took 1.285118112 seconds)
    (3/7) benchmarking "month"...
    done (took 1.285629356 seconds)
    (4/7) benchmarking "year"...
    done (took 1.284929303 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.285458347 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.285388285 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.28567958 seconds)
  done (took 10.202468465 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.288911395 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.461102581 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.543365597 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.896198174 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.289493873 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.292353765 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.131373122 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.291166929 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.294650644 seconds)
  done (took 14.692994266 seconds)
done (took 81.840978548 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.3056455 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.299294005 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.495225112 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.302999458 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.317987241 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.580932153 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.283454638 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.413386019 seconds)
done (took 38.204870802 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.287936553 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.266412087 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.136148428 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.28491218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.341207869 seconds)
  done (took 19.233660572 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.365407804 seconds)
    (2/2) benchmarking "read"...
    done (took 1.625437414 seconds)
  done (took 5.195544733 seconds)
done (took 31.922767722 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290049901 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.286952489 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.29090214 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.28686153 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.289717028 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.287554955 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.28787387 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.290337363 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.291215876 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.289879031 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.29091578 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.28949475 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289195304 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28738476 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287396131 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290575044 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.288306264 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.290745045 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.288254053 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287673561 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288379493 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291603092 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.288616078 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.288691008 seconds)
  done (took 32.145994354 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.291873553 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.289761195 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.290915244 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.293410893 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.287960368 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.292206425 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.291916353 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.288392449 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.291752926 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.290820692 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288851492 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.288802651 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.291901825 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.288690923 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291882577 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.288856794 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.292180371 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289670315 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292883542 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.289814869 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.291968899 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289027178 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.289394172 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29130631 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.28990951 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28957221 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.292861113 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.291333622 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292535452 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.290924368 seconds)
  done (took 39.928946089 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.297811318 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.300446254 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.291456303 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.293045363 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.292830643 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.29309601 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.293663681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.293385811 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.293346085 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.294788677 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.294387109 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.293173065 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.294105401 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.294511789 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.293794182 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.293552111 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.294325498 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.294599773 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.294320435 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.294115948 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.294220359 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.294509851 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.29469928 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.294526478 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.294239389 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.293974115 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.294694244 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.294738645 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.295364678 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.294802458 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.295149835 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.294423582 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.294942842 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.294024205 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.296440709 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.294619628 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.300149828 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.303074615 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.294165398 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.294975058 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.295482418 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.294572562 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.296067127 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.295718856 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.295523257 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.295537899 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.295150116 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.29502465 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.294995805 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.296599222 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.296578634 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.295118122 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.295792859 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.295601187 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.296071195 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.295764595 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.296228596 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.296942042 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.297191185 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.296196376 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.295823111 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.296421837 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.297086817 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.29619264 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.297052191 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.296761681 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.296855589 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.29664435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.296923408 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.296924781 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.297376551 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.296953362 seconds)
  done (took 94.480105587 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.29749331 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294690952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294378742 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.295047804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294472603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297005911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294548037 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296247409 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295412689 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.298462203 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298403806 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29574665 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295119082 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297753049 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297977283 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295515019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297732875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294485361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.298493377 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298590721 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298583039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296005634 seconds)
  done (took 29.735122524 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300808655 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302539929 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.295758164 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298992302 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295467853 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298916076 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299682113 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299905119 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298926773 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296461281 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295736296 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297714024 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296938337 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296174646 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297703951 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298997013 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300484223 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298753059 seconds)
  done (took 24.584495333 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.297531915 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.296524934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.299318681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.297010515 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.297649248 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.299974265 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297120416 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.298668992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.298726776 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.298028226 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.301153048 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299841478 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.300177313 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297726247 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300199323 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.297113369 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.299984296 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298722363 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300542401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299022304 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.29952476 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30076672 seconds)
  done (took 29.790888396 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301104453 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301844398 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298281961 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298948371 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298925517 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.300576317 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.302069769 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.299267659 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.302006604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.300612268 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299025967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301322798 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.301206634 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299673842 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.298614236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299075588 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302613229 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300675209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30293088 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299224956 seconds)
  done (took 27.224472955 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303743113 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303259638 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303665639 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304232118 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304390923 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304401673 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304862225 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304450081 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30448059 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304611261 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30565173 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305910461 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3047249 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305920805 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304468178 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305503797 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304633649 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305227403 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304837271 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305044089 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306521989 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305686095 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304710642 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306441932 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305937219 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305906251 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306707966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304912767 seconds)
  done (took 37.758311221 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3053079 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305574539 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.302313819 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.301829275 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.303188131 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.302272106 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.302209206 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.302967361 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306346144 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302164222 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.305660233 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.305109196 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305737274 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.306864378 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304317167 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.304993111 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304474786 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.304608427 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303319734 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302492503 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.305602002 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305768379 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.305715053 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30286034 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303410124 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.306347484 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303871306 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304231241 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306539159 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303366502 seconds)
  done (took 40.349395481 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.324470631 seconds)
    (2/2) benchmarking "in"...
    done (took 1.324635047 seconds)
  done (took 3.870176815 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.304199353 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306155013 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.306794075 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304659236 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.304873243 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.307130106 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.306692428 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304924687 seconds)
  done (took 11.666461252 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.30622583 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.308159023 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.306805223 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.30788594 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.308336174 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.307677308 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.31478536 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.328334083 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.307874714 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.3085637 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.315022895 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.314795091 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.309914938 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.307150102 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.306782836 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.309529053 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.308827263 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.30938824 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.308893092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.308149954 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309016613 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.310935889 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.310575811 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305537997 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.309633259 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.318824257 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.33286914 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.30859228 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307573825 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.311971671 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.308814676 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.306958454 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.309134386 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.309678008 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.309803413 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.315699536 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317331086 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329704366 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.314226484 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331812416 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309779784 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.306828941 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.310543609 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.309881674 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311642393 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.310136903 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.311182156 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.307729324 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.310356953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.31376927 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.315264305 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.309997791 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.308339255 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.312152066 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.311000097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.315937263 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.332833479 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.314726078 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.320700632 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.320326199 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343989848 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.336704289 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312033066 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.311353704 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.321376373 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.335713348 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318542317 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.329792917 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.308481547 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.312596187 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.318093238 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.346168099 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.338464009 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.31154648 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312409188 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.312528727 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311621426 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31225245 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319857749 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.335245525 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.311987604 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313715264 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322211905 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334659735 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.310643537 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.312861503 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.313106511 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.31381779 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.314481914 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321856203 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.334825484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.312998433 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.311486524 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.314089414 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.315490401 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.313967175 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.312290448 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31414565 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.310624977 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.313035094 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314547515 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316473981 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.322637161 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314152885 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314755519 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.320216882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.335320539 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313386235 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.318453726 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.314562176 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314211276 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.316090403 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.319560597 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.311917981 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317126338 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.321615328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.315070853 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.315707477 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.314740432 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.314559433 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.324851688 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.339973745 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.3149285 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.314432738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.319848357 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.327275499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315681387 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.317668309 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.316028955 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.312670062 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.313017064 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.315819658 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.314354418 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.315706609 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316145702 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315667978 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.312592126 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.316448457 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.31525531 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.316518192 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.316859548 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.315726846 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.31640854 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.317746901 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.315887976 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.316773037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.322641819 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.336158833 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.317494374 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.315791642 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.313057708 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317085173 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.316558341 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.317145201 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.317169172 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316573115 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.316415439 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.316735291 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317061375 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.316883022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.317462458 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.317226074 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321666214 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.318440693 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.320763004 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.317600026 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.315273346 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.317994163 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.317211741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.317485807 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.317840892 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.317005184 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.321699188 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.32635566 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.319046086 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.319011524 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.321074079 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318880718 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319025872 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.318767708 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.322097525 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.32626914 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.320278117 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.324432404 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.338533756 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.321340058 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.32028896 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.319289029 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.318190656 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.31969725 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.321209609 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.326990228 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330463839 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345178532 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.320883557 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.323656878 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.319980342 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.323884177 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.322488554 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.319793743 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.320068864 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.319414507 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319407658 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320075992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.321195945 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.320769932 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.31825543 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.320027003 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.320260915 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.32137001 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319411283 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.320124829 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32037693 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.317492583 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320752805 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.32057764 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.319765912 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.31800681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.320116737 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.31969188 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.320549582 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.321254577 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.327176936 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.318664736 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322407007 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.323269005 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.321258215 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.321058132 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.322053939 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322510629 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.320720152 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328970365 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.342177252 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.322179054 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.328506404 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.342393443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.321002296 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.324823442 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.322421463 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.320613926 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.325819502 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.33069015 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.322472343 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.32416834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.323176312 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322638668 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322231998 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.327415037 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.341030515 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.321548537 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323116102 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.324098777 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.320219701 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.323407207 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.322055899 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.323651317 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324364326 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324141111 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.324152924 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323714509 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.323889056 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.32398142 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.324856279 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.327820004 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.332486636 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.328578118 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.322090489 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.324211969 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.325815168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.328170578 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.323584596 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.325030868 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.324237721 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.336872199 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.351091294 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330940921 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.345528402 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.324453459 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329342309 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.346883239 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.328299244 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324066518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325019222 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.325079287 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.324452303 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.322476893 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325785898 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.325121453 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.327794173 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.327282282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.330923195 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.326063277 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.324385309 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.326647654 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.326646441 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.326382201 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.325944544 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.325784358 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.328460924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.32683161 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.324662302 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.325944261 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331762811 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348553003 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.326692787 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.326466429 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.326595706 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.326315659 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.328010112 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.328174439 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.329516921 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.334409116 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.330682068 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.336880498 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.330185511 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336626572 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.327538268 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.331314684 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.335268054 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.325397599 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.326114156 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.327158488 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.329148138 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.336697047 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.349671515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.329724602 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.333495896 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.330122564 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.330501214 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.328907437 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.328585748 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329353928 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.328732732 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335667251 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.349235224 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.331169981 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.329496538 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.325976811 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.32945957 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.329618633 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.328471761 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332335799 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.328952363 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.330117665 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.32851194 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.328960628 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.329532138 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.328693098 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.32909044 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.327305847 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.329864656 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.336642455 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.353115693 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334689012 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.330261249 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.335752186 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.351280669 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.337455207 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.352058198 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.329983032 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.33055611 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.330196031 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.33072827 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.329229818 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.329350227 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.329869604 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.331352508 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.333832933 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.330241514 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.33221878 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.331246472 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.331759511 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.330219879 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340308354 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353157161 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.332311808 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335442253 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.32798683 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.331394712 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.335912748 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.331573358 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.33021271 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.333632323 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341413571 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339426596 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.330880197 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.331368139 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331630778 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331231868 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.331116775 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.332266343 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.331817188 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.331650087 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.331990626 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.332654945 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.335089644 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.331711477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.331609265 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333217672 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.334229284 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.342119285 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.354712736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.332970629 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.333614686 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.333651555 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.332338742 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.332312034 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.333279559 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333102124 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332166136 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.33481396 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.339728679 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.339651558 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.334990565 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.332045968 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.333200241 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.33380436 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.333628046 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334754686 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.335270747 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334444294 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.334556187 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.334821217 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.334524792 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.332603742 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.334701093 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.334162583 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334484059 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336869702 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.341774909 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333582632 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.331691053 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.333685955 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335007775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.333529051 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.334016651 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.341438815 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358834405 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.345917248 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.344677661 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.339356638 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.336223792 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.337826301 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.342615132 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.334504384 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.334677773 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.335380609 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.336149558 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.335345137 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.33909001 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335499844 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.340716453 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.356272461 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.335036137 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.343776361 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.357119638 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33694124 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.338609691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.339735128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.336307088 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.333568669 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.336984147 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.335227995 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.343223965 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.358590477 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.337165234 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.337416269 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.335626037 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.338815272 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341269475 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337299644 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.337155005 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.333855748 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.337026284 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33770142 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.337997111 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.335795687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.337061509 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.337296093 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.341190359 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.345740209 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.335080368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338335006 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.338210405 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.337322559 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339118332 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338924977 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.335283944 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.335810199 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.336859983 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338267497 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.337428345 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.339092869 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.337420996 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.339262563 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.340823296 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337785949 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341262179 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.34856173 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.346326944 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.336455391 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.338092856 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.337994975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.340009227 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339498376 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.339624142 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338671179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.339149139 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.340127789 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.338722098 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.341216898 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.340862647 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354753113 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.360345595 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33774567 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.339020111 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341530667 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.339330803 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.337094321 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.33877002 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.342113552 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.343207666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.348013733 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.339687628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345407688 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362176888 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.340850041 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.344971732 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.34297939 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.346940341 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.340853667 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341034151 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.34006345 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.345787253 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.356320135 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339951632 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.350830554 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369883565 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.362653285 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.342229809 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.340830909 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34045018 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341166439 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.342850987 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.342126341 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.342769562 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342164332 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.341365451 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.343426807 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347722652 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.342985081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.342827872 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.341550895 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.340890069 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.34288169 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.339083395 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.343178619 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.342229133 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.342294667 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.342914144 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.34254357 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.343128375 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354037358 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.369326331 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.343217543 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.343116393 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.340914303 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.34532149 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.34640971 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354680519 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.350013521 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.342510116 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.343128543 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.34446491 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342907877 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.342596745 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.343083355 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.343085714 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342963819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.341469669 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.353565241 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370619874 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.348682342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.343434129 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344780676 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.343846032 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.344474391 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.343674168 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344507089 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.346031409 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.347232249 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.349930364 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.344948899 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.343900685 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.348020275 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.352576409 seconds)
  done (took 793.344131198 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.342407092 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342147736 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.342017121 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.341697673 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342074776 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3411268 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342130527 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342148909 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.341185788 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.342415598 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.342292753 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342398369 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34208156 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344120572 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343253324 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.341927552 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343282486 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343798665 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343510078 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342395593 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343752913 seconds)
  done (took 29.45025762 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.347317796 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.343257822 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.343570779 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346485107 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343616401 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.346091906 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.344070336 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346134876 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347528347 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343555067 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.34626329 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346519952 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.344404366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.343583393 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344188677 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346144278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.347512476 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344647895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.348555528 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.345736989 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346171609 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.345607207 seconds)
  done (took 30.860094717 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.347803028 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.348651334 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.347555662 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.345283425 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.347535051 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.344884526 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.346622546 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.347448388 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.34718037 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.348902705 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.346550491 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.3489756 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.354175843 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.352798615 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.349347814 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.347424073 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.492283697 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.348236691 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.349468462 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.348225059 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.345885174 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.353430002 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.368086166 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.345740038 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.348616009 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.348016222 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.348925986 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.348637971 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.34995207 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.350542707 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.353408602 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.348353142 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.348680758 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.349256789 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.348143614 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.350717026 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.352823898 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.35006473 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.347346817 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.348973297 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.359550575 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.370617288 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.351753071 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.355608543 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.371068163 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.350008662 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.354006302 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.357808874 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.348463843 seconds)
  done (took 67.594286001 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.352237815 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.349741269 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.349065634 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.351073156 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.351535641 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.350087618 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.35147798 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.350551965 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.347791622 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.347441033 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.35181113 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.349504452 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.34924794 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.351055285 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.351746674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.347891493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.348826502 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.350184724 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.349053981 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.350459996 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.349014256 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.351812071 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.352525345 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.350092723 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352071163 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.350616013 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348846533 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.351579977 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.350404663 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.349458899 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.351468419 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352131517 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.35302163 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.350584989 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.350074649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.351942675 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.353103286 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.352193289 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.354224027 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.34973872 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.352985224 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.351723146 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.352501628 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.353866845 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.351207701 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.350403793 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.351757333 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.350622978 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.350527146 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.352594928 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.353497216 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.351203763 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.355622157 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.350796106 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.354245828 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.35396096 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.350996551 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.351082327 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.354364 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.351367308 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351336839 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.353700743 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.351691402 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.354503182 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.354597001 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.352589171 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.352086481 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.354365434 seconds)
  done (took 93.160237136 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354063854 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.354699518 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354752652 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354457707 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35478957 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.354943046 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.356187401 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.356300194 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.355386133 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.356090171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355913626 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.355769844 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.354221384 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.355373371 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.355132412 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354671093 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.354916022 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356584582 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355552393 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354700191 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.356921825 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.355555662 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.355917829 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.355120709 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.356514824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.356482918 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355310794 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.355389137 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355112658 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.356592537 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355434063 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.356469411 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.355365667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.355685002 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.356079131 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.355136345 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.355133803 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355992995 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.355239992 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.35618947 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.356203173 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356095527 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355731452 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.356796492 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355425477 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.356451604 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.356944159 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.358286108 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.356499004 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356717038 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.357624159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355943739 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357137216 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.356749473 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.355866572 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.355213474 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355078234 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.356391961 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356535605 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.356772307 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.356449906 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.356575347 seconds)
  done (took 85.329889481 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353617554 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353628223 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.351179102 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.350621821 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.353590233 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.350856747 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.35442653 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.353703051 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3543673 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.354205716 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355208871 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352707616 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351951091 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353906041 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349341695 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348707962 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34826562 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.347191273 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351750533 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349100821 seconds)
  done (took 28.304298856 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.349988029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.349963769 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3480901 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348150021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.35210071 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348366782 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.351102749 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35203803 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348905214 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350826531 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350757481 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351800703 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348557454 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348176901 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.351030295 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.349225658 seconds)
  done (took 22.862284706 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.348633384 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.350748231 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.349495724 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.349762902 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.348881316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.349578043 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.350540337 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.346897345 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.347677187 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.350692011 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.350847649 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.350355298 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.350012562 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.350765811 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.347778193 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.349252379 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.347464065 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.347482645 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.350578572 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.350119588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.349044415 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.347094164 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.350768195 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.35073705 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.347840532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.348437107 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.348472029 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.34785471 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.349393765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.350807479 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.348129422 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.347704122 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.349513778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.347652626 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.350697745 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.349069173 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.350144559 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.351550971 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.35042278 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.35115537 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.351347186 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.348885088 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.352064395 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.351800532 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.348861804 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.350857522 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.348535819 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.349658171 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.349776724 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.348674452 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.350549217 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.351229867 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.352344024 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.353311287 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.352370718 seconds)
  done (took 75.49717266 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353269484 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352986591 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.349816808 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.352429747 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.352541924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351638988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352849813 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.351677961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351509436 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.35312078 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.351390088 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.354921901 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351450257 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.353617957 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.352449778 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354625817 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.350723545 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.351972475 seconds)
  done (took 25.607115475 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.353197 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352010558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.353787982 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.35106259 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.351341451 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354146238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351288954 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.354182942 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353302502 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.351610702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351558693 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.354060653 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355283391 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.353769645 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352293895 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352381835 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.354505532 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354921293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.351989432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351765156 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354507028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353999235 seconds)
  done (took 31.032409364 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.353912109 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.35429405 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.353380314 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.371215238 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.373090948 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.3781038 seconds)
  done (took 9.449298838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361660126 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354300004 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352866011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356644533 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354677599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352728003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352265814 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353038628 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354730837 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354066688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352889782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356115151 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355606992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35261261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354891147 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356294332 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353429471 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352453707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354424713 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3557417 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353299641 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356677241 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354540443 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353967718 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353428424 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354129965 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356505933 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35449739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354746631 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356878896 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356899617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355357474 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355987081 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35520452 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359376679 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357589308 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354214379 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357105945 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358019042 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35472162 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.356922257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35716786 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357714414 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355072291 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356715935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355654133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355529261 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355101184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355506217 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358543777 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359762373 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355480698 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356935684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359320364 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358260945 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359173468 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357281715 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355493461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359700517 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356141515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356196588 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357880375 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356014764 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356053078 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35855862 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354971925 seconds)
  done (took 90.776771184 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3572057 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.356625985 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356432442 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357125608 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358998721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355692002 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357179476 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356488801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356607708 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356913931 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359413987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357466169 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355826265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356862038 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359118273 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356029246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356939163 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357423801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356957362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359871198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357972285 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35729055 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357005142 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357481025 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357616563 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3605546 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356708358 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356602925 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357920305 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358033933 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356947838 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35748776 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356531179 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.358425493 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357275408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357548796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357428061 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35830435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357746401 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36043197 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359566452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359853325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357073447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355970767 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357590567 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358064005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35804368 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357790418 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358825761 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35721596 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356156538 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357675163 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356977391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357996289 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35736421 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358267302 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356833184 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357115531 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357173789 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360925366 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356987446 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356921354 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361437523 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357284264 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356119659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35831116 seconds)
  done (took 90.876240346 seconds)
done (took 1846.886153235 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.423182094 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.385927174 seconds)
  done (took 14.077744997 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.521479981 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.475817022 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.358818485 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.393607692 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.357401876 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.36634182 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.372533977 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.359652406 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.358465771 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.358010845 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.358306443 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.547359928 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.406279731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.359551246 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.35840048 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.453051379 seconds)
  done (took 43.67787165 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.387641322 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.364530855 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.483642806 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.382673055 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.387735897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.562934419 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.42217201 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.364673266 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.544711969 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.405898395 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.00355685 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.388427283 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.364092876 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.53284489 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.384006524 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.560237298 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.628396684 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.006851627 seconds)
  done (took 31.446427581 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851042067 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.363875565 seconds)
  done (took 9.486820916 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.384211072 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.362932617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.364509465 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.361391855 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.353596646 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.354607994 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.36320743 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.357558117 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.287282559 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.501926581 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.365700501 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.372117605 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.382546052 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.364694456 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.360980996 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.400202974 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.516935404 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.362504855 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.360201646 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.36891526 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.362366824 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.487544648 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.40812005 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.361186079 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.499821634 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.276321427 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.372336108 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.369254105 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.498683298 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.362017585 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.36400796 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.363021694 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.364989085 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.979016314 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.835701242 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.374709381 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.389211549 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.372179756 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.360314396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.553465948 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.367077261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.368516545 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.355652685 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.84790949 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.494552979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.483856207 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.69650558 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.387570623 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.365557081 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.425433872 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.363179576 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.364697671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.393948774 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.129687571 seconds)
  done (took 113.819187187 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.378021111 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.755345477 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527467078 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.380216254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.105932642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.046932302 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.374412119 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.660219323 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.416059823 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.355199263 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.656559699 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886226747 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.387637212 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.361400955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851353848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.432201664 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357726313 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.226646161 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.373805244 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.360038351 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857942193 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357710647 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.355796054 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.473938039 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.397132296 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822177411 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.773844449 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.813675287 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.377746961 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.355754083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835940383 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.379404575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.386782172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.357445697 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.623047372 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.722280971 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.711821169 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.378266951 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355596385 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.356363042 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.382858975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813497402 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723352992 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.375665706 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.357516688 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819862372 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.372917369 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.359329004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.361285691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.567356421 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.043532109 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.357289076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.748133297 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.357162723 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.652268189 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.430848415 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361764724 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847746265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.374803659 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.429275387 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.377247899 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.356803299 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.364877007 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.360402797 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.359738834 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712688477 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.745572413 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.360547453 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711337581 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847940521 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.375512434 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.900278258 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.21958947 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.366002388 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.412665494 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.357825439 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.965770255 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.861719373 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.398815556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.357785474 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699263388 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.379940978 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.64172104 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.375835397 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.359526061 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882357139 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.364526179 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.362486309 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.371511151 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.358541667 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.121005771 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.361359446 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.651090343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.378742279 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.360046426 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.359166309 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.407393281 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.359277913 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.359130355 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.364126342 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905053041 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.387419769 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.330633949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.378409895 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.360775266 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.376204033 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.363055152 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.36216983 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588628322 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.811372479 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.383678084 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363237894 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.363907664 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.367655506 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501094197 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.366742889 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.674968354 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.37807279 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.360985112 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.360128683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.044306277 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414907305 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.361893471 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.381496736 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.279226603 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.567864308 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.381114869 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.380537228 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.362269041 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.379455555 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.640471663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.381852018 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.441056165 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.364583842 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08244993 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.4202045 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.377034139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.709513206 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.373210798 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.247777703 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.38693226 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.361655619 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652169992 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.633199595 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.638164114 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.364897607 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.382915488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058013801 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.384178227 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511992029 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.383091777 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350804154 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562487868 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.514353182 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.365110958 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.967604097 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.363526764 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585809471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.363809181 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.664795978 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866100895 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.382315531 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.365740515 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081448256 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.068362059 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.106871811 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.36655093 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.642686574 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.335366615 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.846316066 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.364416523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.363636586 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.959436811 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.367693893 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.371757164 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.365600884 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.364128851 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.433164216 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.538749648 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.523193681 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.370669777 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823459686 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.424883339 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.365339282 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.371959575 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.368548576 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.711475077 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.39495445 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.365186573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.367331241 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.366321827 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.37484759 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844889979 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.25574668 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.365513638 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519705371 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01240175 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.383804571 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.366063382 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.977450525 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.593030095 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918406474 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.429678116 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.682739026 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.386058933 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.405888434 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.042041771 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.456992185 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887762966 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.386196715 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.367810882 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.974765894 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.382811208 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.437722477 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.368109953 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.367597034 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912047641 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.384855373 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.369372444 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.627170675 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.387319279 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626411041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.366392688 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.384574989 seconds)
  done (took 1117.494153719 seconds)
done (took 1331.273806492 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.368052762 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.367552389 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.354401098 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.375254131 seconds)
  done (took 26.748400174 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.378737171 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.375217016 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.375722568 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.375632753 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.377288253 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.37615161 seconds)
  done (took 9.543094639 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.399784073 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.375390605 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.37678441 seconds)
  done (took 19.43619839 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.586886108 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.719398443 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.749465256 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.793391546 seconds)
  done (took 11.134746835 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.376623654 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.376810864 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.376916749 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.377800873 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.380455227 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.381564158 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.377896378 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.37902002 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.381132798 seconds)
  done (took 13.692993141 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.380485542 seconds)
done (took 83.220365847 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.350552062 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.586260622 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.471740395 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.302634592 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.30532267 seconds)
    (6/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.01768278 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.63542994 seconds)
    (8/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.495252886 seconds)
    (9/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.478594912 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.411628806 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.371057598 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.494847679 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.41753238 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.777930971 seconds)
    (15/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.93136582 seconds)
    (16/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.371403746 seconds)
    (17/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.635924978 seconds)
    (18/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.381295781 seconds)
    (19/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.449352056 seconds)
    (20/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.351134229 seconds)
    (21/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.989456405 seconds)
    (22/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.398387371 seconds)
    (23/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.398667451 seconds)
    (24/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.355095996 seconds)
    (25/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.52160445 seconds)
    (26/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.352094105 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.206678776 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.861971756 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.397181982 seconds)
    (30/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.466626833 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.474942613 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.35441337 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.475473922 seconds)
    (34/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.033798828 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.463029317 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.840194172 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.839558895 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.258952584 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.37422472 seconds)
    (40/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.497123487 seconds)
    (41/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.487004249 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.081755069 seconds)
    (43/286) benchmarking ("sort", Int8, false)...
    done (took 4.39195095 seconds)
    (44/286) benchmarking ("sort", Int8, true)...
    done (took 6.372921362 seconds)
    (45/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.719548959 seconds)
    (46/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.353392189 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.373027242 seconds)
    (48/286) benchmarking ("sort", Float64, true)...
    done (took 6.396958962 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.485440999 seconds)
    (50/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.883350242 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.658438973 seconds)
    (52/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.384370901 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.832734436 seconds)
    (54/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.460334496 seconds)
    (55/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.353865106 seconds)
    (56/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.480763155 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.929788362 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.432255317 seconds)
    (59/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.70141752 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.390815192 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.355677453 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.806703376 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.360133639 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.354292948 seconds)
    (65/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.400875835 seconds)
    (66/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.767929116 seconds)
    (67/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.824276295 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.268371771 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.158392591 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.356192887 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.383761857 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.328922435 seconds)
    (73/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.560461674 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 5.614345003 seconds)
    (75/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.426638672 seconds)
    (76/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.355748574 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.49060005 seconds)
    (78/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.394191101 seconds)
    (79/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.460515925 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.792952563 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.878234869 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.874463063 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.133084716 seconds)
    (84/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.395122692 seconds)
    (85/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.458362726 seconds)
    (86/286) benchmarking ("sort", Float64, false)...
    done (took 5.707257547 seconds)
    (87/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.374996565 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.440816048 seconds)
    (89/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.743690602 seconds)
    (90/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.378693172 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.391632982 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.798516091 seconds)
    (93/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.422443615 seconds)
    (94/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.598044028 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.405058454 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.036641897 seconds)
    (97/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.157056845 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 6.395165546 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.374198204 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.810775591 seconds)
    (101/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.297595514 seconds)
    (102/286) benchmarking ("sort", Float32, true)...
    done (took 6.39421475 seconds)
    (103/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.405110133 seconds)
    (104/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.404297791 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.591225702 seconds)
    (106/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.377281683 seconds)
    (107/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.40813493 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.357200383 seconds)
    (109/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.018269938 seconds)
    (110/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.363452511 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.395976396 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.193386274 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.233690304 seconds)
    (114/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.373744046 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.501425411 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.163096782 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.900595328 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.649425366 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.417903661 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.636470985 seconds)
    (121/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.428290648 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.477572343 seconds)
    (123/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.359217611 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.164420242 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.639719164 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.002250004 seconds)
    (127/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.812558178 seconds)
    (128/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.364597454 seconds)
    (129/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.229331555 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.503660664 seconds)
    (131/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.3932908 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.738901127 seconds)
    (133/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.654280464 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.338667962 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.358653321 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.203156153 seconds)
    (137/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.025435399 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.406371785 seconds)
    (139/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.15464153 seconds)
    (140/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.389915806 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.463767854 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.380990328 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.434894716 seconds)
    (144/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.360506368 seconds)
    (145/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.293523814 seconds)
    (146/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.413013159 seconds)
    (147/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.345173403 seconds)
    (148/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.367378297 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.953368498 seconds)
    (150/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.199091314 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.889481923 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.361265521 seconds)
    (153/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.384324417 seconds)
    (154/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.360287032 seconds)
    (155/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.768490016 seconds)
    (156/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.011680325 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.366140505 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.483503118 seconds)
    (159/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.787607451 seconds)
    (160/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.469840051 seconds)
    (161/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.758594781 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.413242308 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.828509503 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.031829907 seconds)
    (165/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.507242592 seconds)
    (166/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.552992058 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.684313105 seconds)
    (168/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.674342233 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.442768245 seconds)
    (170/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.602974472 seconds)
    (171/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.042323853 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 6.383429428 seconds)
    (173/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.381596439 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.276087792 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.253568419 seconds)
    (176/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.94944926 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.416490666 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 5.492008503 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.463939331 seconds)
    (180/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.383644015 seconds)
    (181/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.551828946 seconds)
    (182/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.377724375 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.88670317 seconds)
    (184/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.641474196 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.380415282 seconds)
    (186/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.724731572 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.361568437 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.420767643 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.009720718 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.591439189 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.765985381 seconds)
    (192/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.3695075 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.402782449 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.408956214 seconds)
    (195/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.393009366 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.106311064 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.438326687 seconds)
    (198/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.365402518 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.408683327 seconds)
    (200/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.395274078 seconds)
    (201/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.425509667 seconds)
    (202/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.764944232 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.489510649 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.406572269 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.417317184 seconds)
    (206/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.846805051 seconds)
    (207/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.363829362 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.21624961 seconds)
    (209/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.996296667 seconds)
    (210/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.400276306 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.424369753 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.363821375 seconds)
    (213/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.249481091 seconds)
    (214/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.59629031 seconds)
    (215/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.364903319 seconds)
    (216/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.388005359 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.444097316 seconds)
    (218/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.470164716 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.149163388 seconds)
    (220/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.469582906 seconds)
    (221/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.492350868 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.037217038 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.744521963 seconds)
    (224/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.242177935 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.367920784 seconds)
    (226/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.572498038 seconds)
    (227/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.570864289 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.002021194 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.84541334 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.60733659 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.388578705 seconds)
    (232/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.796818304 seconds)
    (233/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.601628803 seconds)
    (234/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.027075698 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.041686504 seconds)
    (236/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.366089139 seconds)
    (237/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.3870122 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.389498608 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.420946565 seconds)
    (240/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.775310177 seconds)
    (241/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.639110618 seconds)
    (242/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.401867884 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.365964924 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.467579734 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.392464861 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.779923537 seconds)
    (247/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.399972141 seconds)
    (248/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.039691427 seconds)
    (249/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.366495433 seconds)
    (250/286) benchmarking ("sort", Float32, false)...
    done (took 5.418023559 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.236787781 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.743546647 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.36807351 seconds)
    (254/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.395426768 seconds)
    (255/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.511116372 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.252250979 seconds)
    (257/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.743587798 seconds)
    (258/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.413670299 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.39330056 seconds)
    (260/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.336853583 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.485962925 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.386637906 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.51886975 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.367512944 seconds)
    (265/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.507151874 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.49885643 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.267978638 seconds)
    (268/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.469295447 seconds)
    (269/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.371864538 seconds)
    (270/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.249039147 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.324417469 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.429533007 seconds)
    (273/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.420362755 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.40503779 seconds)
    (275/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.387070538 seconds)
    (276/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.415287379 seconds)
    (277/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.45153434 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.111249458 seconds)
    (279/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.512565271 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.409983352 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.17449334 seconds)
    (282/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.924061046 seconds)
    (283/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.474405398 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.367803276 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.375696758 seconds)
    (286/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.512174999 seconds)
  done (took 957.281524337 seconds)
done (took 958.568148424 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.422504522 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.416871043 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.399859093 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.420156236 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.511390289 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.42446845 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.40913133 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.400985803 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.44765043 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.44892092 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.398063185 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.422281466 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.401850191 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.400182345 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.399170237 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415388491 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.472572028 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.40136784 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.416844458 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.409653345 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.415352546 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.39844009 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.449030572 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.421199124 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.404474348 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.403241416 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.404202042 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.41918742 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.512181587 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.405397273 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.403609899 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.411381269 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.47291337 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.399246021 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.395321508 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.419636456 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.411892135 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.410493564 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.404891376 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.43308308 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.895266798 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.417998493 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.403656534 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.401365479 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.401610512 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.404875297 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.402231132 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.4090881 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415616483 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417574085 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.940901664 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.441107641 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.404977274 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.402985173 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.412154972 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.401935579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.406033698 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419997375 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.422288186 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420459435 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.466908854 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.408479569 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.40508989 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.419370784 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.411443055 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.9240545 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.416380946 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.406652285 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.942741396 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.430804539 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.989010066 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.436478798 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.404199017 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.417005618 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.435538797 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.478210279 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.399665295 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.402950035 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.412062523 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.402632016 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.412725902 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.417968838 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.408503177 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.404995133 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.418421814 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.428105806 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.414572133 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.405618766 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.414012349 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.423602872 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.411904808 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.415524326 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.407506633 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.400549985 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.414446256 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.40821125 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.40800124 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.40742841 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.409471316 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.415580735 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.899650965 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441653644 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.401988851 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.402133339 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.40466821 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.419871765 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.914812652 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.423805989 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.427724452 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.453349569 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.406536674 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.471583802 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.409463074 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424642521 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.415142241 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.409070885 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.402354532 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.474379618 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.89378319 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.438323194 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.40871407 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.4046425 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424438703 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.408662751 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.403280606 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.48808819 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.409634929 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.421170603 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.527124423 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.418459651 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.439030692 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.406040881 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.411043301 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.43303237 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425462317 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.439481148 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.410005744 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425419591 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.424211367 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.406350758 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.419133711 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.419343233 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.409908328 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.414758991 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.403258786 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.431945416 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422635101 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422398249 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.429568387 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.529667333 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.405941782 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.478365513 seconds)
done (took 237.299675451 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.482342886 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.40628765 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.507845344 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.406540844 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.52182087 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.509370362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.40328126 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.404193216 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.403503406 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.845625621 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.404051785 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.404023548 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.404182243 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.403889829 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.506381962 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.406286407 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.40486022 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.769608445 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.407144179 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.489451673 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.407826959 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.410422814 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.407116029 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.818818876 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.405486551 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.40807396 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.478899714 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.407789877 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.811525163 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.400744726 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.400883912 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.778874806 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.498629423 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.425275602 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.417209874 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.414747406 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.51060105 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.427106238 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.489405594 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.507947878 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.501598494 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.446925537 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.401670026 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.403335866 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.410072409 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.409089031 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.40666936 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.434876871 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.405726297 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.40609814 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.804547542 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.417627079 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.416495315 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.407150129 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.406517019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.428591281 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.406251939 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.410671518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.514106432 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.410536422 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.472344636 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.856075122 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.8136547 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.410126264 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.409252144 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.408466804 seconds)
  done (took 153.850690347 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.476090157 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.482274057 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.524757124 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.429020092 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.459940691 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.528970534 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.428986835 seconds)
  done (took 11.645749053 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.41687272 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411592474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.46599897 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.466750865 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.411789518 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.594987961 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411237386 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.422494123 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.408525048 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.478467178 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.412242718 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.411262375 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.417921047 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.41109155 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.466821357 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.421157538 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.525668941 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.412034313 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.411386445 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.568326688 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.408829407 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.418469019 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.475228877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.422568625 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412184441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.417057776 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.053039983 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411994821 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.408764993 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.411775893 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.409369297 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.450093052 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41218252 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.41132615 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.409333372 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.561704436 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.411027839 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.410237766 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.413266136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.408442877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.413070043 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.412421445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.412108334 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.409346221 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.412595663 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.436718755 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.413071379 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.413437978 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.412332517 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413414151 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.477590035 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413463122 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.411289717 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.411275844 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.485261352 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.420633521 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.414079926 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.411282798 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414291192 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.411677529 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.571252052 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.469310501 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.414472313 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.46912043 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415473131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415613208 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.414970161 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.413342534 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480410004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.415259979 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.470151129 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.411102839 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.61955038 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.437569882 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417291695 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.41738423 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.417587951 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416112688 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.410482101 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.420379134 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.412431599 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.414495602 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.420062792 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.41274993 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.412331418 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.549917963 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.554776214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.413386711 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.42738595 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.420943563 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.413168417 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.481893292 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.416447839 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.413608991 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479071188 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.530871959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.483844101 seconds)
  done (took 161.395677054 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.422249019 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.425108594 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.416922544 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.433917281 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.416152649 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.416200082 seconds)
  done (took 9.852487268 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.418445161 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.418278188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.417668192 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.418254555 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.41624431 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.416615873 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.417553963 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419268839 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.421964448 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.417364761 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.417315702 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.417001805 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.418039491 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.419384584 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.418845727 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.41785782 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.418335031 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.415566581 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.418013925 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.418628607 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.512786119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.418343288 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417617386 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.41965587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.421917351 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.41849859 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.426833189 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.418158896 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.418694671 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.426895306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.441255438 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.418957765 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.421211765 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.426042158 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.423079356 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.420388654 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423679635 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.42172249 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.416422515 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.419262207 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.41934891 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419178215 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.418749542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.42123678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.422230474 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.424796292 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.424237499 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.428614365 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.420577395 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.420394685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.420261546 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.419802452 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.419210101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.421148368 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.421576575 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.442588515 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.424729969 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.421188285 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.420242387 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.421568615 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.421632009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.420634283 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.423246648 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.424503545 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.427132625 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.421377137 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.421380538 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.425062783 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421501689 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.421964503 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.422109298 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.419010874 seconds)
  done (took 104.737124925 seconds)
done (took 442.794363028 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.875688489 seconds)
  done (took 8.200933642 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.600107653 seconds)
  done (took 7.926333213 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.571378626 seconds)
  done (took 23.902172201 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.457002927 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.479210264 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.415379576 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.441683134 seconds)
  done (took 27.119898111 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.501858994 seconds)
  done (took 7.828198702 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.425420504 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.425615004 seconds)
  done (took 14.178041127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.613062685 seconds)
  done (took 7.939074522 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.060456136 seconds)
  done (took 8.391026438 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.426492351 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.434320615 seconds)
  done (took 14.458100633 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.414048153 seconds)
  done (took 7.740080725 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.547272474 seconds)
  done (took 8.874208951 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.413377493 seconds)
  done (took 7.740065722 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.49550358 seconds)
  done (took 7.822854465 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.95278944 seconds)
  done (took 10.280201988 seconds)
done (took 163.728332117 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.415299843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.418137726 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.417056211 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.41585008 seconds)
  done (took 26.99319406 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.458190651 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.455645749 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.457708187 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.467574461 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.458616595 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.455693624 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.448281882 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.448553148 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.466880933 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.461325963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.457050631 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.459391153 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.457137177 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.449085525 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.458824717 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.457998208 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.467556264 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.45942279 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.449879155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.461007111 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.425573671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.467116999 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.461529318 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.424463353 seconds)
  done (took 36.262431395 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.945355792 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.495110117 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.579068525 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.477309257 seconds)
  done (took 7.826088544 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.477500237 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.477986622 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.489532426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.529719762 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.554293272 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.488440167 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.454184144 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.446718632 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.432673045 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.477103451 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.553453407 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.493017511 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.564098923 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.424492849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.610881638 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.424801941 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.426442658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.477383424 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.529472369 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.551387393 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.424619211 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4769281 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.480011048 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.495638164 seconds)
  done (took 37.09047954 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.424641892 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.443075199 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.425865424 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.423670173 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.433031552 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.424158371 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.425640768 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.426052779 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.424535295 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.430986479 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.42371056 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.437204561 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.424715236 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.425019512 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.431477048 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.427958138 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.432258864 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.424449018 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.426522782 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.431160672 seconds)
  done (took 29.897525732 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.422414528 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.274489826 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.772701629 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.676107881 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.420821692 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.420554356 seconds)
  done (took 28.318109313 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.502334656 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.667931606 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.430012407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.817617613 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.916962059 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.454776032 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.429077632 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.687186602 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.02874874 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.023262542 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.497776487 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.501704757 seconds)
  done (took 21.291587517 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.420067699 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.425436069 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.428534031 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.442013605 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.48722049 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.453217903 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.433770563 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.42170887 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.493420202 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.512129565 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.450324572 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.48806768 seconds)
  done (took 38.790097444 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508706485 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46779666 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.414231845 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476822274 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145063011 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636032037 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.498703552 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.89844105 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.427747899 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696351982 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429497762 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52055399 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680069669 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424524025 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430996353 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.475600664 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676476527 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951482262 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424941009 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.785197322 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456479885 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425581983 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.82871952 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.464603957 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635373462 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.56611807 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.685884518 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.202634511 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738491223 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435966834 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435814299 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425070645 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698852024 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119316968 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548262816 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436108573 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424259943 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.991514647 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.428616486 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.696962831 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452522203 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434827036 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437532612 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42681706 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.360601662 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436247275 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911910842 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.430920511 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.137492257 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426898238 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436812808 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521328763 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.43001767 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.995763531 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519949272 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.452131659 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.424420592 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521372335 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015241692 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.251216952 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435692311 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.370231075 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.43728579 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784470252 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101727132 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.547863068 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.432434138 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431284107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363094846 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.764307414 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451711913 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575825156 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.450857736 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078309033 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166452998 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456859702 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366451019 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009654878 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428879609 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.367356936 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654607147 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204139632 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364329679 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.373389289 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.363576982 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195676333 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443472421 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.891605317 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454494967 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916529127 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.439283735 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446011073 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451781164 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.651971547 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.306204992 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429576682 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.438491489 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561750108 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451515511 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910806455 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365364804 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.434730407 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685541161 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.641403439 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431469443 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.495235949 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684072637 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430037997 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.471070902 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.429509972 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448952547 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.052369344 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.461658619 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25790856 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454199429 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.206880274 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231391395 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434356701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.539646502 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431896684 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694949983 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.253730418 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.598054401 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499476913 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43609008 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430696352 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.803756711 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031302895 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.040302546 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.427373478 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446688757 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.448651986 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.433147948 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394322594 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.428902429 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45350654 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.215012853 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.655974302 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437732505 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711407141 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366375944 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57799588 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439788629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.653406445 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.699444497 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.449893145 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691399649 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430998814 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444177263 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450280493 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450556741 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533267914 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45551721 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.436083696 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696068229 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.435135301 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.436924153 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.809112749 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.218066476 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434064184 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.437986857 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434832889 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081903563 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431021072 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437219856 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323127464 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.446982704 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500899352 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439261408 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.443463035 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.379929593 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473350809 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.438774068 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.431874292 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655990312 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444373597 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.71633208 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518468008 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.655213638 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062062189 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467541396 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.367913001 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.144242777 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.126964741 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434511066 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622255602 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435531906 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444233826 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445320119 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435669286 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084685446 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455608226 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.718130922 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.446946279 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444761725 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.440155244 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435320563 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.348128289 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27677258 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45781368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.446298391 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578338223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.448622376 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.369583772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.951744066 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440389056 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.435654725 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.213487847 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470301292 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.71225247 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93966394 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694592225 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439978882 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468656439 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.869262251 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.478121437 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.433187176 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452210731 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449574157 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.454289167 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452680906 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.447619021 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.729076494 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.807118041 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002138459 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201779724 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044316288 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457578094 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.445792314 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.347743164 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932245923 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372145996 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.094343362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637269544 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928262059 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382705606 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664023998 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.71875252 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274167962 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450097152 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666393411 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436639927 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.463654215 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457634863 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649469294 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473783016 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438951492 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.394066156 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.71973681 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721554333 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440318585 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525579715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9080306 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437982904 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.223069749 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.472505009 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.850922789 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648980092 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.066402307 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.826251545 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.455088918 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446087578 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943596362 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443468494 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.965704814 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094833764 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467305971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.668480719 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374896562 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.451702898 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.452603164 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.435563836 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.851232046 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.447782947 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.696598857 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452266233 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374862617 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441078822 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024078583 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.317903219 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.447344753 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442820096 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246195678 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462590359 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754159765 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.454993139 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.342534607 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464240504 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.375392666 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376888411 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.135175246 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451947358 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420086634 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980051259 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.462575685 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445772559 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447792108 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29404272 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698072193 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.456362869 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074424002 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688754719 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448547113 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46557201 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.54292152 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442666309 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.431046759 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.3251936 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678774942 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461400455 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686596472 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.446442629 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.354696669 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482584854 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661702024 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.324321488 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.447746437 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720120097 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.173874965 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.466327042 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209395885 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48906423 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.446915035 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.463322365 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.458111582 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464034274 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535038099 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453769559 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.454312868 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.455038088 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630439688 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450526782 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454166905 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.458327574 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53779753 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291731549 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.350693788 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.218506363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080667299 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237067305 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098869018 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477919231 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444812247 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446768421 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378768451 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596498281 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971133706 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719018012 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.573632201 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.466387818 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469107036 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456433393 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463822951 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664940401 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721205991 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41918228 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454228691 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235332107 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.60518999 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457365416 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.656734888 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999354786 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048098599 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565351088 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446641977 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930351662 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719761898 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.537045913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448126574 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036332457 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.458236395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.850937467 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.476279727 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459490671 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601542951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457574312 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148495391 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.481313176 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.602293952 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.220582823 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.765105561 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.710945819 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.992024661 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.461040226 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085364937 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225074063 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711159221 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519811404 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.458438544 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.560182189 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596074011 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.456666342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.341413911 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448345046 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295032738 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.158433932 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.458829264 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089215301 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73161821 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.445840533 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.458382732 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471815287 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.458869869 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672420787 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219438977 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679021266 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460143276 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.459559471 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.019915182 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088725006 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484090931 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38551396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.454787475 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719022548 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.705539918 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472414954 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.903760846 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.162178454 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034608269 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.422354926 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47319433 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452114337 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212202491 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089753611 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.378905057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006747203 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.111068267 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464291561 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732397 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.456135968 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.458082709 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73316771 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.455192761 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.45263405 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46889618 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.087707279 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288109876 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.457301222 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.886394801 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.397056199 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.678133165 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466261257 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390582065 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452551182 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.645666795 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451874009 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581970133 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463453068 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.463219723 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462463188 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.188802435 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735868278 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.457932744 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.455125514 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.466287304 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.468458505 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550541054 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736486745 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457008579 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.126707718 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.805017486 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.709207086 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.454901229 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.43624675 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.457071005 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454766083 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171669391 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464987371 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.454365895 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055164297 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.458108078 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.46887427 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456743493 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.670416366 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666538445 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.465348076 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473391619 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454453771 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473929128 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.360777542 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.221656611 seconds)
  done (took 1702.570818724 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.494257477 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.469352839 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.49672503 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.478110539 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.470454074 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463977307 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.507275501 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.482152247 seconds)
  done (took 53.224670051 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.468436457 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.611141534 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.487165779 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.462689197 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.463659357 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.454704057 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.94417308 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.486616672 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.464801217 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.464197122 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.461946225 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.46944817 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.165162756 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.463786425 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.458805097 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.443338571 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.463652252 seconds)
  done (took 67.603190328 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.45749536 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.733467432 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.574992769 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.456882458 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.780861305 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.48794769 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.641642956 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.540749194 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.471106107 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.694214544 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.134018138 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.472409255 seconds)
  done (took 81.809232302 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.47396509 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.473999348 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.473881529 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.473889782 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.473593732 seconds)
  done (took 8.733625389 seconds)
done (took 2141.74018224 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.463152871 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.22583506 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.127687765 seconds)
  done (took 5.717731167 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.599475004 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.646701694 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.767415829 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.787901695 seconds)
  done (took 8.161606645 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.732556824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.827193097 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.636808242 seconds)
  done (took 6.55617734 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.753719632 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.463226261 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.452057803 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.451150381 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.461337144 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.456619274 seconds)
  done (took 20.730338776 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.456442994 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.458700878 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.457454113 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.458713383 seconds)
  done (took 7.19298655 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.432033677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.146679179 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.431889898 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.449281147 seconds)
  done (took 18.821469951 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.201973954 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.215035316 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.199480112 seconds)
  done (took 7.97817769 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.484062162 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.479100075 seconds)
  done (took 4.323494077 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.759223032 seconds)
  done (took 3.119703861 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.471177805 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.50920807 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.567398771 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.503555335 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.917172535 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.172018717 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.216286638 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.766014601 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.482142129 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.841811498 seconds)
  done (took 32.80908166 seconds)
done (took 132.910465553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.490672959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826456208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.655501595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.462433821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.685113156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.657569985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.670460709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.430359091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.970251239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.960113602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.503459185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.690164489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.61827752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.827233965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.616809822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.454582644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.688115923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.539090562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.150412008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.346534072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.670654585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.099034196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.335815325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.124223602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.685619023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.609411267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.683733138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.455139463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322103844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.701251538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.609499879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.456055223 seconds)
  done (took 197.359364712 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455594311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.461864689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.456296074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.456135253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.455988061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.474067106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.456490479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.474740106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473017493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.461911729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.456174559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.474733154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.476520715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456814852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.45814524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456973735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.470817086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.466864739 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.456592212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.474290801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.457554735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.468660723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.455639904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.456696213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.457455873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.457886923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.484879451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.45640243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.475521897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.456566853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.475374182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.490378647 seconds)
  done (took 208.232265334 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455914477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.472285417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.457127053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.484521402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.457295674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.458722111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.477222911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.477968524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.466987702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.461780734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.457784528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.47578203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.491725275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456439163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.478207386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.476462897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.469206192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.457827318 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.488691262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.458165733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.458294357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.476588626 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.47683341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.457214708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.46846518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.45823651 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.458082194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.483663394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45890549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.459777732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.461598685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.458938325 seconds)
  done (took 208.323304261 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.663004045 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.465570262 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.46819683 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.428143048 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.46811265 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.466665086 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.463309424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.665649142 seconds)
  done (took 15.456463568 seconds)
done (took 630.734695109 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.84609795 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.545193425 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.671155375 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.487249886 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.291613516 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.507181091 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.485105024 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.664380888 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.435633281 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.675463897 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.746763577 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.504834886 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.889669969 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.485113043 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.75149686 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.589907449 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.366403792 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.493690007 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.815799843 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.074975758 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.75838737 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.979734059 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.689171039 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.434862261 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.903673895 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.975546363 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.245385537 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.356474025 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.504840263 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.820035998 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.200397497 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.502762911 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.554534511 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.554652029 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.611717484 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.591387155 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.476532055 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.552062613 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.695154224 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.745186233 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.061560475 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.243136612 seconds)
  done (took 98.153667877 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.451916631 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.451551719 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.451400637 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.451517946 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.452356016 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.450708852 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.450596865 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.452418919 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.451470259 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.452202581 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.450132882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.452333344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.45223452 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.451776266 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.451451972 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.452143942 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.451479649 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.454892786 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.45312716 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.452918581 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.453596276 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.451862872 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.452757207 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.452807791 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.452856372 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.453468384 seconds)
  done (took 39.127401209 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.470439224 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.72980172 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.901033022 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.477119835 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.470214216 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.474926729 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.553851013 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.472537558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.473335918 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.474818291 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.630145597 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.475793775 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.505696435 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.930886396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.47383164 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.470656198 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.472956375 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.472132672 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.738507778 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.482044997 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.576336355 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.474447421 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.555290229 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.482071497 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.49564793 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473277862 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.477341534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.007237317 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.496196642 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.632547742 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.349371762 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.556439538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.971421959 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.93292121 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.349083413 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.479581786 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.473648355 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.637452284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.475540498 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.473396444 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.554307048 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.475341381 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.912185314 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.118198477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.494114757 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.474801847 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.030427235 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.65562675 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.73784232 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.483464662 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939518907 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.477911942 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.47710512 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.475876007 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.73644936 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.481679904 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.474987357 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.065217344 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.501547393 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.558255671 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.476731217 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.476167636 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.745299316 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.476365932 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.736216067 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.477477446 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.482943968 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.496026189 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.91499018 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.479027902 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139746822 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.496556076 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.475823051 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.638262036 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.737002034 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.067841038 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.499587865 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.75218377 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9857104 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.576977709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.481393701 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.001702021 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.582626302 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.482109438 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.478758759 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.479245739 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.478962019 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.530923608 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.558356809 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.073657108 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.15363805 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.087658878 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.584501563 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.491903273 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.479330568 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.070842542 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.499907374 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.480007338 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.911083712 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.144082013 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.498629985 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.484686082 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.144407022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.50074473 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.562486907 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.485071901 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.923818887 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.479019675 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.52843886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.479113798 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.483636453 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.50306895 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.562112557 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.482946636 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.48080218 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.112940386 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.665594381 seconds)
  done (took 193.579559703 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.472579705 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.473267636 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.471441461 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.473028563 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.473761919 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.481330419 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.472965603 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.473478574 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.479663835 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.472630556 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.473647121 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.482922698 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.475053387 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.491694727 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.484581914 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.480221891 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.131572641 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.474787508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.473124418 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.493955273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.287278961 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.474774698 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.474442158 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.492547017 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.474200864 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.477073044 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.496939905 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.475935731 seconds)
  done (took 156.23947716 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.483409804 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.082455973 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.503073096 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.622085855 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.504983178 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.481286191 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.620042014 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.543214638 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.502183685 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.480330538 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.480711711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.8038976 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.483438472 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.031693285 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.692852472 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.650417597 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.030068179 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.502412464 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.480786212 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.480594847 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.624880919 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.486590954 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.803898749 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084068263 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.503440369 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.083943586 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.466435808 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.48323536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.482074223 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.085634868 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.501800077 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.807356332 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.566155846 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.547088883 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.106521411 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052608053 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.05103324 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.642681362 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.482712133 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.480857258 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.481306352 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.466123843 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.112127207 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.509425787 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.483836092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.102005812 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.509172824 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.485557496 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.489069332 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.482571815 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.547078768 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.567670552 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.844199341 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.126369402 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.590837031 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.496872503 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.624961909 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.862568517 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.486739536 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.03409796 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.468777343 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.113935218 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.510476863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.468118999 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.484618596 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.489624552 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.646095107 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.626982731 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.035589682 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.505292893 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.034905613 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.665903574 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.485036664 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.484974242 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.486774877 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.119204592 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.059994613 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.664104096 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.629415043 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.696751643 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.470000843 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.484487285 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.46911846 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.567574219 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.486365622 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.121512518 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.059981632 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.506651859 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.487835409 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.487701776 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.487025097 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.676952071 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.140989293 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.59389666 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.025868859 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.847581465 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.83223431 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.493621404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.550364637 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.50411978 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.829480529 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.493762438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.548981427 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.929331954 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.830523782 seconds)
  done (took 177.094817938 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.744653405 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.762848098 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.585377959 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.62559927 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.110861197 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.076142414 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.785601222 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.64054265 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.603834261 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.760712898 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.749480795 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.582707615 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.666921346 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.568014533 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.234175421 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.585622721 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.604167431 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.646358722 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605711162 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.534762512 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.179501656 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.786180056 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.667579599 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.451387324 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.588448783 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.324784424 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.071323833 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.05290402 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.674750579 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.891821902 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.050920206 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656231474 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.523700789 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.234744339 seconds)
  done (took 71.017257063 seconds)
done (took 736.581584758 seconds)
SAVING RESULT...
DONE!
