cset: moving following pidspec: 6087
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318663574 seconds)
loading group "string"... done (took 0.56097541 seconds)
loading group "linalg"... done (took 7.708577459 seconds)
loading group "parallel"... done (took 0.172778527 seconds)
loading group "find"... done (took 1.190340804 seconds)
loading group "tuple"... done (took 2.139470071 seconds)
loading group "dates"... done (took 1.343668626 seconds)
loading group "micro"... done (took 0.248715433 seconds)
loading group "io"... done (took 0.667904362 seconds)
loading group "scalar"... done (took 42.222582739 seconds)
loading group "sparse"... done (took 13.467738652 seconds)
loading group "broadcast"... done (took 1.197974034 seconds)
loading group "union"... done (took 14.741074544 seconds)
loading group "simd"... done (took 5.237796928 seconds)
loading group "random"... done (took 10.43299346 seconds)
loading group "problem"... done (took 2.23959978 seconds)
loading group "array"... done (took 24.133912819 seconds)
loading group "misc"... done (took 2.226792807 seconds)
loading group "sort"... done (took 3.703817593 seconds)
loading group "collection"... done (took 19.927345604 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.499979413 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141681561 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145039812 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151761603 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186607163 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139287695 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157442666 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10975035 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.941830041 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178646429 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141402412 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.499182803 seconds)
done (took 5.044707059 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.209572836 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083655273 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094529762 seconds)
  done (took 0.875100038 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.088454384 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143060996 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089983266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074236493 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073120572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090955435 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07643362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090064578 seconds)
  done (took 1.336173164 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080590229 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075306483 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.092555034 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075700298 seconds)
  done (took 1.02211305 seconds)
done (took 4.239256803 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731825298 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271021908 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202876173 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526217878 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177069723 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.2087847 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678662759 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349846146 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.243240081 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103880246 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.129603911 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.399624812 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115349116 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680731189 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.087011768 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125891447 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169316739 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461545115 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088496104 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090286321 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114617359 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151367264 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.112470052 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084321008 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.180146837 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0768022 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.188143249 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107879531 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074510634 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286425313 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198180475 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679040606 seconds)
  done (took 10.832897023 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113589153 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136387325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075366689 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152434804 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13626854 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07921814 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097567275 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07632647 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121066798 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17654819 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115607474 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138728558 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090186126 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078669727 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114518772 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227925141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118886424 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118527713 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080926788 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086032921 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135792344 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109783017 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08953984 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10502823 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166454966 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203201921 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108506571 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122144726 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07746451 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.109651172 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14089469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155113155 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075457552 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075165927 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17410216 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120531338 seconds)
  done (took 5.015102613 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.13301578 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191311756 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100581498 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170203549 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092126924 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144068731 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074542917 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111026735 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260625285 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.194542873 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159062774 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138909012 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111933577 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07759002 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097822974 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076142204 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.686932069 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121554588 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145906796 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093397413 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098699184 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100200033 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369368633 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084510387 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07295105 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098518683 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06786722 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158350609 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097242979 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.181596373 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096829393 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099028495 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130016014 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.189032221 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156001139 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12387067 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117357679 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096046107 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073549106 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179939831 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080654593 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093570573 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104247082 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132785129 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134365656 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089530911 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077595161 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209478363 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091881051 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091332231 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.011580662 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175057463 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.086435869 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071660256 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335065949 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114324587 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075886975 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092108601 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.293689591 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1194723 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091762058 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075616606 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076578353 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09080814 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077299114 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383330845 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090561036 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.7239552 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075602968 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084853714 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094825377 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093074039 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083691164 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082677791 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112836653 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072389678 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094129695 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076796505 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092508483 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07498071 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076074661 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113503142 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098491332 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075459485 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157046939 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07492219 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094903467 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124280732 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094555556 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074685824 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126076725 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079517791 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075180186 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133308505 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078215071 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114228026 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094387466 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137737468 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077141019 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071593375 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173531702 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074017135 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120853727 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08005848 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125837331 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106938422 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077007235 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0988855 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073664266 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091482085 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143890732 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076113959 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092810373 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076664365 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105183543 seconds)
  done (took 22.1291896 seconds)
done (took 39.810371113 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.339798972 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107416635 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106879549 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106654999 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105497891 seconds)
  done (took 1.540539403 seconds)
done (took 2.287769707 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.271620348 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17241824 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071598146 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167517342 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091456933 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172564654 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158472097 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10828009 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.183019574 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072089081 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161889368 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090812354 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071824755 seconds)
  done (took 2.567884009 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091323891 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111646321 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078292717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089894281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08958019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089933613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106466646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096406975 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106331533 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080672059 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071153756 seconds)
  done (took 1.756047089 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090198811 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092334203 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095874314 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088877863 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088875224 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089224621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105914261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095277531 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107094944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08131683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071661624 seconds)
  done (took 1.754115629 seconds)
done (took 6.815729803 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090060005 seconds)
  done (took 0.829963508 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.004396649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.31313909 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099333995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1625148 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313083005 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.212426943 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.58896154 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131250155 seconds)
  done (took 15.786999015 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.125064114 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097209932 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079142393 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09881597 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0757485 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098413658 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076456652 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077502071 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094321895 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076400576 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095493698 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077786254 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093591701 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079561502 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095638876 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077186735 seconds)
  done (took 2.224647358 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113104502 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11220078 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100646691 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085515236 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10024526 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080731446 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101630598 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081819655 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09757262 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.081170617 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102950445 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083697178 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10065877 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078731205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099787787 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.086465839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096456232 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082742579 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100899936 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100347868 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084755084 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097511292 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083092083 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101242235 seconds)
  done (took 3.111130596 seconds)
done (took 22.699716117 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149112795 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081480096 seconds)
  done (took 0.979593579 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096752573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114583835 seconds)
  done (took 0.966964106 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101911566 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094048774 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129433213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093398669 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095755322 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077664354 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125301833 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07860573 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094774312 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078353559 seconds)
  done (took 1.725665579 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081507766 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081901367 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102918076 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11506181 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087551519 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097404296 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083537979 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098625176 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082780362 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093695231 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085698155 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110918458 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084273328 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113077238 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100382631 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083733128 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104188309 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082042765 seconds)
  done (took 2.447055788 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077382415 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079082481 seconds)
  done (took 0.916165153 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079934794 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076269298 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096829732 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096942884 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076439746 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075614077 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092305831 seconds)
  done (took 1.353494316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483520191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139970384 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264796922 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081128247 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.11833489 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.324293321 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074245039 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099610003 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079979724 seconds)
  done (took 2.464835555 seconds)
done (took 11.606895814 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088227175 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096493518 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.126659717 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450680871 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.112600386 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075669593 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.154647103 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251994064 seconds)
done (took 2.120468057 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.139021708 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332567758 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121415463 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06922302 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092231602 seconds)
  done (took 1.378600701 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075159674 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078767211 seconds)
  done (took 0.915833039 seconds)
done (took 3.197158701 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075676892 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.125993501 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075106805 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.073125251 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095041466 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074939644 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.092602492 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072810638 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07538465 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094474264 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075052234 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092674209 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075945866 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073381451 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090739908 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073276876 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093067981 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075539405 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073086742 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091134009 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073040133 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092746643 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073656689 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073001565 seconds)
  done (took 2.779254463 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10578772 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093600823 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081940365 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09894654 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079942862 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099962071 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080947349 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093719162 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081708448 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095417592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078968059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097969975 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07811324 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098090921 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078232931 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096927636 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081495346 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093378595 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078984317 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09683384 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081444988 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094244359 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079919718 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098963045 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079453952 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097204131 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078610011 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093870285 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082077763 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097371722 seconds)
  done (took 3.441800317 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081185321 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072734709 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091988601 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081163135 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091471046 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077948819 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072539937 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091800105 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.074330643 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091848109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07611661 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073370584 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091388874 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076254773 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092610867 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077056461 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.216393773 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073606855 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073972523 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09224858 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076803347 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09225333 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076802875 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073515416 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091133468 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072948324 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091549299 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073147305 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074171948 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091269762 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076071647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09513038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073263302 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080206787 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095261357 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073026861 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095087706 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073941278 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07395533 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091481461 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0732875 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091546291 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073910151 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080475745 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094890586 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075663966 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092765136 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07570552 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074512065 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094796562 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073701792 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09148767 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075865968 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09317129 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077625861 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072944207 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092423912 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073089799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092567456 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073602577 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073732128 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091147018 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076037564 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091678981 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089514876 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.081153172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091264583 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07560057 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095556093 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.076806431 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.075409421 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106867486 seconds)
  done (took 6.849716032 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079674874 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103245973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075663732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07583236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090385747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074614979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09996374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075421822 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09437567 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093077837 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092987281 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07618054 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076078242 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096217514 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074790369 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093795086 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0838609 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090431991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074551346 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095834034 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075014177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098417777 seconds)
  done (took 2.665008265 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207766994 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10202343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137801642 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09091797 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112160296 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089911597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098958295 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082344328 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098850945 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083684291 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102508579 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081067236 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110489178 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101797586 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084460425 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103818982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080851139 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10339954 seconds)
  done (took 2.645831264 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088997235 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09511624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098675488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094937093 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076302384 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097994134 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082716789 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110228146 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079656386 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095002588 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087769382 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09779787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078912443 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09508357 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079378208 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07707157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098544034 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077567694 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104413752 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101191133 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08354197 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105749497 seconds)
  done (took 2.781479344 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09361488 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09780162 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096881301 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098924221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0755126 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096725232 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084460153 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095749249 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084773476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.078713082 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095248575 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078127724 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.101582362 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076523075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101535978 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077159298 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097096839 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077163739 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097809705 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076064014 seconds)
  done (took 2.558026812 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116808068 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109883373 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09202578 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121162862 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092001043 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110450065 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120525823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091500153 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109399097 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104502835 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109808536 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091593067 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121499244 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116290629 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091537882 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120118901 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10196879 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119452797 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110190744 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092386249 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122893998 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092101834 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121740846 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092316674 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109740927 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092270563 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109526095 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116635295 seconds)
  done (took 3.781051531 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077325134 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076549005 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093500156 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074751244 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.074475721 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093787909 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074526119 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093606849 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077224159 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075426684 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095341429 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076931615 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095948604 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076775197 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076797329 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094933189 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076861629 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09230866 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07442256 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077097298 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095404855 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076341117 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094907715 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074638969 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075063268 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094711417 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074536845 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092941186 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076941633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074100817 seconds)
  done (took 3.259146592 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085500184 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101441668 seconds)
  done (took 0.970974965 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074906681 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111400828 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073860556 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080920799 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100929647 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077127763 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105355626 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082153782 seconds)
  done (took 1.488237834 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095472924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114301549 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08233271 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107657146 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094888654 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115055338 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136607226 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102327387 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083396065 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094793683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094343506 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095339361 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083360916 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077209169 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102575833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083538819 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097241291 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087852609 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10315437 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079939101 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102050961 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0891802 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08113013 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103934341 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078553974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107294136 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087523566 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108286899 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080780462 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106493262 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08370553 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090061648 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081735743 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101411951 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078196762 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113667328 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090585435 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100324097 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086785091 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083027115 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106385078 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076134519 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102556306 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085388966 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10736947 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082724402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102423074 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07647016 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094421746 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080397469 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076436089 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096974159 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072903385 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103803297 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.081992208 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110309023 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080086402 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098652811 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080982569 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081207913 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103416932 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080967773 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098560466 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081691271 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103972549 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.081969876 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10421358 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076667025 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071741719 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097003081 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086752845 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119294185 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087278779 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102226142 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083631727 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098172759 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082492919 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102675713 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085398306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105710518 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083165361 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104559441 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086311088 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097233185 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080707154 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084901602 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099391604 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081670754 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094134666 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093588994 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100030401 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079231916 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09378495 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087118993 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082203317 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101693793 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075774879 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104721936 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072182561 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10198566 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084164649 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097877617 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087616946 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102992051 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084659191 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.08650891 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10811853 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078012373 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100601732 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074890659 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103035985 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080702207 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104620741 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072352359 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081162106 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09890295 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083489403 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105790868 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079530202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102052383 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08615985 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104531875 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080216326 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074961856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099850672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082389218 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106582924 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085754066 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099943003 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076117553 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096039572 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082663016 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101788329 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083757003 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083299711 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100314444 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07272177 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097991928 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083886063 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10524595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078342532 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097828822 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08414378 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.079095627 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100654176 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084533653 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099743718 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077502937 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102222353 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080629459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077477036 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106914264 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081905915 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101371927 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082437848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106165956 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080919463 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102719822 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080951293 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103075697 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083520248 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077237218 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096647334 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081287117 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107127305 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080471118 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096040082 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07523018 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104696458 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076198685 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081885213 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096827899 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080772172 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102407643 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07962689 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10132875 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079660736 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093562414 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110882941 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084507467 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103902519 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088685504 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101974198 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08052369 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101973555 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084024344 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102964801 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085709362 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103053843 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084266467 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081901689 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094521681 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084567216 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106231517 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.077991026 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098755208 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07789478 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.0830796 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104959834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083636415 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102864433 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081710167 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097973358 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087625803 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101468115 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082529125 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097087895 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083194963 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088230963 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103224569 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08446331 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108045133 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082261323 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096890606 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088358281 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099903786 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08496041 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096577867 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.076326384 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077204552 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104073186 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081614981 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100948641 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072920359 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105396282 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087192995 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.079833631 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097665329 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083423288 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107254582 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08088706 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101332344 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082643691 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104183218 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092969363 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.097041919 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082499267 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107958012 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0829532 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073114048 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10426326 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081069039 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097983336 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081371137 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099320697 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082343365 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085718571 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102832802 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073188664 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100513229 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081529333 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096814702 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077360602 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086243064 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102090786 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081329209 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108457387 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084535447 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103946855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08399914 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102404402 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084226738 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104841576 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083225146 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104117839 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081469996 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078275446 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100488318 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078650462 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099034469 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080899557 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.1030951 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079294479 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084684033 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101952788 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078781044 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101079432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087028953 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099235174 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079993789 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09820462 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083098579 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079884532 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.098689479 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081855848 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096804164 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087310382 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102737324 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087643676 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079292403 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095561864 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0846261 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10138002 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085349798 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104273965 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085281446 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100230247 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084170301 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082048154 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108901868 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077618276 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108462254 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085586967 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099730763 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082755765 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099127354 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081250043 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.078198785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100815329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084734333 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099180399 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082646891 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104056858 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082506081 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099457521 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080926 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08431999 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098931962 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085253241 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092743193 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078393678 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107080377 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083799949 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106876791 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084734921 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083183425 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101539378 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084883959 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101530284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.075725311 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106689135 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086583018 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103620141 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087896251 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078329744 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100262928 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089199483 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093026293 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081540324 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099680063 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077309758 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107229245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084766956 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088200346 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098857135 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079172161 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09688188 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085437198 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10196584 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074675402 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080281028 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102835037 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082127001 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102176256 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084663611 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101766504 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085931017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107097181 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082867843 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08139425 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104101123 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076596945 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09827638 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079298575 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083275964 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104117718 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077776883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096329846 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0844183 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10135714 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.080468366 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083205498 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100965729 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088067469 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102805552 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082974147 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10801877 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074403578 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10229924 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083348909 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103391548 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079476104 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083983307 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102467424 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085526772 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107336725 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084135667 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100012692 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084094657 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100854058 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083615648 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083968455 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104337927 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079104078 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105227788 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088633657 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100381058 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.081495067 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099595037 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080697059 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084922026 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104999579 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082626723 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10706625 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083428398 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10086707 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087056439 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103943829 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084523697 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085170951 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.101762552 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085883894 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.098594567 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08832869 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.099618854 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085998803 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101771885 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.077605192 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083808476 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102894952 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082467755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104898026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085210736 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099073568 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079176307 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081239263 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102199452 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088844727 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107377527 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082836574 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102703042 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079201877 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096921795 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086287064 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077056294 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101669973 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08256469 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106052073 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082713146 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100298683 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083671174 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107352993 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086939054 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104778407 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077189225 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084800778 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105777118 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08277284 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.100997115 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081137211 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105537471 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085473995 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101549545 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079142058 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088299554 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104678286 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086080744 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101387669 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.080507898 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100069824 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078734493 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105439088 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082916435 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106207635 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082712961 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084524449 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110258663 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080724093 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100283113 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08924984 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104309208 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087103224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099077597 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081130032 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085151431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105873055 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078805869 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099498967 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077295336 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102106513 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080103547 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07866174 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111581297 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087808896 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102204566 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082844044 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102610278 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078760887 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098477808 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079490019 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085515546 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101865447 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089928883 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099472727 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079499396 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098611673 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084619245 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104064924 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084559086 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076883599 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099089613 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079157897 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102717001 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087430821 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103535842 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084137562 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08395155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102991586 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082343561 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109402056 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077610764 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105012727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091715539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105487461 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081471836 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106950468 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089977383 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106389145 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079326072 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086449322 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103012544 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08081346 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106269366 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086768666 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115127336 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084297519 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09991135 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084065187 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082972971 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100301154 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.088628031 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106947186 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086374735 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105664433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082508017 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107296976 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083109481 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106465699 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083552018 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103410582 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083916436 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080955925 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102127929 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.079424128 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106647199 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0865526 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084046255 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108178128 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079986871 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110699247 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08888891 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106276237 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076917926 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100171218 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.080446348 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079160808 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105923462 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078612446 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103278295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082902526 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103453207 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.081671005 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08641231 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103619339 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086212102 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105440298 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074698419 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101982674 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08418009 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081001631 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097957904 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084704701 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105991446 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08763323 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109069244 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080912766 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102315417 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085042477 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080959608 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099583133 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086978668 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104000378 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084542832 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101139335 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085298992 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086299926 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104654726 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086530436 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106847212 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083517639 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110508547 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08778652 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09813569 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078017789 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107428211 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081900609 seconds)
  done (took 55.402625251 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126398304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106571135 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076026946 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096616529 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122550779 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081131997 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076017547 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100510436 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080729061 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110613005 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075536278 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096700709 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096910021 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123550703 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120598874 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110206029 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076323559 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101505022 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076097547 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079827644 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115819166 seconds)
  done (took 2.885818924 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102384685 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115490216 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091838025 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118103408 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107196321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09299077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112660616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113726878 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0973212 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108052601 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117579656 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093695059 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108955859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088618363 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108770197 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111739097 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098443923 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107411476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09451222 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11371058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111724224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092659515 seconds)
  done (took 3.140153855 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089449881 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085050539 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105671584 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076156897 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104144347 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076317143 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109180118 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078930143 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088387762 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.1000781 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.079728435 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100175166 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084839367 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076135112 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100709172 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.078940456 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152042026 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109690032 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084639908 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106777279 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078448401 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08197851 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100399418 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079274355 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099752004 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093541356 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106688497 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086312983 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083613651 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.10041966 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084835448 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099154789 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.082482359 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101665221 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.079495842 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079947377 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105059695 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084577335 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099460715 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082421553 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.081374392 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100832088 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08543292 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103510429 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081615488 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.09873888 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08193789 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08480714 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096540704 seconds)
  done (took 5.347029455 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113524188 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154355432 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104686344 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144630367 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.098021158 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115054968 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08405325 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122511987 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100425248 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083033654 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123249888 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119528836 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085029368 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110314169 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085157588 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105263446 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086208595 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100987709 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089737897 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101557885 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090140333 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108431098 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119390875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.096955859 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110010561 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083447987 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10164542 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090216278 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115315847 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111314443 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090123538 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111365122 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119743728 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087170904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101210449 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08758767 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121992816 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085540436 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107937552 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.079460471 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107751906 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089310157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109437529 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121471756 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084960701 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107820592 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085253041 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078143639 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117303098 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107880535 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09428251 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118818276 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109322715 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086340471 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111218089 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098966867 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104965357 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083598081 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109441215 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0953533 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100417789 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089310157 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117660654 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107783376 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09368059 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119011449 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107568147 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08917295 seconds)
  done (took 7.975256532 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114667699 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11165382 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100723851 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121214023 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11112624 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090255565 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11093333 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08957927 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110895756 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096566673 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110943305 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158694405 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087512753 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115899746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09013702 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111455322 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090411935 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110985046 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089758492 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110514987 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089773096 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121938712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110418246 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101090784 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123872471 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108317422 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090338457 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111010577 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100786379 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110404906 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122954216 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091158 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111236527 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100241139 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124113869 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111103726 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084485288 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111574171 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090430786 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110749069 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087927123 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122212191 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110339873 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087794117 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110492383 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090368058 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12172935 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12394367 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095875066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117896276 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090826919 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121644823 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110162342 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090076696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121229611 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12932388 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101097863 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121933295 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089443284 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122302308 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121931533 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128146261 seconds)
  done (took 7.52627259 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113500045 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116801466 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12362145 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077794259 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080049252 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112152918 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079744886 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101755511 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116478104 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095724409 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119398046 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089931675 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114555077 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119032225 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090513246 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113967675 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111885285 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090926838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117028725 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089964509 seconds)
  done (took 2.922061662 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091396115 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123353547 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083002607 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111783909 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085660039 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111212979 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084662316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106939792 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084370173 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107085221 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095185427 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116024813 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083780283 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110264782 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094366241 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11050088 seconds)
  done (took 2.451469332 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104233422 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125472272 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.106596558 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110225825 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080243652 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108300465 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085400482 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100052576 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078927669 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121010547 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089264455 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110714331 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08576127 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102123443 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083684229 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088229712 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100591007 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087093519 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106499133 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.107188861 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11012763 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084851492 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110335665 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084231576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107330531 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088026579 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111597772 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080064023 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102537009 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086191561 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106847214 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091814779 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101165486 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088316499 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102770174 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080202801 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106863039 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086505822 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109665402 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085779527 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081198359 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106350194 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086012125 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105135759 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078451425 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107221552 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079444757 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.110636728 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085329495 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106661049 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086254186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090327424 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111951368 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115254563 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092896328 seconds)
  done (took 6.203085915 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098370328 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108922382 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077952853 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080549366 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107801047 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085359137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109076188 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085556248 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106349148 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081162297 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106698942 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08756199 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085446472 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109360213 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084636573 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108338612 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078489116 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106354523 seconds)
  done (took 2.564922095 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089488588 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082853089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.112332583 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08260357 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105117493 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085368679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101009356 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082134661 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08120324 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105048335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083689368 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107788162 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081966653 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106336694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083624035 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104273462 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086161529 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081058961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104795967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079879959 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107490531 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081718716 seconds)
  done (took 2.890207064 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120034632 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125127786 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091544717 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.213083645 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.125346467 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.108727898 seconds)
  done (took 1.643435665 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108179563 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140435424 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084710699 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107298688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0964994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110004725 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088316711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109117238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098996108 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122336625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109758037 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09900649 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120906446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119998569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095470891 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117720902 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087922523 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110371312 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08313329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130395941 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109718149 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099473003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110448474 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10909136 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088921391 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11872381 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099687235 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122364287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110091609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100316921 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116877453 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088129929 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122440077 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123268725 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086057156 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121777542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087637554 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13021745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117136708 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120381725 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086591484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116324955 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099430213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11652419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120852655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088820216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115995824 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088190963 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109993578 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135622655 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096354371 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120300229 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116664012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100553754 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120731003 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137557704 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122418963 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098779064 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117622863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122310397 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099578066 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117710554 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119780355 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101156641 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117476299 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120395172 seconds)
  done (took 8.094204599 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122637429 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106932352 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0882407 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12296138 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120328783 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089249601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110338429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088381519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109885263 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085285445 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154859996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110890373 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099149386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121106503 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110428633 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089218083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109381711 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098403464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107495764 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136843423 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088809472 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120991843 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121469055 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099185135 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123206429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116851524 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089113053 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110270682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089056727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110736339 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116682229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089487888 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121352669 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085304635 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121458895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08810647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110446147 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116933635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088788221 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117362168 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099252026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130688445 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109835764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089322313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124064749 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110664616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090077097 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107516608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089628518 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107230583 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101960482 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123958773 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12388127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099389815 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111260785 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110175406 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089446767 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110509515 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089240749 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117109589 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099064623 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110847149 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137410055 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08841715 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110776732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120818809 seconds)
  done (took 7.974827806 seconds)
done (took 151.006510244 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.232100859 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.22860203 seconds)
  done (took 1.318853971 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100013353 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13969209 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098732619 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168854152 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08017754 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.116676852 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134207592 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095089591 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106835648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08555141 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106741328 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086767746 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149756343 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106763941 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084728928 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107950867 seconds)
  done (took 2.635967411 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181218488 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.297552434 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101700128 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105135907 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089052488 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.083965629 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105967221 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092826889 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107617993 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084586113 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083861891 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107243667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083626659 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10644698 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086552643 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106646341 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.084472821 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08478152 seconds)
  done (took 2.861547622 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114077167 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14638207 seconds)
  done (took 1.134594183 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120254372 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177920157 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297753378 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156634448 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124856565 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099388249 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156648461 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127848121 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205971197 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131515073 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107253869 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11428101 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117661493 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117694519 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115924534 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091640376 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140775609 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092057423 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114495992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093073194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13961002 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084239116 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11672341 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09245707 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188460112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128102232 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083676107 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107460768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092754979 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116198675 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.090692026 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12098707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127604861 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.150742453 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098270687 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153786223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114397183 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09057071 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11484407 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090695387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118384389 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095669761 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122783323 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092214107 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106727511 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095504048 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106222987 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085042908 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113912953 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.094420721 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114291747 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091794083 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151216838 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.115359574 seconds)
  done (took 7.375559465 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.812358363 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155089355 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091544426 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.890730615 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140186876 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125252485 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.003626112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136081723 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232041241 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.795957825 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132227154 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127206195 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207030922 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.227892814 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911845881 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.301133758 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690802136 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125333518 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119473057 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.149232317 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117830182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115880449 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130323114 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.425708105 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091311639 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112345127 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095491019 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12120769 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160224218 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090748658 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115013956 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176202882 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.240978219 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195424986 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088139776 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109090815 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090340113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163815822 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269559597 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19422389 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176209894 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107582279 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089898212 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120043726 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108528902 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107840274 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160909001 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169508792 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168098066 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113357266 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098080653 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117976097 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097952023 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159494767 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10956762 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290395521 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311037416 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111262632 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096526858 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126178303 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236630787 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110788585 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19430008 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13220577 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209162666 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089161826 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778880609 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.158037543 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084851921 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11867192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094143142 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115618785 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096023045 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163824676 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3888187 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123168521 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091445117 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111040366 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216763347 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088851742 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113081576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161763787 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089248327 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119168738 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123551728 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100330131 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164840183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.223841861 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123225632 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118399893 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09259143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122917478 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.090922634 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209728812 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218516534 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157129397 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20742103 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115690476 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160395852 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162700613 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119335086 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167658927 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094294533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125770192 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097853388 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215599036 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14040704 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08908461 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115410652 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094099539 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142517204 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11413443 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095560457 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164940063 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478371429 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163186735 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086747555 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093225941 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119697942 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158927127 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117457685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238326383 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118742767 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163144049 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094270566 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109735472 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095657135 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183566329 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100506643 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120239076 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09878873 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11865586 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.226344934 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216489584 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101611537 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242517907 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157953045 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119609583 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16880402 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1189496 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16635481 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096644678 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121487235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090295487 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779277957 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123736741 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097355257 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115687288 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161933383 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112858391 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089672829 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.112894174 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086885387 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773094105 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093600584 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08725633 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.114071806 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096161358 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119938018 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094235677 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117390353 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159836467 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231564464 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098021052 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119317059 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088993856 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159635029 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.114640178 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089764994 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113596257 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090205093 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119556447 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092682793 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113057095 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169426172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15785149 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220353802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577654346 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088873438 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113200192 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228129691 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090233391 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284142657 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097236773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225905737 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163913883 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085932614 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310349982 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165287986 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185396647 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116211696 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169357061 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088079471 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117076322 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160723321 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089738826 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11868078 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159135113 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102274223 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124099124 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922452866 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085553169 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.220018162 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108352427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166208728 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091644641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121521553 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268789895 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113818756 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128094951 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160689826 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093150011 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112864044 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701369141 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091455097 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12276556 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097067212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223129816 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162644687 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119937976 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095570606 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122749565 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160987507 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207209605 seconds)
  done (took 42.817189122 seconds)
done (took 59.010367608 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266605354 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219953902 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.275502956 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171509322 seconds)
  done (took 1.93111606 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179680009 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.127952034 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.147487679 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107427299 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.130828433 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107411183 seconds)
  done (took 1.69494567 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352108761 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.299758412 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214055098 seconds)
  done (took 1.763532761 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250524822 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246935368 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47368107 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320624192 seconds)
  done (took 2.292564454 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207912664 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.101896483 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125911438 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.115926675 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.17174677 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208196241 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143806884 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152434167 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10868739 seconds)
  done (took 2.282192733 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.167281133 seconds)
done (took 11.034845729 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.311717881 seconds)
    (2/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.131200011 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.162068774 seconds)
    (4/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.236035643 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.153854122 seconds)
    (6/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09958697 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.224203136 seconds)
    (8/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.268488411 seconds)
    (9/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.098050485 seconds)
    (10/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.132198077 seconds)
    (11/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.20570076 seconds)
    (12/286) benchmarking ("sort", Float32, true)...
    done (took 0.240877751 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106159968 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129722104 seconds)
    (15/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11377337 seconds)
    (16/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.181391339 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099677811 seconds)
    (18/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.244225793 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119980624 seconds)
    (20/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.275111942 seconds)
    (21/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.240315377 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112430387 seconds)
    (23/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.214630508 seconds)
    (24/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12191932 seconds)
    (25/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101006846 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.199031503 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138869122 seconds)
    (28/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204831531 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.173065295 seconds)
    (30/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121503927 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.227702491 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093014453 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.235387998 seconds)
    (34/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.167955468 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096645056 seconds)
    (36/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.193233238 seconds)
    (37/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097707933 seconds)
    (38/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.226960044 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196107808 seconds)
    (40/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.220168444 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108481127 seconds)
    (42/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117261736 seconds)
    (43/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.083777458 seconds)
    (44/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.166241263 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112326571 seconds)
    (46/286) benchmarking ("sort", Float64, false)...
    done (took 0.17827233 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.230395926 seconds)
    (48/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.115209035 seconds)
    (49/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096855045 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093028431 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198882198 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138759199 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.108928692 seconds)
    (54/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.160055501 seconds)
    (55/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.073077079 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.101247691 seconds)
    (57/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086930616 seconds)
    (58/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213364602 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.083672151 seconds)
    (60/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11653601 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157038332 seconds)
    (62/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117365502 seconds)
    (63/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097227374 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109550497 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086273879 seconds)
    (66/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121512082 seconds)
    (67/286) benchmarking ("sort", BigInt, false)...
    done (took 0.2265676 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08576757 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204001632 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097442747 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11816584 seconds)
    (72/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.200445509 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093548949 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136651892 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086447806 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082303835 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.110211471 seconds)
    (78/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098797109 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.176369779 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.180945669 seconds)
    (81/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.095056468 seconds)
    (82/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11148823 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112313999 seconds)
    (84/286) benchmarking ("sort", Float32, false)...
    done (took 0.183569908 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085672195 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138756431 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074625467 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117494101 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113521917 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.194378367 seconds)
    (91/286) benchmarking ("sort", Float64, true)...
    done (took 0.241482331 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088197873 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099584697 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075606203 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123184445 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077036737 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084612573 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120795664 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094660186 seconds)
    (100/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.17903852 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074510643 seconds)
    (102/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.209971127 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138456669 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096384809 seconds)
    (105/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122960432 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.150152665 seconds)
    (107/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115467329 seconds)
    (108/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.198907276 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165917099 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126853721 seconds)
    (111/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.074143117 seconds)
    (112/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185058654 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073886584 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.164422877 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076815504 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.188361688 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121310624 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075375581 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.182332044 seconds)
    (120/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076859968 seconds)
    (121/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119027368 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094042887 seconds)
    (123/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.164185928 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092798281 seconds)
    (125/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.168942722 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09459344 seconds)
    (127/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117857692 seconds)
    (128/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088200408 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11307243 seconds)
    (130/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.156512416 seconds)
    (131/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121373461 seconds)
    (132/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.133925691 seconds)
    (133/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.184359713 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095446499 seconds)
    (135/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123500637 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161443793 seconds)
    (137/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113458638 seconds)
    (138/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074193375 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11275364 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086921612 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085542268 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135768696 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094473398 seconds)
    (144/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110366928 seconds)
    (145/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096856565 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136139906 seconds)
    (147/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093025994 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197452795 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074424489 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120818392 seconds)
    (151/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.145545816 seconds)
    (152/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107482333 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074748622 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086497302 seconds)
    (155/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126416938 seconds)
    (156/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07404767 seconds)
    (157/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.190327383 seconds)
    (158/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.18230499 seconds)
    (159/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.074349718 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.074982522 seconds)
    (161/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110013189 seconds)
    (162/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.217040943 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.074086822 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085929429 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110632393 seconds)
    (166/286) benchmarking ("sort", BigInt, true)...
    done (took 0.250578933 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074039253 seconds)
    (168/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.203521004 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094808041 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.099269424 seconds)
    (171/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.082640721 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097166611 seconds)
    (173/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11531447 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108754885 seconds)
    (175/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.191257735 seconds)
    (176/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.0874828 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119036005 seconds)
    (178/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075031962 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.120193363 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11621852 seconds)
    (181/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117542358 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098245875 seconds)
    (183/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.181322221 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087083049 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11068234 seconds)
    (186/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088394682 seconds)
    (187/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10359561 seconds)
    (188/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11565143 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088211758 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.232504886 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111064618 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075591024 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085198779 seconds)
    (194/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099416811 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246434778 seconds)
    (196/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085798361 seconds)
    (197/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089622003 seconds)
    (198/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.210824025 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095521935 seconds)
    (200/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100701106 seconds)
    (201/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088368463 seconds)
    (202/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.098949445 seconds)
    (203/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088164514 seconds)
    (204/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074732005 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121266797 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10142951 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119505404 seconds)
    (208/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.075255103 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.074830628 seconds)
    (210/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113703621 seconds)
    (211/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.182455543 seconds)
    (212/286) benchmarking ("sort", Int8, true)...
    done (took 0.206900449 seconds)
    (213/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100729421 seconds)
    (214/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.10023711 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117383237 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085771931 seconds)
    (217/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075527757 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110404306 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093788239 seconds)
    (220/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101605843 seconds)
    (221/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.074352411 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086612943 seconds)
    (223/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.101298121 seconds)
    (224/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.074907382 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.194877549 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086954177 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.073799899 seconds)
    (228/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.116253 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087906986 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11681586 seconds)
    (231/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08825349 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.074590616 seconds)
    (233/286) benchmarking ("sort", Int8, false)...
    done (took 0.197331099 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112840405 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.144490015 seconds)
    (236/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100671209 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075190664 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.098687149 seconds)
    (239/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088276239 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086223456 seconds)
    (241/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.112173461 seconds)
    (242/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076148194 seconds)
    (243/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111290738 seconds)
    (244/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074684217 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089422037 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137870428 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0936618 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138540407 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.148103348 seconds)
    (250/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.101227516 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096749391 seconds)
    (252/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100069581 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087133876 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075728592 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111928923 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074037736 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073787026 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116521353 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093860602 seconds)
    (260/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.108464017 seconds)
    (261/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073985197 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111155051 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138887285 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085834322 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.100746213 seconds)
    (266/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087323909 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119680328 seconds)
    (268/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.074735895 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085316543 seconds)
    (270/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.113890911 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086032275 seconds)
    (272/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.098849366 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095634017 seconds)
    (274/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093488376 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.109994969 seconds)
    (276/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.074467808 seconds)
    (277/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.101901907 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113862565 seconds)
    (279/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.187428587 seconds)
    (280/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.075431969 seconds)
    (281/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114115637 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.086050151 seconds)
    (283/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075772596 seconds)
    (284/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111925027 seconds)
    (285/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113586894 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112258421 seconds)
  done (took 36.860067133 seconds)
done (took 37.765465755 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100154024 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156539824 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096949178 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141542834 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100196269 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12678478 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095045216 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099463884 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125427957 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101871383 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.124153473 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.077118432 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122686081 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098729295 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122075492 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119914756 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124757209 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093907145 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.115240651 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085730191 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.089780838 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112049489 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.089217919 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102046227 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098948948 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095155942 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118606889 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098684053 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.11208005 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.086938579 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085840315 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120294291 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087159846 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126374638 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093765599 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.115722694 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099713722 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09649061 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.116967352 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08809632 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120383468 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087594461 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118762919 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095942262 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088546156 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111173782 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091855606 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126121152 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120827888 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11766121 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094849416 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.096910617 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123303836 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093871176 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111315749 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091225713 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.111614581 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120958376 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11586547 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093033951 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.094757376 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120345614 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086105198 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.115681481 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091188615 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122505744 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099078579 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086004522 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122497363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093396327 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112200849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0910372 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086080891 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113140374 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09754333 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123957921 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086739123 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087956804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119374425 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094376876 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11127379 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090994752 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113487724 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.088655168 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091189067 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102441381 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.087047673 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093484293 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111587615 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091410079 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118555993 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094570666 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114024393 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098942189 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087143067 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112126804 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087778952 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112579316 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089608136 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086849874 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113402928 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091502929 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120422323 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089181354 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089168122 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125389098 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087616795 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11863066 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086613431 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087140479 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129223572 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097753255 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112231103 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093904344 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085575421 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115095692 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086483403 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112094128 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087436983 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087372071 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11480411 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088129708 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115786729 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.088572269 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101188159 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.112887406 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.086972186 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116065125 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087176742 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092729702 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113593155 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088036784 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113643146 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08602428 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090915942 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113349754 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08974254 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116343801 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.0911906 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088315696 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.116565078 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091895924 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114118575 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087271111 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086436044 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.108781505 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094338987 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115644907 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089112014 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087393107 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114182116 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087559785 seconds)
done (took 16.581954794 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087842985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187907315 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149618878 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.123020474 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.134468268 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.088264681 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12452062 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120433803 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115490665 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14597752 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112169334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13330682 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.128583042 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.112275784 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.087492646 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091644569 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115739282 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10480938 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153749854 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109399254 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14898586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.111910163 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118097153 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13905685 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097958157 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142408425 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088768034 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117185134 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.091893774 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129736688 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109765368 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116101314 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088866196 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.110178404 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131145226 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096639512 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113331952 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095341963 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113109941 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088087135 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137464959 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.111812838 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.120142068 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094536513 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117119811 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09116531 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089614447 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124320253 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098925335 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136643751 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.103169205 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.144128847 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116621981 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09890385 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087099043 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12520074 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.097516295 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116027969 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088269469 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115800095 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.087481216 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091960758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129245472 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138096442 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092375243 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123721454 seconds)
  done (took 8.50433369 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105489445 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143528383 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106529241 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132102854 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.08843545 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088396977 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115129217 seconds)
  done (took 1.743974805 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089169349 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.115259522 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141429645 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.114695612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138278004 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.142223431 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098375396 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089222012 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136320115 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090206299 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140990371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130554374 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116072694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09771724 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143718054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089509405 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143319238 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089250895 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118049541 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116964265 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117758695 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110937562 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11747916 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.089018965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107241151 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115474128 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.168476369 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094150429 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090531611 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118347218 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087493411 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15780075 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107362473 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129914101 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088972016 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137001726 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107321294 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113039077 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.105981441 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120785007 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107658082 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115474364 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090869272 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087704982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120387888 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103647931 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119093494 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090470129 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09187246 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140455535 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091254099 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132536382 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089574615 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120161698 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091454958 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096106758 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125841811 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090322632 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139878327 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091384563 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137354514 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109990512 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133147525 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10998525 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11822835 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10767803 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.13338252 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092725573 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091972669 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119532565 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110342316 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112726178 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091284552 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129524478 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091811531 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11654672 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143241119 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090545661 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127972495 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09016217 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115862789 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091334353 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.143110757 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093324482 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089842818 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12015155 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092601767 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113751894 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088708985 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093314191 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114313276 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091815634 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118047626 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090308252 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092226481 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136259936 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090674434 seconds)
  done (took 11.768701486 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091046718 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.090897428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.119709159 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.092570349 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.116765472 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091273854 seconds)
  done (took 1.585638135 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118147629 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117160666 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104955985 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121104587 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.132152163 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.141079403 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.115150108 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126135899 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.110123307 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128794748 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.115347802 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.142827584 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.119875152 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12241965 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.115106759 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121405671 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.115718216 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122647411 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101600942 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122770869 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.107253589 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123312302 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096544274 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137140889 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.099798616 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122373598 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09619157 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128689979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10285543 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125620747 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096164483 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.126297787 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096951103 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125680559 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.116148766 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121619963 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095623255 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.127578516 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096350263 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099636557 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143264709 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095601802 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128471763 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.10149713 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126380403 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122967574 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.102187719 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09596279 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.140967842 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.101973154 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128573765 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094968908 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126469541 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.102040876 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123052991 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100854332 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128961115 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.115683598 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122372453 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096119451 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118830806 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100343163 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126478285 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100299229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.126202868 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101582763 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123575975 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096540192 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122732 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096470661 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128054051 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093664734 seconds)
  done (took 9.273993834 seconds)
done (took 33.83938497 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687118113 seconds)
  done (took 1.660733173 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.869016763 seconds)
  done (took 1.844886263 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.024666878 seconds)
  done (took 18.029035045 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.473544999 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.555429816 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.978592717 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17038539 seconds)
  done (took 3.151645553 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.959476777 seconds)
  done (took 1.955936085 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29012233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236720614 seconds)
  done (took 1.508923797 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.78348449 seconds)
  done (took 1.775390016 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.445516123 seconds)
  done (took 2.433323636 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332958418 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159634795 seconds)
  done (took 1.489208406 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.576566223 seconds)
  done (took 1.571600692 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.070187193 seconds)
  done (took 8.064680722 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245987534 seconds)
  done (took 1.251048527 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294874112 seconds)
  done (took 1.288899801 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.543968163 seconds)
  done (took 4.535762014 seconds)
done (took 51.550367935 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10061982 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.103733918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.127996633 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094546741 seconds)
  done (took 1.412494488 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104904218 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.097314159 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.13275232 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.096347897 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133315103 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096602706 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126459023 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107596801 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124309911 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097987395 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124133886 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096568627 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127140718 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098829285 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.1209657 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100348548 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131049469 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097245563 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101029874 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.124794812 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.094363894 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126099538 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100893329 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122631427 seconds)
  done (took 3.685682519 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101511239 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.095983737 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.124281183 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094854017 seconds)
  done (took 1.415279864 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101542941 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107538124 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.134647581 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100792253 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134909311 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106426036 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120598658 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093612377 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121993204 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100895878 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090888771 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.141697366 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133748538 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.101191571 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102351152 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116836908 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092206186 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135302866 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101920517 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128595526 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09409431 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127439839 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092109447 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108125855 seconds)
  done (took 3.693587659 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172706078 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130509898 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115539192 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.124128923 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.136198908 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142834957 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089382477 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143833104 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089125883 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132006604 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093605791 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162990758 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.103011005 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11651863 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089170467 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088277932 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129566883 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.101969219 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.119476022 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10350675 seconds)
  done (took 3.391893253 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099423356 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.093822661 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.116203595 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.092624733 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12722639 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097657648 seconds)
  done (took 1.637102438 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098684424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.090854875 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122272288 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092748046 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.122931381 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090512897 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08993373 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118442148 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091215265 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117266066 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092837809 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089620866 seconds)
  done (took 2.226772907 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.523298747 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094512827 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11983153 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116473158 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.10232266 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08881977 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.13525402 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091648467 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.148087075 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089596793 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118395805 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092725136 seconds)
  done (took 2.731892687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213991266 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101215053 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268664732 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.358225344 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163866121 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170298502 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284350911 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173286504 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.189525347 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115353975 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223773138 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135703744 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158358697 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1830743 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117268014 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161174505 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181224443 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203960911 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153635944 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209053534 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168199162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173259326 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185289162 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158007632 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116057297 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162910264 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124592085 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10667654 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177271728 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17405948 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177944045 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15454513 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144613158 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205064715 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212576197 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181756902 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286133095 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139232647 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159392358 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169828336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257472907 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118136923 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225910639 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132166411 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134797425 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18784131 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161366392 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184146837 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109467879 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146653217 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185872709 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17965989 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183945362 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140480052 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307556058 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153519059 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122054941 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187829314 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190710948 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194335462 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173255447 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123767688 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189630345 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184885958 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183032097 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.120849693 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170396495 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130012397 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178044072 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20054559 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180981178 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167507362 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187371405 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14024902 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166841025 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175206236 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128911554 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1818211 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164010244 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125992009 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12710712 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142493446 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104597514 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199692615 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128853066 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207880285 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111794859 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.178238382 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208102697 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164401427 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165630167 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168377185 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167842843 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123828605 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.122620835 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150517625 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128812447 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160205812 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137914391 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133509593 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147631345 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132117818 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127675222 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128370024 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163720073 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104730055 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170194764 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169332408 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102347208 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171812766 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154730184 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126467763 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173050221 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188595042 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138946741 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137322921 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196122849 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13417072 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13981062 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179763374 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189866291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.160415483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113713642 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171138264 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19467868 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146861141 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192736562 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146064505 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110825953 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144418227 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162935732 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161557684 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133846886 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135353511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158574453 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195678462 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100390463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143208891 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181307704 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103703259 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134534978 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118105857 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141332082 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14148608 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117843098 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140930202 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160253184 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135721571 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15936485 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159761689 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14611468 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193882503 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109886612 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156637457 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152287189 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096201287 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.176803315 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187450938 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134827296 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201038669 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170096148 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200842148 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166947456 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136259056 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152221029 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13432565 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095461222 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168802038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16468934 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167967204 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184458948 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197839734 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165972623 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155362456 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152543117 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167693017 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139338984 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160061973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142697478 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166296691 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133849692 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.127832476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.10011958 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132323804 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147330442 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107449345 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136701421 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185733808 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16701176 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192864631 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163344168 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116677765 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184512887 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12951066 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168906514 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175511143 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113764416 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18779877 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182978922 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170806818 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146820208 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176656648 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094894184 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129288222 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.109156931 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167661788 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137844694 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110272292 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148638491 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186983474 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177859637 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154474322 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207065955 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167740253 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192863088 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.125033405 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144634571 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173324842 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163032899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158661209 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136778063 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156971239 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152160984 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147641202 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191231917 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166069388 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173974493 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198462432 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.157644356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136145043 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125331958 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168823781 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146769706 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171171128 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121040831 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141564808 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156425839 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102968946 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130393758 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177190899 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119405755 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179117497 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152682749 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171124961 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131685644 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118869337 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16555309 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151146984 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090939918 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168675957 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187568248 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149123375 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162266624 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177022634 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106211562 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315760709 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190781114 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18558561 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142898176 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147290013 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137329015 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165512525 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166639992 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18231336 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152811787 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182412109 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132995566 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141081488 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14016282 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123173256 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156650556 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146027554 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108107186 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157451014 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142825012 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180508579 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117998679 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163584518 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169131349 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127577102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148463879 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147308105 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20481776 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162855021 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180160048 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126310073 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167873666 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199481032 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130338516 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104841028 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132658885 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182920301 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108933665 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164991756 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19070093 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200369053 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161502631 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168718394 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143978194 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09478787 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165290215 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123940491 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231955601 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146777946 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111750293 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191764108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149168169 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107228112 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167980492 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291667127 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150017908 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178766223 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089253137 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284958627 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12961521 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10846759 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166221125 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174679258 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140982639 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15233235 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158438513 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142283635 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135978623 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145014558 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194538189 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204635303 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165013968 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174678941 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137570794 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164459457 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13687247 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178385185 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150232206 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143555898 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137716015 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186946095 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.190146254 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138159636 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166641116 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166092504 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134142013 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172408135 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140374936 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200496415 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137450986 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167296001 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115350909 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12988837 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162285073 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190624009 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110160837 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176181654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163191935 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108036159 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133436879 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156787919 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163423886 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11803404 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133691681 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176916158 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099520355 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170150213 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184191324 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107007467 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161907956 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149994565 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111631108 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150857995 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15133809 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111547682 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171713174 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17807541 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099163178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174660388 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169065921 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16255583 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153992608 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146749798 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642151746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132874291 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185889381 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120140893 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182331397 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150139873 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161573442 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162796242 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122669536 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170819855 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154962115 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237189134 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169060684 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163112454 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107649788 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150588113 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148059581 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.107439161 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155102603 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165848849 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116081543 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142488407 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161030594 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119933338 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.139666745 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114993021 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186990513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150322892 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174066568 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182965144 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141727983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140585765 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202552875 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106403484 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.166470348 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175879886 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117511036 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155102631 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136713743 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110687307 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186247517 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129583348 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135397344 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164942756 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166253556 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165455814 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139116226 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134923852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150050012 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167905302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106350781 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158797152 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160693313 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104632751 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13410899 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160382962 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15604272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125839746 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130723995 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143794219 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175861997 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.089921496 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138767724 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289078059 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159605547 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188486363 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.14585356 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110433963 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14882634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123169941 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.159425984 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164929095 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.104377113 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138935058 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135851774 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.14466613 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147467141 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161315322 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162515806 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160171216 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200488646 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143251241 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285862833 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115317169 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162152 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.098317874 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135383364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147027231 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110757782 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150818899 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196258157 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182585459 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145565879 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.110458125 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133443892 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101406234 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13919062 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137769046 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157988324 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164198001 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149236666 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091600357 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148927731 seconds)
  done (took 76.697308329 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161769665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169912834 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165395054 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222811053 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188486373 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273298425 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230367887 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258297765 seconds)
  done (took 2.763102588 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097065623 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147725882 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.131165806 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.142167321 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.121734628 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095481147 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331409679 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.139243423 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094357263 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.149820169 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.136710422 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.122873413 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.537342937 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.093315681 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122932948 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089156525 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.121631076 seconds)
  done (took 3.763350577 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478722524 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719666208 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.477127602 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.11983497 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.13152436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.130378031 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.676030464 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190168969 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11246086 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.477747684 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.747052252 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.186934623 seconds)
  done (took 18.540879086 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129115347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121182109 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171277434 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.169920149 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.125570304 seconds)
  done (took 1.816942957 seconds)
done (took 124.763755631 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.108197667 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405978917 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074529069 seconds)
  done (took 1.612884204 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113967689 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.144921761 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115661423 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.143540012 seconds)
  done (took 1.624906056 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100244539 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105822756 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.146467222 seconds)
  done (took 1.451243109 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320990863 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168806058 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.177630478 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108915419 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105065388 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.135434255 seconds)
  done (took 1.456064312 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100343625 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.102926995 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.131096152 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.104576245 seconds)
  done (took 1.540545767 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107193017 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.080346432 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.113310686 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08508393 seconds)
  done (took 1.493079827 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116579558 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135323661 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.108360692 seconds)
  done (took 1.469464044 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130168934 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.136722549 seconds)
  done (took 1.374749168 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10706623 seconds)
  done (took 1.207413277 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119191097 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.173071345 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.181165779 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.124664384 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.182437925 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.158718699 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.095581718 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09531086 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.126921661 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095540168 seconds)
  done (took 2.460183503 seconds)
done (took 17.570090965 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108699141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432019233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.393194905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1492087 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.700891808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415185571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049642629 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153844352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173739098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095065048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142918082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675673039 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031338337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351803359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017040454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.446987903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677639175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126603702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095110398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125905068 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.031241611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124124496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096747779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094684806 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708187005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399960082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126591548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.447194917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124985985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103547723 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381489146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126553045 seconds)
  done (took 17.218809154 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101461812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185814181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106263894 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141432084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100118857 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095790292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.130164913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097163661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189919457 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126358347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114532121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12511314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099891232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096443242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146670551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095229499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126804757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095556463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125692125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096781234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1147152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125959864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096595952 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126235967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096718064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139357154 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096553787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09574952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126398265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103349079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128672812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097043424 seconds)
  done (took 4.851610419 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147480793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195270658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107023822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16199123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178237059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098382683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.206959843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154094125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162741335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127416006 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113787123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127033833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131315239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127936137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116765695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12736727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097425663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126956475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096376392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096321663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147505842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095552947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126906232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095902708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127188516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111420416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127308812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096945948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096034987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134910371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098553107 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128384464 seconds)
  done (took 5.203693032 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099282081 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.10166646 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.142655417 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.112208251 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.128351501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099638406 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.130900931 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097929139 seconds)
  done (took 2.024294941 seconds)
done (took 30.408425317 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114731045 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.101877679 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141213154 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.108304136 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.137808615 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109041831 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125928387 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108517841 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.108555797 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.137210458 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.112047666 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12582154 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09759324 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.125594645 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.110064624 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100199026 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141626589 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.105604622 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.142346939 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109436315 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128878986 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108164787 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.137638455 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.111435163 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110036178 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.141987802 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.1123141 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.133960787 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.09641822 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.128979229 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.109094712 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.148652859 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098536264 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.142758661 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101145037 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099455731 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128844788 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100859774 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141737214 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107254757 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134658793 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108204325 seconds)
  done (took 6.09568769 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.122258484 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.157693999 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118417318 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.091330245 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.13091781 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.09080214 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.15432 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088895077 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.122847872 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121473091 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.115213651 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087357263 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089043802 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.114895055 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.08684183 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.085356619 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.121614 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.085490455 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.086393547 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.119120311 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089997056 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.114106125 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089735967 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.088434702 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.116830705 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.091096187 seconds)
  done (took 3.906474174 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102776355 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.110869879 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.148486785 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182783597 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131305665 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.135986232 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105280149 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.113434061 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.145113996 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.095581298 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129988804 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125051267 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144835527 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103538076 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130767456 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111428562 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109427145 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.129848149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100970005 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148704159 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112998414 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.140275169 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115210472 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.138161164 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096360881 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097375695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133741737 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.106409869 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135577644 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10525361 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132670806 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100427901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097907703 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.139962236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101516061 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128600909 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115845244 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138497276 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105319127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.1293129 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.104010047 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098252049 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150265822 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135509717 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128769077 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102876415 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131949289 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105550677 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12895396 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114684805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137553311 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096555524 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098633979 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.129429255 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097671494 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144706064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098033129 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097359331 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140536755 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101874663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141062511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100638088 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1425916 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.096958233 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102092587 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.130280533 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.096191958 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.126615343 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.119899741 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133390023 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139668804 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.129016883 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097531118 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104221836 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13581436 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103048931 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127882204 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111270194 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138062974 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100393106 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138110698 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099186013 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099059253 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.146967292 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09844103 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129800787 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.097711697 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102982982 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.131278476 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097231263 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143080679 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.095712617 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.131257326 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110758778 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0955087 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130067987 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102335894 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.133653905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096014045 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14196098 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101809248 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.128483202 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.108179775 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096896056 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131329016 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106653434 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.133712485 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096215066 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132903007 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103554418 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096833028 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132756528 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099784637 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130630472 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106189748 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.134951292 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100486355 seconds)
  done (took 14.991206098 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240093397 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.226038926 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.197981955 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.274893079 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.142685461 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125266944 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220887284 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16577019 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097973 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168127504 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179503669 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.19329615 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.18059783 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.206085898 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.18090387 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096425553 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.146855221 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143811884 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.223686623 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.306886507 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117354373 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.138149758 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170944218 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.136714006 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.144034387 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105757007 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.148041167 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110148166 seconds)
  done (took 5.926902735 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112693545 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161074179 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.102419783 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.150477799 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123097292 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129293247 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101312433 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.130827435 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110267305 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142876187 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096323034 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134488597 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104887263 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105910024 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.130253415 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105570128 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.138285175 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098397289 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.13173843 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101950952 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10728322 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146983681 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10103216 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.128637671 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105643617 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.129176693 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09839061 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151310086 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.096447069 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.152797145 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.095071816 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13736599 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111207668 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.130350598 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097609734 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.098778029 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.131610736 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098608553 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.130234615 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09585848 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094962019 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.121158031 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095796974 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144141055 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10340841 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.123728767 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102843501 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134521291 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09811891 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.094244956 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131256211 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100736911 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.132062106 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106030517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099388233 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130416266 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100783189 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129400709 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103858112 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098863755 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127782095 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095344292 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133549883 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.101065382 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138065755 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102086421 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095057219 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.130990999 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.101366402 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.136640464 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100169108 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103414394 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.127056915 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.099263997 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132178196 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10321432 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100005596 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127927123 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096804559 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129962189 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086340993 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096722185 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.117157795 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100756155 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.128039138 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09585182 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098922386 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.135587503 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145601128 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098925919 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105103369 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130807589 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096277529 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13249558 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.095173175 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.100220946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145320803 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14932343 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097515421 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094383701 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.14369538 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.101018002 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12839777 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087657048 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106169833 seconds)
  done (took 13.247802665 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134969225 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.160225455 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099453575 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.146976071 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.131877634 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163474285 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104170086 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.136766404 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099396689 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.148348337 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.098227388 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105749102 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130155652 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112313989 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164238588 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107485936 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131909655 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11190511 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133825513 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143799774 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147755427 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.116044842 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.148074286 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097444383 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135756739 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.1149354 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.167329565 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111898156 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142558758 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.117382513 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.144677524 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.136105839 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.149155105 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101793804 seconds)
  done (took 5.548449562 seconds)
done (took 50.835357015 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.242758392 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430615025 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200240091 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.129602582 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.257489812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21217796 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.216579755 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.216748929 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.374440582 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206007577 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.468181315 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.847362273 seconds)
done (took 58.934810285 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.360382747 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.376397536 seconds)
    (2/2) benchmarking "String"...
    done (took 1.51635322 seconds)
  done (took 4.042515509 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.794934275 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.162951525 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465584388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.206546809 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200746854 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488436549 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.922588149 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.614232018 seconds)
  done (took 28.193545471 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.214892634 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.271855563 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.215804767 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.215921546 seconds)
  done (took 6.051360299 seconds)
done (took 48.578189202 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.236115344 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.281105296 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.255714244 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.188217722 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31748752 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.227007083 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.437641947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.323147889 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218837932 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.193627714 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207653109 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.218881631 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.228405179 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.486549523 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20906832 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207207941 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.254150942 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.921661768 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.633176965 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214668318 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226428104 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.239055032 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.227413402 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210842192 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.246353957 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.204363279 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20375157 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219329761 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.840747644 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209381169 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.221244638 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.600496205 seconds)
  done (took 191.041690551 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.208111966 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.250191817 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.316168851 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246934225 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.700832667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.409955923 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350828234 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.769604681 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.226982828 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.231703544 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.475299441 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208733727 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.541678468 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184809848 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.239310573 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.278091381 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.53268343 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.54041122 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.259627068 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357151289 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224555145 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.559622563 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.59643956 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.417936406 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.256830532 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.257680127 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.213689282 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.218895095 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.400508064 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.500765444 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.247708617 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.241770347 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.844390296 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071829349 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225661584 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.231014393 seconds)
  done (took 150.97423744 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.257159526 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20901608 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.210178532 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210754898 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244547583 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.211865029 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.800075858 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782256603 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.775267128 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.682116101 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.741060776 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490116554 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205612237 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306806464 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.222584027 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212564075 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227322109 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240363823 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206409805 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212024292 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802268701 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.22633358 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.285621836 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.390202302 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222664337 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245193611 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.610609006 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206815259 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245791003 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546884673 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257363721 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207144142 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.648507788 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.416674961 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.20630528 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326893583 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209321201 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245979695 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214596466 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495249711 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208476519 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212964707 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.2169133 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959184878 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213258196 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805983957 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214196834 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19850995 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208107433 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214781644 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.836055657 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.086182795 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.213139058 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21516286 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.217503183 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.215252927 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213699791 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24834964 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.85873079 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319403331 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216511801 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216459627 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248248342 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.215051615 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.21419878 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.768033429 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215777698 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.332475356 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276595229 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.432565099 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807337705 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216406003 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315728551 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331924531 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.213327079 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214483914 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215957272 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215637233 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.216948732 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328504133 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.212945343 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.650660801 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390343271 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227551655 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.651625926 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31428659 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210904567 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.684547406 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.217670931 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215835489 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.000052592 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308883401 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210942659 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.217702471 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216346016 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.649477508 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786688131 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.576544051 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.217290483 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216783422 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.26629892 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218419587 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.662495638 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782939489 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.955501359 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218446093 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331186436 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.391185377 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229421629 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.217564912 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.754891717 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.218574271 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275669413 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.217165618 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616999639 seconds)
  done (took 368.965605719 seconds)
done (took 713.372132937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.834825791 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.821887472 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.936043101 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.810455697 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.77651 seconds)
  done (took 10.320460644 seconds)
done (took 11.465561172 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.41518321 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415739348 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280217144 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417002466 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252281196 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43176745 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388329823 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237918679 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.324174293 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.30365904 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32350044 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272518335 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253550223 seconds)
  done (took 18.456740852 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554215392 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528257431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282505355 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550831759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25778306 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578739401 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.440515717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428223165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419018906 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233163964 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236774312 seconds)
  done (took 16.654886719 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.556603859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539032526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283942087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545906383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260136992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566444022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425890334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438359273 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418028915 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235347336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236606093 seconds)
  done (took 16.649092271 seconds)
done (took 52.905711166 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.228739702 seconds)
  done (took 2.37162879 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265858211 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.439419953 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.256326704 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237680861 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.231431992 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232868661 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23880759 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.239078958 seconds)
  done (took 11.286467958 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.232828847 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231872175 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.233427951 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.23277024 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.230371721 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232492253 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.228405985 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.23101714 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.229884889 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.231836237 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.232689087 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.229962521 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.230448109 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233443091 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.232631578 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.23006281 seconds)
  done (took 20.850181034 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.233143069 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.230703063 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.230674097 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230400452 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.230943299 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.231333118 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.232087899 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.231448221 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.231538417 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.232763668 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.231915719 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.23189147 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.232105339 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.231096734 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.232141506 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232676617 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232664532 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.233268394 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.237002919 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.232686861 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232327013 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231731068 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.232909454 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.2322101 seconds)
  done (took 30.719962752 seconds)
done (took 66.374028096 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.467296336 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.003426193 seconds)
  done (took 9.61664209 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.292877678 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.295303785 seconds)
  done (took 3.738230434 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235021376 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235178125 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.234821569 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.235017034 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.234290622 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.236189423 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.234418015 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.235724525 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.235324586 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.235513328 seconds)
  done (took 13.499665508 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234923061 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.23507206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.232398325 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.234615289 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235880676 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.240531874 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.235160542 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.235975367 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.235982077 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.232353452 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.23711819 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233188767 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236387941 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.236001503 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.236044209 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.234599278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.233168698 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.234476955 seconds)
  done (took 23.381570526 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249112145 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.25773311 seconds)
  done (took 3.65463533 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.365162499 seconds)
    (2/7) benchmarking "second"...
    done (took 1.275943925 seconds)
    (3/7) benchmarking "month"...
    done (took 1.344041275 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332929201 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.276156286 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.253636539 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.277053983 seconds)
  done (took 10.273488056 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238122023 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.418002119 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.527986565 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.858815099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238879979 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240595546 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090914025 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.242074261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.243620695 seconds)
  done (took 14.248589177 seconds)
done (took 79.560754301 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.260475917 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.221655665 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.510120069 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.250249629 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.241273452 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.527853997 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.278089905 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.350893312 seconds)
done (took 37.793658347 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.247423461 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.223210489 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.082884705 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.241477871 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.338259887 seconds)
  done (took 19.036148412 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.316230434 seconds)
    (2/2) benchmarking "read"...
    done (took 1.56908079 seconds)
  done (took 5.036241079 seconds)
done (took 31.473497166 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238896778 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.23656901 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239467959 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.236044356 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.237920413 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.238570788 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.236743105 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235802906 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.241018056 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.238641324 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.240237084 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.240062273 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240447965 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.236953435 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237954494 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237027806 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.239715025 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240560908 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.238987561 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235822022 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23637863 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24028816 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238653001 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238185036 seconds)
  done (took 30.87271372 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242975109 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.236960917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239785136 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239967786 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236331391 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.239576211 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240644902 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238538523 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239623685 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.241049924 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237495791 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.238346592 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240285075 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239105307 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241377685 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238830199 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240904588 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238761619 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241042663 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.237734534 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242023798 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239937257 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23797211 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24289672 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239286635 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239153761 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.24305729 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.241337943 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243558447 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.240772437 seconds)
  done (took 38.352822404 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249083058 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.252039562 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.242034093 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.241928536 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243819815 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.240839109 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242707912 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.243321029 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.243346606 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.243197235 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242344531 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.24257901 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.24380857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243341621 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243433362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.244224722 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.24186714 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.242430211 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243111065 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.244839298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.243291711 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243850901 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.243269853 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244022767 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.242931776 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243445449 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.244054532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.244907861 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.244543189 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244248092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.243902168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.243834696 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244955281 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.709661322 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244861488 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244139635 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.250813052 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.253250165 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245357375 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244185345 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.24538769 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246723767 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.245521818 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244603573 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245668062 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.245692888 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.245590505 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.245756639 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245016315 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.24621814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246746346 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.247251862 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245742148 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.245754868 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.248123748 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245725779 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245958831 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245282201 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245000116 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244130184 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245672949 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.24562151 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245295488 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.24695958 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245179033 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247258797 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246264598 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245797681 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.245880092 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2466893 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246382723 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246964367 seconds)
  done (took 91.265341509 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246261329 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244796175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243650962 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244296486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245053472 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247087483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245771129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247433808 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244592628 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246967094 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246620562 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244464087 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245464002 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247128672 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247709883 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244170948 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248294129 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244185363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.247466418 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248167352 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248244975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246393773 seconds)
  done (took 28.573688315 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247880171 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250713568 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244721878 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250070107 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246790338 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249960823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247682796 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251532162 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249775426 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246421142 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246281333 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250186906 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249175875 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246330934 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246873005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248093099 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247950019 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249318446 seconds)
  done (took 23.629589794 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.248156754 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.247078392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248972129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.248298608 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.247995527 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250281023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247128612 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249159488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.251351919 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247094796 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250400723 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25240001 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.25105952 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248322845 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250746403 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247261545 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.250287535 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248246346 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251013361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249390954 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248674575 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251893156 seconds)
  done (took 28.64732197 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251929417 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248846546 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.247624045 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247991044 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247775744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252560689 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.252272359 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.249272231 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.253047708 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.251215031 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248103731 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251456369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.251080315 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248693365 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.2489638 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249994538 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250655887 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250141536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253076804 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249650212 seconds)
  done (took 26.167006256 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248914799 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25067471 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249361288 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250497883 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250472857 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250392728 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250710773 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252084761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250926791 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251841515 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251115116 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250101143 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250062453 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251011658 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252029449 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251691034 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251488475 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250585432 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249940532 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251064767 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251813874 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251318066 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251565328 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252430145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251456704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249469427 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252205023 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252632009 seconds)
  done (took 36.191901204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254406566 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255830148 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251017768 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.253437458 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.252367321 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.25149658 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251676027 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.251386077 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254540841 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251891181 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.256150653 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.254892698 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254700558 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.256832257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256022743 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.255855734 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254529135 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252434996 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252826535 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252488698 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255281623 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256011821 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256925514 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25517159 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25197467 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.256579591 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254974583 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252813427 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255452002 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251376286 seconds)
  done (took 38.789307928 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.300167776 seconds)
    (2/2) benchmarking "in"...
    done (took 1.302957745 seconds)
  done (took 3.770564948 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25427484 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255956286 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255779764 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254159347 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253810737 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257087474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256514603 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255111419 seconds)
  done (took 11.210890503 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252530551 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25670343 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.258139829 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.257519006 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253510579 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.25301194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260162154 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.277326871 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.254617025 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.254682312 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262720365 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.26528775 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257052475 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254332228 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.254667045 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257265618 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.259813714 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.255634315 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.254883817 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.259233886 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255235426 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258572567 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257922739 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.257216207 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.256682691 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267846245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258943584 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.259826899 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25675248 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.260744035 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.256315713 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.256779976 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.256052014 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256864096 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258997064 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255822336 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2653 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279751281 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26258991 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25672245 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26067885 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.259017853 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.257638105 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259181583 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257869697 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257666353 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.261741806 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257887199 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.259050143 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.261899905 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.269080902 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257846771 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.258045617 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260746576 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258804447 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263249002 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.280184985 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260270747 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269593781 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270422125 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273381892 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.269475446 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260222242 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.257761458 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26925061 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.286211945 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266031026 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.279287821 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.259106237 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.261524496 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265093659 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271552937 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.288462248 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259198178 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259324251 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.262234741 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258892486 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262352697 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266729446 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.281984867 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259050015 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258446853 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268938243 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286204166 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259934997 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25940461 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258205594 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258692273 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261483499 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270674248 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280233643 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262862732 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.259485848 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.260950861 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260295983 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.26184191 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258997594 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260693327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.261247107 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.264190686 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260073161 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264176785 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.273677293 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259928779 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260700932 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26680469 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.264254079 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26009444 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266603184 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.265144378 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261248738 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.262399325 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268873965 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.261979413 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264361895 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.272203423 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262528541 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262197384 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262142635 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.26746525 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273879383 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.29223874 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.266737224 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26464474 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.267860168 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276829474 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262044689 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263924701 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.266964956 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26343938 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262984935 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26387395 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.266645996 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264528343 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261237108 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262523948 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.264161507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.266269341 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263918151 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265671352 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.26492974 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.264371351 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.265243714 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266934632 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264368303 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.264936511 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270304215 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.26415063 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.26562048 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265252292 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264980585 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267710979 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.264868996 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265434076 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.265163817 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26589455 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263775437 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265045355 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267876683 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.269854345 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268527013 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265179304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26993796 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265565934 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270121486 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266193597 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.265465573 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.269845387 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.269330467 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263518607 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.269358379 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.263279661 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269264997 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27689888 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.269909796 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266550243 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.267707151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26622335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266362896 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267159989 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271752849 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.276856007 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265603177 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273109617 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267103728 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265920257 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.271457115 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.266683427 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266271941 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268077962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270661892 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.279485245 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279760354 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296279532 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.267749406 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.274563726 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.267966025 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.27377264 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.270901399 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.267662568 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.270937599 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26763657 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267407234 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268157422 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268463013 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269076919 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266349534 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270774861 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.272773822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269172495 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273251504 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268527678 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268799662 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.27077295 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27298903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268746387 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.269602214 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.268426982 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.268966163 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.269450622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.272914729 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269504497 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.275956682 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.268668092 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270201127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270858381 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.268857768 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.26937335 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.273492031 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269822107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270049339 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276553319 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.288396438 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271506787 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275839223 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.291160751 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268738034 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.27136731 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.273557256 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.272205884 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273613402 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.284482916 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273777798 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270254477 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271089314 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270371845 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27382007 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275993133 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270632702 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270696258 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.274719493 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270806253 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27152617 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.273772852 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272475894 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271408417 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273766718 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276144642 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.2761856 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272939998 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.271195845 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272639567 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.273201485 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274222781 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281511459 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.275852298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.27252838 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274974685 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.272005168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.279381749 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.271725277 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272076054 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.271641211 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285271476 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.301529063 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278356194 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.273369002 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27643465 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27838804 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.274577139 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.276910166 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274196489 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27528803 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.275179895 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273635589 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.273884775 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273606331 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276898141 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276716074 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275970523 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.282831052 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27730874 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.273895289 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274698965 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274602995 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.277214697 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274007482 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.279181988 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275591265 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275146881 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274894466 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27530602 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282082942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295022944 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275727751 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274595268 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27536116 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274300459 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276526264 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.273773602 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279521779 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.286815618 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.279577347 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.286240774 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278013827 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28573175 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276143779 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279719608 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.286630767 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.276496281 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274318545 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274779316 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.275801581 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283594834 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296191468 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.278181618 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281420201 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276228953 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.27586733 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.2804743 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276938462 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2803172 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275619988 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28598358 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.301555638 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281132594 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279311161 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.277846082 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277169933 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.281369311 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.277120364 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278776691 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278473244 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.277290172 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277692717 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.276737078 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.28146786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277554696 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.282139369 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.277781533 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281054435 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285278603 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.301449953 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283321188 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.281252262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283920642 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279464466 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286022332 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.299226239 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278174574 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.277728803 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.281071922 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279381327 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279008271 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280533535 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279598569 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.280507601 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.287114805 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.278337659 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281362362 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.28023642 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280386834 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279977178 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290281199 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305804651 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281673491 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288602119 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.280149104 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.280267899 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.286107885 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.28141095 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.278571113 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.284091771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293381633 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294125407 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279967412 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281171136 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281530475 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279714735 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.283839282 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.283472719 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.281989619 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.283488607 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.27984751 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281195651 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282054184 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.284703607 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.280625494 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280630972 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.28349792 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.293110659 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.280468495 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.28237018 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281195444 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.286169187 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.28041499 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281943634 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.2829446 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281970419 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285359801 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283805866 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290860916 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.291107096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285159258 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282667179 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.282581705 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282318083 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.283146398 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284159212 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.28388107 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282125287 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284902047 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282620079 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.282845736 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282570018 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.286905696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.283254407 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287143077 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286621874 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.29392997 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28503201 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.285196775 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.286471611 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288483538 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281678938 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284622017 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290790126 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288436991 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.297908352 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.296169196 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.289627865 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.284329271 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289415341 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.295606854 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283847733 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.285191953 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.285499011 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.286479751 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.286744907 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288933767 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286221846 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290054683 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.285107212 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285141657 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293359341 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.309511129 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285569763 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28666776 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.291532985 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28552567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28785777 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.289879411 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.284966687 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292946338 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306510515 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286911264 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287605083 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.286499849 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287443599 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290909546 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288775356 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287559814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.286992103 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.286095603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287902897 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288776845 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.286866027 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286011115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286016105 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.289919762 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.296242722 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288499806 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288533713 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.286353881 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.287179681 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286435525 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290230506 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288082422 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.288630944 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286933632 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287463346 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287476986 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.289554407 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.286629973 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.288339896 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.293086202 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289070535 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291177662 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.300890638 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.300494382 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.288819022 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.288855958 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.287943084 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.289661999 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289046752 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.288214381 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288231489 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.28958615 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.292402548 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288146575 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.292115754 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293373054 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305880304 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.315997887 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290628095 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290237571 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291592376 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.294090873 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.290346329 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.293575605 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290700425 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.294518286 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298220949 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289487223 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295278061 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311206762 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291575437 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.297929148 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.294076244 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.299016106 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293150758 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288634513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.289229758 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.294647209 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.308498323 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293486883 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302203521 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323909457 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.312296653 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.291414731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290781582 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288820221 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.290247807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291014977 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292278978 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.296040042 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296085002 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.29165399 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292894582 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298193671 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292899525 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.2967969 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.295810896 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290371014 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.293446861 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.29225303 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292869094 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.294504127 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291733509 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.290770257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292419312 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.293331162 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305631308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.322520323 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.29618644 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292358436 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293542409 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295932945 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296040949 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306245741 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.306030582 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293207514 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293718734 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293941692 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293387035 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.296604281 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292907955 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.29361206 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294792756 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.29446853 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305464425 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306205857 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.298362613 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.294538538 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295226705 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.298837937 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294776686 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294167825 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293387091 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.294947315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.298554364 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299147127 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.298755091 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.297755608 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297813741 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.306938503 seconds)
  done (took 762.863055102 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293479676 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295617896 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295329434 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29547714 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295102183 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29781188 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297182025 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295748254 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295450413 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295855184 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.295589991 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296869985 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296066024 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297237608 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296459456 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297028015 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296855186 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296827144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296866808 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297285548 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296811613 seconds)
  done (took 28.425613141 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.300731754 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.297570779 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296462933 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300150079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297295727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.298805646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296946359 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300332591 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299048375 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297350122 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.300381265 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299611737 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.297414619 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.29853263 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298190208 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301755512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.300890417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29722456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.301950509 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299149202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30203474 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29889799 seconds)
  done (took 29.786914914 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.296152753 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297602569 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296954208 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.29910091 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.3011023 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.297692799 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297502717 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.301372016 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.303016493 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.298604912 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.297786687 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300344432 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.307529462 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.308891861 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.300588767 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.302947183 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.447989549 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298927366 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297300725 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.298355701 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.300426854 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.30431011 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.299800344 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.301163884 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.298743948 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299836342 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.302819079 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.302907412 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298847854 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.299228948 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304416848 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.304514912 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.300646975 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.301825431 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.299179543 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.301474752 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.308934485 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.302677935 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.302750333 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.303202013 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311657679 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.328203569 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.301564746 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.307053476 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.305740526 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.304070731 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.304092576 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30934108 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.303046039 seconds)
  done (took 65.170145494 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.304371037 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.305751498 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.302633562 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.304597467 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.305745093 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.306208869 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.303585813 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30596309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.302844396 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.303042944 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.305306293 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.302285933 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.30404297 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.305923656 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.306985287 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303251079 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.304047334 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.3022664 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.304429134 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.304353564 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.304372648 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.306166759 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.306207959 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.303633133 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304726388 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.304127417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303133043 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.306784655 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.303743935 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.304035885 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.306180402 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30710187 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30655995 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.3047602 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304915403 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.306922506 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.307587434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.304421418 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306478407 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.304726379 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.308491228 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.307990194 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.308075979 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.309787887 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.305136768 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.305100381 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.304799735 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.304215319 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.305212779 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.307701387 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.308393933 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.305844173 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307380228 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.305491137 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.308726169 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30728789 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.304540865 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.305988173 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.308507635 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.305000137 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.306350965 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308426771 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.305946106 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.307457562 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.307196685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.306149275 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304854672 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.309428921 seconds)
  done (took 89.996187398 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304286566 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303673382 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306479544 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30682703 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305083931 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.30693753 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305901546 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.306142939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308312423 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305476076 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306330739 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.309927598 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.306117517 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.31105524 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306791705 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307655149 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306853944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307133216 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307830109 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30712426 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.306575883 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305937195 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.306444635 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306863615 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308990102 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.308928242 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307389883 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309321248 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306759605 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308355438 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308476003 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.308388965 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307763017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30868278 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.308381725 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.307494391 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30730004 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309135122 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.308472176 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307550712 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307680186 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307660428 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309244935 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30980881 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309834644 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307910347 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309184437 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.309635275 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.31281639 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310550402 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.309067581 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309050598 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30875064 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307954212 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310539809 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.312458124 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309662275 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.310379043 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3105038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309732425 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310362598 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.314318452 seconds)
  done (took 82.325849182 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314434577 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313019627 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.312116357 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.31214282 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313709418 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313503886 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315639109 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.313566208 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315703424 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.315792712 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314749174 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313326774 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315037496 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31758557 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.313853543 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315787775 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314641977 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313683208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31361745 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313405722 seconds)
  done (took 27.503366684 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.312755717 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315591846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.313283305 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313844809 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.316761625 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312858945 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.315374598 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316540868 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313436747 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3153492 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31727191 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316624505 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31306829 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313270993 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315788828 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314145562 seconds)
  done (took 22.255142613 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.3143568 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.315830469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.311384048 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.313399079 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.313703191 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.315322479 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.315128376 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.313331743 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.314227723 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.317157582 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.316878919 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.317360415 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.317343107 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312775431 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.313203874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.316997758 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.315190076 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.314207284 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.317641316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.313807488 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313306314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.315049346 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.317446417 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.31613793 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.314597222 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.315611647 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.314182348 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.315689372 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.314849206 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.317300636 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.315169781 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.315701854 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.314810284 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.315111479 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.313392502 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.316747388 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.317741717 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.317831159 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.319439187 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.320344509 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.317936523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.316323314 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.318035242 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.319501633 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.315912941 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.319273909 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.316603275 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.318051952 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.317006165 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.315737146 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.318615761 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.316023432 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.321239337 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.319850867 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.319595944 seconds)
  done (took 73.611606075 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319733963 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31934395 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.316682635 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.319385164 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.317980055 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.317421503 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.319651555 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.320547247 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318562815 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319326452 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.318727914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320529266 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317141428 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.320597435 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.318429571 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320278766 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.317810993 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317270526 seconds)
  done (took 24.962800085 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.318519626 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31768806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.320169856 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.318536394 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.318814753 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32245521 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318869399 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.32080527 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321432092 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.319052184 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318361028 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.321111298 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321498217 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.322118762 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.319212868 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31915242 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.321560634 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321590567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.318625554 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318526249 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321960994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322819975 seconds)
  done (took 30.267533548 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.318417456 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.318426878 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.316946942 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.334777629 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.339577322 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.341196308 seconds)
  done (took 9.194168988 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32900524 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322021594 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319973 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323525374 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32294186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320622742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320775144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321061859 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322889304 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320896322 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320109265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323142245 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323343448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319545575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323415853 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325121771 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321105502 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321479096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32196595 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324822305 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322074375 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322666018 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322543566 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321121532 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321595634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322110298 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325445441 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322496082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321054267 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32501348 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324185731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322063165 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325187835 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323142612 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325189658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324040901 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323776742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325942438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32530096 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322404797 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325977645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325441671 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326527456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324358353 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325090903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322220236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323201836 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323387714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321306187 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326189554 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326339509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323001048 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325982222 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326151304 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325549507 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325673393 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323933134 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323986804 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32579712 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324233121 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324188753 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326052886 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324076795 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325312937 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326726725 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326648191 seconds)
  done (took 88.623322614 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323480872 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324272143 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324187208 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326824217 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32497669 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324590461 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326189995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324849335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323490346 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324779141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32614921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324961517 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325365909 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32636147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324845784 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325018063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32608435 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326033853 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325796335 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32900453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326072747 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325315743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324523463 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326290957 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32482476 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327508647 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326936467 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327486632 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325422608 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327197269 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326945064 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326154984 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327303073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326436995 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326534225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327873751 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327277767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325763939 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32673525 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329523017 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326432568 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328393999 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327052373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32775844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32770614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326725234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326452968 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327589796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328267017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327028388 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328915517 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328374619 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327900241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328581763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327473983 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327542449 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329033751 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329787367 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329025188 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331136238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328969549 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328237747 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330440882 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328109468 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327409993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329924681 seconds)
  done (took 88.804850798 seconds)
done (took 1782.413852194 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.406203809 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.349531792 seconds)
  done (took 13.98720041 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.490398838 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.445304334 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.326167877 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.346875552 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.317550788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.322693823 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.337040884 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.319364212 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.327673914 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.326188763 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.326984929 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.522088524 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.334834461 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.318006616 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.327425521 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.419742434 seconds)
  done (took 43.055917115 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.357952422 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.332958744 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.461314973 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.352351547 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.356663267 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.532245264 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.389034151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.332562096 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.524996938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.378245233 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.132806216 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.357720117 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.332091081 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.61002871 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.353160692 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.530664745 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.603522957 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.047788556 seconds)
  done (took 31.21987223 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.838658698 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.357091523 seconds)
  done (took 9.430415353 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.353733189 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.333115224 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.334073565 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.32835663 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.322798201 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.315001587 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.331806482 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.323334931 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.420435181 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.471129219 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.335970388 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.341657473 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.347748885 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.334529886 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.335774357 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.373422739 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.485408549 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.336703188 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.333369232 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.338980816 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.335466175 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.445163415 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.378530894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.336358082 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.472526911 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.430881252 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.337734805 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.340970564 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464075008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.33559376 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.334817624 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.335441243 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.334203067 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.985039083 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.860831116 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.362179964 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.352780144 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.34556491 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.334590527 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484947613 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.337052207 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.340189695 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.327377519 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.84477038 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.4961241 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.461916765 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.713454785 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.336847971 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.337494627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.405858961 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.337591552 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.33608822 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.367449067 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.154129065 seconds)
  done (took 112.74876403 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.36970024 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.721953609 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498925613 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.354634337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.094299927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.957999454 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.347076103 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.659618192 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.358976576 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331080615 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.622329824 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88759067 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345480934 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.353038056 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.530730026 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.325816124 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330779197 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.024882511 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.345202508 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.324841294 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861476189 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331482262 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.339165126 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.482480222 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.369975914 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838339634 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.857160269 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.828161366 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.346191221 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.328526666 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839464175 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.3566243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.397941255 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.326725941 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.614458981 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.744913837 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.720691543 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.333137419 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330660022 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321879847 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.351202709 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.831437443 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.724672174 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.33058442 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.346131562 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827208685 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.33124665 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.334674163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.337130745 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537812283 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.957197718 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.332333833 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.928454921 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.332444848 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.882146904 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39342287 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378566947 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.869342247 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33249709 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.453758651 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394959695 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.334085126 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.338924692 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.339383946 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.329795124 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.730461016 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.633328173 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.334374434 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.731200744 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.833514829 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.351146002 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885920219 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.149662241 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347718273 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.382618081 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33399252 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.874642764 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879774999 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344425714 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332289911 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721281494 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.335420093 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.635255375 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.347909543 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325471837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874851064 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.338008782 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.386540881 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.333701984 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.343913233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.919600685 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337577326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.641329696 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.354507451 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.334542267 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.334615499 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.342459874 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328956285 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.335227978 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.337347591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892740469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.356520502 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.47179449 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.356039166 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335001048 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.335621468 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.333382997 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.337871379 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557786437 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.948361743 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.341449557 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337037975 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.33129671 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.358400991 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.497078274 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.34106121 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.676062813 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327471542 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.349227051 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.339403991 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.980200017 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.348886113 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328422242 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.338715719 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.279588273 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54145234 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.357505694 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.329353404 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.338497382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.355538643 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.697244734 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349793391 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.391708105 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.336720396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073774078 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.391560657 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.351364195 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.623218259 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.337563454 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339032102 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332276383 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339167491 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634469724 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.62078541 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.510684892 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.338425414 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.330919099 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058350486 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.386172865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478579819 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360933701 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.385691294 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538347772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.459475705 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.338791141 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.901634144 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.338655313 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554630726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.337152406 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639978087 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86977324 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.35733789 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346362859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.078756258 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.084913065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.995452874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.341394063 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.631946458 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.328652441 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.819563448 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.341095742 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.341389179 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.728544228 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.340802787 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337255209 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.339972312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.34037453 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.490517234 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.520078518 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.991139585 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.340608185 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822240386 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.398421411 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339472078 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.347301349 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341020988 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.688767889 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347257804 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.34161859 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.357777668 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.341805012 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.343494328 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842425152 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.204312926 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.341595886 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.495761011 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009028849 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.349606917 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.343292642 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.033977299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.998795007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.874498448 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.368660794 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.681335064 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.341048913 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.381748987 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.006788208 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.413133286 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.838062655 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333851012 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.343892551 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.972459585 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.352678087 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.421380024 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.337322365 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.343041704 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899579811 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.350200075 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.348118593 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.789107677 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.364446281 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599520933 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.342107163 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.394314186 seconds)
  done (took 1113.355762754 seconds)
done (took 1325.032794545 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.341775182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.343827045 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.332108883 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345106478 seconds)
  done (took 26.614786493 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.356357987 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.353025232 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.351855991 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.35118074 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.363951925 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.353000345 seconds)
  done (took 9.387033437 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.495005508 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.345419584 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.3462435 seconds)
  done (took 19.442100729 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.58428627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.719834901 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.717512629 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.79460684 seconds)
  done (took 11.073264119 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.353146497 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.35226277 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.352908366 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.364310335 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.356282551 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.359604319 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.365162882 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.364318538 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.358635132 seconds)
  done (took 13.481175948 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.355251559 seconds)
done (took 82.607474963 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.123348137 seconds)
    (2/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.343142881 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.935116144 seconds)
    (4/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.452474127 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.225847824 seconds)
    (6/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.368326887 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.349188893 seconds)
    (8/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.218882493 seconds)
    (9/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.46685031 seconds)
    (10/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.576101623 seconds)
    (11/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.553999971 seconds)
    (12/286) benchmarking ("sort", Float32, true)...
    done (took 6.354689043 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.61551424 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.882227456 seconds)
    (15/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.453216533 seconds)
    (16/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.348175376 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.40408883 seconds)
    (18/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.339291593 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.417035332 seconds)
    (20/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.060897988 seconds)
    (21/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.16926705 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.054334378 seconds)
    (23/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.326148158 seconds)
    (24/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.353025307 seconds)
    (25/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.469387504 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.335516384 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.024616557 seconds)
    (28/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.336837542 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.36642348 seconds)
    (30/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.3454407 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.341099338 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.30412344 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.341549444 seconds)
    (34/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.818013486 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.484255586 seconds)
    (36/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.446461735 seconds)
    (37/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.454449326 seconds)
    (38/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.336537885 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.832306219 seconds)
    (40/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.226542196 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.080130995 seconds)
    (42/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.370503198 seconds)
    (43/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.03990947 seconds)
    (44/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.802912434 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.334468712 seconds)
    (46/286) benchmarking ("sort", Float64, false)...
    done (took 5.673577273 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.329495219 seconds)
    (48/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.082530398 seconds)
    (49/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.116603921 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.455619124 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.899935666 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.350068384 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.611877912 seconds)
    (54/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.340352253 seconds)
    (55/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.104785422 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.360396494 seconds)
    (57/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.439955203 seconds)
    (58/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.620362858 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.412387226 seconds)
    (60/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437589208 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.399394727 seconds)
    (62/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.380774796 seconds)
    (63/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.355606103 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.868418109 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.366382791 seconds)
    (66/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.381650678 seconds)
    (67/286) benchmarking ("sort", BigInt, false)...
    done (took 6.351533324 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.978059715 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.370648645 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.487043905 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.908115655 seconds)
    (72/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.542189591 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373927612 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.160996481 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352520565 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.251139215 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.618591954 seconds)
    (78/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353734354 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.388406948 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.456510856 seconds)
    (81/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.756199594 seconds)
    (82/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.354089518 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.730738013 seconds)
    (84/286) benchmarking ("sort", Float32, false)...
    done (took 5.427065219 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.906815096 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.348501134 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.341782047 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.253361544 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.343516924 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.171408205 seconds)
    (91/286) benchmarking ("sort", Float64, true)...
    done (took 6.372939882 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.359982058 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.640522625 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.363084685 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.472512219 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.34047257 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.439522433 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.794464888 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.589091921 seconds)
    (100/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.774217194 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.348060772 seconds)
    (102/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.436291656 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.184750881 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.362355053 seconds)
    (105/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.36884232 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.356477665 seconds)
    (107/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.42394598 seconds)
    (108/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.117610524 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.349929293 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.094548069 seconds)
    (111/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.791577238 seconds)
    (112/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.342227238 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.341455538 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.948584167 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.353292327 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.903427371 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.380631821 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.34145072 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.153295673 seconds)
    (120/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.354687815 seconds)
    (121/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.385659183 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.63643515 seconds)
    (123/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.754780749 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.238514282 seconds)
    (125/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.343061654 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.605652039 seconds)
    (127/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.47779167 seconds)
    (128/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.354714177 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.368258183 seconds)
    (130/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.416939792 seconds)
    (131/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.375349064 seconds)
    (132/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.77888126 seconds)
    (133/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.41883953 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.468215861 seconds)
    (135/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.523035245 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.340763259 seconds)
    (137/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.43119427 seconds)
    (138/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.343773318 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.36362616 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.299562298 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.208878605 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.139354957 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.38770471 seconds)
    (144/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.442100591 seconds)
    (145/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.444139316 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.250530951 seconds)
    (147/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.405186593 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.343413494 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.336215216 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.374073885 seconds)
    (151/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.842981037 seconds)
    (152/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.04516027 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.084338725 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.27857353 seconds)
    (155/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.880931893 seconds)
    (156/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.345975056 seconds)
    (157/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.627641991 seconds)
    (158/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.664363241 seconds)
    (159/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.55566878 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.342021585 seconds)
    (161/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.460510274 seconds)
    (162/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.628481848 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.363979805 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.813363382 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.759136619 seconds)
    (166/286) benchmarking ("sort", BigInt, true)...
    done (took 6.376254506 seconds)
    (167/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.334742764 seconds)
    (168/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.900985744 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.38805337 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.346908055 seconds)
    (171/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.760043497 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.426861383 seconds)
    (173/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.428335927 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.8391411 seconds)
    (175/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.48209562 seconds)
    (176/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.397214933 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.385010637 seconds)
    (178/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.697698063 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.466466201 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.955536253 seconds)
    (181/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.378912232 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.404296305 seconds)
    (183/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.346109693 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.331794601 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.223371207 seconds)
    (186/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.362789798 seconds)
    (187/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.092256179 seconds)
    (188/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.426417581 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.360244889 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 5.44968709 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.078623663 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.336864618 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.437686479 seconds)
    (194/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.346908194 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.368311233 seconds)
    (196/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.382346629 seconds)
    (197/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.918782973 seconds)
    (198/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.525779655 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.50119286 seconds)
    (200/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.97468089 seconds)
    (201/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.374076423 seconds)
    (202/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.347776403 seconds)
    (203/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.415107498 seconds)
    (204/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.071758498 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.411443756 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.923149596 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.584882334 seconds)
    (208/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.027624344 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.953591961 seconds)
    (210/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.42969785 seconds)
    (211/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.401462284 seconds)
    (212/286) benchmarking ("sort", Int8, true)...
    done (took 6.362184613 seconds)
    (213/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.528760347 seconds)
    (214/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.458502322 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.807579186 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.401023625 seconds)
    (217/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.621986914 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.39840648 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.243433103 seconds)
    (220/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.349648257 seconds)
    (221/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.314053142 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.121323735 seconds)
    (223/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.305149824 seconds)
    (224/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.5877606 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.377156745 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.180542275 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.339681961 seconds)
    (228/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.416373817 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.47438346 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.788312525 seconds)
    (231/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.502947052 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.348562656 seconds)
    (233/286) benchmarking ("sort", Int8, false)...
    done (took 4.414241161 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.374359287 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.889681896 seconds)
    (236/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.910718965 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.341614654 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.681182993 seconds)
    (239/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.416215626 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.600351899 seconds)
    (241/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.406217976 seconds)
    (242/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.354460178 seconds)
    (243/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.381675943 seconds)
    (244/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.689802695 seconds)
    (245/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.447338326 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.020046367 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.394718849 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.362797334 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.398045851 seconds)
    (250/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.060898389 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.753611934 seconds)
    (252/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.350481812 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.378170111 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.472880377 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.399144315 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.146331866 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.34416318 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.378068417 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.393028278 seconds)
    (260/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.250735167 seconds)
    (261/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.892693136 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.384329825 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.064748966 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.393867744 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.35685021 seconds)
    (266/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.212506689 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.44164686 seconds)
    (268/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.061934074 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.448531488 seconds)
    (270/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.451542042 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.479587947 seconds)
    (272/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.350236946 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.20455894 seconds)
    (274/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.388868364 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.410223065 seconds)
    (276/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.699703716 seconds)
    (277/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.351173536 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.488505222 seconds)
    (279/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.746391664 seconds)
    (280/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.35255117 seconds)
    (281/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.510213879 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.393060306 seconds)
    (283/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.355539622 seconds)
    (284/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.626181373 seconds)
    (285/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.405391787 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.38425007 seconds)
  done (took 960.195000499 seconds)
done (took 961.453109352 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.399471641 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396496418 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.376320849 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.398031275 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.488941707 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.552696623 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.387306408 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.379503022 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.425295028 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.425262448 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.376388481 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.552050048 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.377983078 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.377601896 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.376491851 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392308396 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.584937845 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.379929907 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.393354382 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.385664813 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.393410154 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.375833518 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.426128882 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.552706278 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.381360165 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.380558136 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.381137969 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.397623583 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.490496034 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.381752124 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.379107003 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.389963692 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.519819462 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.368155694 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.373510018 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.399100423 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.389368793 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.386771967 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382570347 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.410191928 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.057023779 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.380326991 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.381162039 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.380483827 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.380580191 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.383157343 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.382363821 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.385221797 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395289689 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396208882 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.963849401 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.3841396 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.383101524 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.380549417 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.390584096 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.381525901 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.383143158 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397675163 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.400522391 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39775403 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.511836328 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.378937959 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.38304429 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.39739797 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.388629411 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.002230934 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.365671593 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.385734178 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.97964971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.377870852 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.004060217 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.379871922 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.383614645 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.395378199 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.413202055 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.526595954 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.367814419 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.380763251 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.390592527 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.379844268 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.391821602 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397119096 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385993417 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.381742312 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394891275 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.559405893 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.391147779 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.384254309 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.390016978 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.400943134 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.388228067 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.39351907 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.385552808 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.377180354 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391162865 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.386145987 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.386468063 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.385676809 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.386804389 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.392189914 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.982391271 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392665352 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.380742956 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.381237626 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.383143509 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.396569677 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.984346061 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.374498346 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.406211146 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.430900468 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.38460514 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.519085987 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.378852879 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402244402 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.393124398 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.387248275 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.379274475 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.526083061 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.966487054 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390694097 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.386647418 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.383384783 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402901317 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.386177366 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.381935696 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.53946762 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.37708878 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400799774 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.505722699 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.393810926 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.417412906 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.384717895 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.388556142 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.416344675 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406813717 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41654892 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.388864976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402738517 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.402315012 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.381824611 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.396098193 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.39696921 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.38646618 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.390925732 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.380966793 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.416738024 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400827674 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400153491 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.407556503 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.507533218 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.383157577 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.528609153 seconds)
done (took 235.596529106 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.444652512 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.379786465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.474607639 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.387567156 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.487778373 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.482782709 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.386127503 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.385147634 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.385475644 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.763366966 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.386764504 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.386039386 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.382385217 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.385114403 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.465194931 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.38974599 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.384452965 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.726978195 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.38270997 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.45531886 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.382896505 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.383916148 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.388462467 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.765521295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.379482697 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.385820701 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.454335779 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.388383156 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.731821423 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.37846169 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.383756995 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.729260335 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.474323059 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.406545209 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.400553765 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.397043167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.489282908 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.405562216 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.466426129 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.466227165 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.477170409 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.425265659 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.38090123 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.381388021 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.390847199 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3868096 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.386836438 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.416187484 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.386225231 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.390139793 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.728587174 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.399762522 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.38914143 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.388169225 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.388536155 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.415721448 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.389489454 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.388432926 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474828865 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.388945488 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.449657384 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.769013273 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.767681298 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.392094086 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.385977385 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.389952039 seconds)
  done (took 151.991752963 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.456171873 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.460073742 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.509308284 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.383707865 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.440313269 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.514503826 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.380373114 seconds)
  done (took 11.430671796 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.394390798 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392650636 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.439508822 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.440450122 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.389543623 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.569289145 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391897123 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.400329006 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.389432808 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.442307224 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.400536738 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392141074 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.398090556 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.380694965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438783562 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.400104885 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.503594839 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.390609144 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389524433 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.538993679 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389227991 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.400250635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.441221719 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.400490401 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.401978005 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.396348201 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.204243422 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389414855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.393319927 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.395161555 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392130777 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.470003848 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395390522 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.387184922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392196207 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508117125 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.39248204 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392000482 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.395835868 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.38853942 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.395613849 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.395220823 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.397361076 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.39266085 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.39498831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.413730747 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.396249957 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.397336495 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.394028257 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396353207 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.440860469 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396282216 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.394088588 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.392861882 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.450567009 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.404967779 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.395431381 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.395036563 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397100189 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393527058 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.542349177 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.440360986 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.395561867 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.440739587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397164632 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39627567 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.397539827 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.396847975 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.446995677 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396868145 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.443366656 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.393562687 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.58438691 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.415770398 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398070592 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.395976122 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.394330348 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394113958 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.392717043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.39822399 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.395551674 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.393830881 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.398796045 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395471071 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395924025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.558724762 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.504099875 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.394332644 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.404270441 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.399332472 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.396131391 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.446938915 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3973211 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.394955836 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445245429 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.50956709 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.448437799 seconds)
  done (took 159.473237344 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.400806282 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.40249233 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.39615968 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.41773313 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.395638844 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.394629232 seconds)
  done (took 9.698996736 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.398722184 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.400291451 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.399773148 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.399368143 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.39436799 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.406431597 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.394753681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398332209 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.400271907 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.401862412 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.407874362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.398495949 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.407021677 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.396291214 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.396684192 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.399268613 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.394216553 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396853772 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.399462307 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396609172 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.499327595 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.397174589 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397178831 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.398576254 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.411743142 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.403250501 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.404659789 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.40317443 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.401077606 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.404634898 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397855368 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.408823703 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.401342389 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.404569594 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.401416935 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.398025594 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406406416 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.400913815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39915663 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.408088904 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.400655854 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396653277 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.402709349 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.399647787 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.399239345 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.404175521 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.404763365 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402286984 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.397405082 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.40007543 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.39792436 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.402615659 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.40759635 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.400791076 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.396337731 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.418161494 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.404681783 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.395938575 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.397346293 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.401183869 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.405756836 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.40916259 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400404894 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.403128774 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.399886383 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.402880635 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.399258171 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404043805 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399759889 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.404170299 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.40247723 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.400549211 seconds)
  done (took 103.292115352 seconds)
done (took 437.172387664 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.516170395 seconds)
  done (took 7.813455428 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.613831047 seconds)
  done (took 7.913865798 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.022809251 seconds)
  done (took 24.329717679 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.49054174 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.50950748 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38470853 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.389958637 seconds)
  done (took 27.073730235 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.643904564 seconds)
  done (took 7.943193698 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.396596648 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.404556035 seconds)
  done (took 14.103113091 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.654304663 seconds)
  done (took 7.953124543 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.465463858 seconds)
  done (took 7.769395209 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.405975188 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.416241025 seconds)
  done (took 14.138862708 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.381016656 seconds)
  done (took 7.6805181 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.987851043 seconds)
  done (took 9.290230604 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.410726502 seconds)
  done (took 7.712783378 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.462156767 seconds)
  done (took 7.763102113 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.244609726 seconds)
  done (took 10.544879961 seconds)
done (took 163.331077697 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.393471775 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.396683902 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.396217942 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.395844467 seconds)
  done (took 26.881741288 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.438026983 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.457448983 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.440496008 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450284844 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.441586193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.439536219 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.431992336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.432277712 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.448060016 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.440570691 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.441272308 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.446794975 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.438972948 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.430915262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.441195827 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.441608359 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.451151374 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.44138778 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.431023044 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.441968622 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.406464674 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.449071655 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.44144222 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.407729735 seconds)
  done (took 35.834356396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.922137959 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.47468642 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.556429332 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.454396091 seconds)
  done (took 7.708120728 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.457774477 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.459810559 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.471287689 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.510452591 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.545895333 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.468975841 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.433779488 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.427806904 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.415064837 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.460789023 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.535149071 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.475982649 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.551788171 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.407417839 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.588672358 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.407815382 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.405502919 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.459358883 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.511424925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.527356728 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.408306692 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.460302717 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.462249925 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.476866117 seconds)
  done (took 36.632132431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.408140237 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.425010077 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.407370079 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.405032694 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.415486168 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.407115637 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.408542416 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.409962483 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.408311533 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.414320904 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.406009683 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.419159213 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.407513638 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.408168511 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.413526788 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.409437769 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.413390671 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.408272735 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.408070497 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.414797438 seconds)
  done (took 29.521427809 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.398215941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.251716267 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.750925178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.650941417 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.400150843 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.394339221 seconds)
  done (took 28.150651257 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.486127848 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.634557412 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.397858728 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.813645625 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.883856599 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39827834 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.403694817 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.687589204 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.050003548 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.036682175 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.47139753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.482668541 seconds)
  done (took 21.054518733 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.418569494 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.401594554 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.412565044 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.418771986 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.472466488 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.407464884 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.413255076 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.399483674 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.471626767 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468279077 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.411974402 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.473606782 seconds)
  done (took 38.477832614 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493209585 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453020164 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.545827499 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.493987729 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153671063 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609481323 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450229436 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.215968182 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411004387 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679877446 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408424259 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494688482 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664700471 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406507908 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42435104 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.54567025 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633630669 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941029188 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398952614 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.007273712 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434138481 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416799924 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.098931558 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672112436 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622429717 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.390869088 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.668117585 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.18443298 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73985926 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422782248 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417975861 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407883209 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681264801 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133046635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504685987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655736659 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405425157 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.966791386 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.405934056 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.925052843 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429491237 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410411445 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420073082 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407974749 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344465839 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40935119 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234397059 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.415584016 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.120516071 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40825921 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711648204 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505840907 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.411669003 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.982479407 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44588197 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416941299 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.41351142 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505211282 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983650754 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479398686 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426969171 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.345789292 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428937178 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.925953948 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087073082 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.406475972 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.413559334 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413782326 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34675027 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.026144855 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428316199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549782675 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.426357465 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072950478 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189160753 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405927784 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.344092066 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99150794 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403412644 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.363076103 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641319798 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184518105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351105811 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.358884388 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347237902 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208456133 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420729888 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.955410016 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429865148 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.226995176 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662457844 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429457455 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436024864 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.636747242 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.294004141 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411252532 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.406469232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531046068 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42578814 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23500603 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34839846 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.408271231 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669670842 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.625400965 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425402346 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.550956301 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984843011 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416799979 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.427833024 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412064073 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680655004 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.074832485 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430522525 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.503506223 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43221059 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.192416892 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252445075 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417749462 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.417706003 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431875201 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686972944 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.282270035 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307847241 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482566043 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419590037 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415191932 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.03364407 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267296153 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.298226521 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.653053548 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444729623 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.426895572 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.41248302 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376931789 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.403422241 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419078083 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.193216738 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640228277 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415480126 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709869453 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348267335 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555680619 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42317626 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.63080892 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.74507384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.411650665 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676836767 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424543979 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430695402 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427720842 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433221159 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517197732 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437900025 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.43026211 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676486016 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.419471867 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.421021123 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041085574 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.196070231 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419122856 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.421634801 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418700638 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073683427 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392651411 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415402675 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31169 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.430967626 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484341717 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423138859 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.667626386 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.534292024 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420937834 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.415470349 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.430372636 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641783289 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427316124 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.031683303 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496572156 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982051909 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080633934 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43232149 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.353496226 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.128818282 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.111534276 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420110691 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.617507004 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41809516 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668951171 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435337315 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414266912 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080456203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421211071 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.947602871 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.425342173 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430458421 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.42349558 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418966039 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.528465097 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516668957 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436582292 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.431586584 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561440836 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.433305257 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.354183111 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.936748195 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42535854 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.41984003 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.197394524 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453733797 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.066198729 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294315886 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67431982 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422010125 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716582964 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.067253721 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.45381438 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.416489647 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43897609 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423040331 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.462061565 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41865936 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.429687709 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.044093283 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.872270762 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980429201 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224016676 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01305625 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.974009334 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.434063761 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303906388 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254460258 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356765355 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080011202 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637820492 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234923355 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378806128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980998748 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.757222511 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.302270863 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7279279 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653961845 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.934597542 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.424839597 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732391676 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636190084 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454501596 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423161874 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351717569 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.69808131 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083290153 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43254615 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503720798 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245583274 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435263568 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.202083509 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.493906385 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.271675222 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894471259 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.971194276 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.8168212 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418651377 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427758686 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400216327 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434781702 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954056198 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117010387 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422173713 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.996128038 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364481975 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676888749 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.437728534 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.424570996 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.053858799 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.438422761 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.68370181 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729659596 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36166985 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427531059 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038163816 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.286399808 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.429480418 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422912444 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255720946 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442081627 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759625767 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.438549631 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.529075274 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434915001 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.359688143 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358939589 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.119484943 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435225679 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399136809 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944568643 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.414001172 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43706384 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430653166 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277032548 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682482121 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.430084132 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090702899 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654464826 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425735712 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451141899 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.428140362 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425314907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.411249412 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307721562 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66043096 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468733467 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.653112221 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.54628306 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.320521442 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.454654604 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640225618 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.32266904 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441931888 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711757119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.138367598 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.43676068 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200291904 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443994722 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444772912 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.447379212 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423849847 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436161489 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499235282 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678866247 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.440844908 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.436149989 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905760547 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444319314 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43157233 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.443181337 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522779148 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.566959945 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.481711641 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.192634392 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089689877 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220728856 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098518677 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733976022 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432833786 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431405696 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362845264 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56946463 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957417122 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70421435 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547458905 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.423734359 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442699862 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449287474 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436458639 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642846643 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702084204 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.302816747 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430635559 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.095142757 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.324890135 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43792154 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.638537116 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959971461 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018646977 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537694523 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440139478 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262545396 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724550508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.521286139 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431448331 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025710493 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.452782818 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.273569066 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.428087055 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435772851 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580605645 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737720428 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176588235 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.443830974 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.581482348 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.206001344 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083561339 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693234403 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.031648326 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.689432196 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11123021 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220146045 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689137178 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494018442 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686736396 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.554326473 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580010143 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.440412526 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.317562022 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434186934 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28379918 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.142030716 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.442621234 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1102508 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689688746 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.430585741 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.441458928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457759159 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.44159346 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.657081081 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246618973 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660214171 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442588816 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441633043 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.426382614 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110795648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745232658 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372279842 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.42806876 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716602469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670192172 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463467309 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.885509425 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.145371774 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037832984 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.402249167 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453869306 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439367381 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22870115 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106986795 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.560734764 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972484741 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087988303 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44182318 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711359473 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.441520078 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434942037 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712634687 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.438836276 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446876492 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691914896 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.113493681 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338268437 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.455524686 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098789556 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.37380909 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.665858996 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45503251 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374939895 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427754367 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.932529501 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459729407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557275155 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439392109 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.438984542 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438685939 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.214624822 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728879999 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.434085692 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.470615468 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.420629649 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443635591 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534424638 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060108679 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432833562 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.237251465 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.788767297 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693082639 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445953431 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.422707156 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.441831733 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439111078 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164530653 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407281598 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425810115 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029916139 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.44374544 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.450417763 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440832317 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.655142683 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649559774 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.456260449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697079074 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440799766 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454000741 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.343116498 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213153434 seconds)
  done (took 1699.038578442 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433852884 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.453525814 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.449228239 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.48070595 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480904908 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.524491596 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.493673556 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.53712088 seconds)
  done (took 53.192239387 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.434161053 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.592438512 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.463073598 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.441937609 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.446449473 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.442691175 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.948917279 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.431029071 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.43555971 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.444835292 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.449330107 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.434102883 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.169272881 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.435767795 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.441399012 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.441681843 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.436248021 seconds)
  done (took 67.234408209 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.440138798 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.096450737 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.481339361 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.435625572 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.363864914 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.451171914 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.160088126 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.50760085 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.43297273 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.554757049 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.090719118 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.430859675 seconds)
  done (took 82.786901421 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.449677379 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.449674286 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.446828763 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.448099508 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.44556149 seconds)
  done (took 8.579561028 seconds)
done (took 2136.396044683 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.442808066 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.278625147 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120887362 seconds)
  done (took 5.738671445 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.585437887 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.628618262 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.753504658 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.758494251 seconds)
  done (took 8.064999525 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.823573077 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.810457089 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.624929963 seconds)
  done (took 6.598826988 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.76047604 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.448325858 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.457083338 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.440187484 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.440760774 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.443521214 seconds)
  done (took 20.666411815 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.444724853 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.444262664 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.442020981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.447868486 seconds)
  done (took 7.120860749 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.42454494 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.172000766 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.420977038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.433105089 seconds)
  done (took 18.791022228 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.188581314 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.203961422 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.190372641 seconds)
  done (took 7.925415102 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.474007433 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.457703525 seconds)
  done (took 4.273358976 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.746132111 seconds)
  done (took 3.086772078 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.462033185 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.496655881 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.684565838 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.511266497 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.696462044 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.435460623 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.427801421 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.869615936 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.467708666 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.063919081 seconds)
  done (took 31.460061795 seconds)
done (took 131.177320853 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.757679326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.453094398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.645885158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.764357861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.663432839 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.646293367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.957364995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.737981231 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.395639151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.218996197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.723034499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.66048912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.690268621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456580381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.688378983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.84303939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.670130085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.808193317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.449265809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430631446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955133638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.368082967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.554845125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.385470647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.666224016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.593041283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.942004068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.835957626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.448348044 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.964241455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.585188826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.447312551 seconds)
  done (took 201.748622763 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.450537461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431424701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432996408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.450100844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.433356538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.4317487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436222989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439776237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437807402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.432390295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.432967536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.442039645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.433237421 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434362276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.452421645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434275033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.44123805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.434070005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43327474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.438908899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.436173205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.450262181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.432925121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.432811681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434124285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434124902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.45139754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434092109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.453173102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.434310098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434780991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.43426227 seconds)
  done (took 207.362767459 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455506902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.43704846 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.446702991 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.443285298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435855112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446094031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43550752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434586492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452825656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.459753633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.43431596 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.43483144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436718095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444842789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435142905 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434898406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.441101452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.451254004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43552257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434128922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435405721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449118381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.444387869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.435918119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.460863611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.437545148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.453509812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.453181965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.447110199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.437137223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448190062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.455867255 seconds)
  done (took 207.537091533 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.644499813 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.450122339 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.455050478 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416215785 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.455861825 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.453047717 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.451437992 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.652978097 seconds)
  done (took 15.327351803 seconds)
done (took 633.31913807 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.899786877 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.597612512 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.669619096 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.47845306 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.385022172 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.494452539 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.474200041 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.666819532 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.429030531 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.671489756 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.856215275 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.473435295 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.986604249 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.466038895 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.748156414 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.580255646 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.456941763 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.582367971 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.830097059 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.14573008 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.7666425 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.067533331 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.666406476 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.42179218 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.031780113 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.052141164 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.272610706 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.443610403 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.479093056 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.822960965 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.389884431 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.585210785 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.51551651 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.518532502 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.583673615 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.580547135 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.527753786 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.534466757 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.661240672 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.814025758 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.152395499 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.244456323 seconds)
  done (took 99.373745085 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.443152034 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.436527186 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.437173688 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.440068433 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.43689654 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.437759829 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.435161138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.438291473 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.445142037 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.43439761 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.439307923 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.438295301 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.443698419 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.442061462 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.440790753 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.44272372 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.443188794 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.438593851 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.438924721 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.443655751 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.443655128 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.437987 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.444353331 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.434699951 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.445084336 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.43916406 seconds)
  done (took 38.792635496 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.460160303 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.720767575 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.91235461 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.454547091 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.452099064 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.461991253 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.544203715 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.453086284 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.45837861 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.457528364 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.622192595 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.455807982 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.487861945 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.945745487 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.460942616 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.455996122 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.458315725 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.454335535 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.726383305 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459236334 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.568083955 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.454104437 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.544796536 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.47127556 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.479563534 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459119066 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.462725326 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.055970992 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45437539 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.619792993 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.383013215 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.550583239 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.014881473 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.930962447 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.395154062 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.467509922 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.457285471 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.621777789 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.453888699 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.45962433 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.548191555 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.452823473 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.936574304 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.172751828 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.474076156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.463468749 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.084314 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623576135 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.749194063 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470233647 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.959328804 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.464782626 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.460184147 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.455422338 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.757480905 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.469738708 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.454390737 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.108918511 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.475891601 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.549557392 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.45780178 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.459792063 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.750534791 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.45319327 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.736691307 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.455160658 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.469895979 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.474737436 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.941272192 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.46600735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.19213973 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.474258521 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.465896392 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627318004 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.734956551 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.115201028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.456610727 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.746010233 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.022895298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.545560765 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.467622889 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.051572482 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.552133995 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.468540297 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.465833084 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.460326297 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459466659 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.51605726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.549285363 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.12820279 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.198161884 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.151222177 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.578119887 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.473525667 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.459206335 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.110763895 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.477887626 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.461733894 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.934811581 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.197243373 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.476713611 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.463657565 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.190645417 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.47771827 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.554876059 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.469050412 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.929730602 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.456558214 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.518744709 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.462809953 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.468648478 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.484770362 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.54989364 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.459958949 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.463265869 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.161608877 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.647503897 seconds)
  done (took 193.139300172 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.459255483 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.467437915 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.456152869 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.448772367 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.454184797 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.459709614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.452022822 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.451837051 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.463644785 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.451872221 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.450700695 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.456799581 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.452597759 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.469264914 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.462717079 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.45969567 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.064895409 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.450763584 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.464367619 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.449857299 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.276922066 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.462667919 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.461018554 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.452691596 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.45439766 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.460333752 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.461318488 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.454371224 seconds)
  done (took 155.592112463 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.470616851 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.155563029 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.469459876 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.611901169 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.487328641 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.463226925 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.60984257 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.528473275 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.469676975 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.467187814 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.464915674 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.835489764 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.465163086 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.064513401 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.688413494 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.631485974 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.103542572 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.490806307 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.462798024 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.46386911 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.61878628 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.475378486 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.839981343 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.168655552 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.476347465 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.166661163 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.462761603 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.471511397 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.467976715 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.167768636 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.473935151 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.846304357 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.564601719 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.541614047 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.163619918 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.110091645 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.093137439 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.644412395 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.467243183 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.471829831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.468843632 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.457592872 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.168477295 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.477668345 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.468531823 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.164942723 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.492787024 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.473205524 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.478482873 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.470301753 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.540067866 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.542344124 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.846931714 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.17807002 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.566232456 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.477450847 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.628688663 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.869835959 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.46345703 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071680659 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.452234236 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.178719266 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.494684967 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.459320837 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.471363491 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.475281207 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.653372197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.63437587 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.071422199 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.481606067 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.066070127 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.66537718 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.475293315 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.472084984 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.474437549 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.169729488 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.07353871 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.665272942 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.633595305 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.696434668 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.454281956 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.468902311 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.461642171 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.561109891 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.467033862 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.179398052 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.092189195 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.48736895 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.476066016 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.475443493 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.47457653 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.678624921 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.166954925 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.565091759 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.057378186 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.862625132 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.852619358 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.480191436 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.544401619 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.486002517 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.850604568 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.481169748 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.541728629 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.928097472 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.845442267 seconds)
  done (took 177.473033658 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.753240864 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.867202073 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.579342087 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.632996992 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.138516611 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.068766162 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.864468201 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.633821352 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.594197262 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.751876977 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.839732628 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.574760569 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.707578678 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.552463797 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.222940719 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.544986814 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.575433416 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.635787563 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.619821103 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.589718128 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.205622576 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.795971678 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.677895956 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.569924898 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.579517827 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.303829537 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.073368779 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.995627688 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.658238819 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.981095167 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.040281707 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.682586283 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.591938312 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.243918037 seconds)
  done (took 71.517660286 seconds)
done (took 737.239805154 seconds)
SAVING RESULT...
DONE!
