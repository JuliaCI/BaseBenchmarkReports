cset: moving following pidspec: 22464
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.378105286 seconds)
loading group "string"... done (took 0.58413378 seconds)
loading group "linalg"... done (took 7.719318688 seconds)
loading group "parallel"... done (took 0.161552519 seconds)
loading group "find"... done (took 1.176277263 seconds)
loading group "tuple"... done (took 1.858609307 seconds)
loading group "dates"... done (took 1.267481939 seconds)
loading group "micro"... done (took 0.219698779 seconds)
loading group "io"... done (took 0.930993364 seconds)
loading group "scalar"... done (took 38.164993764 seconds)
loading group "sparse"... done (took 12.34835513 seconds)
loading group "broadcast"... done (took 0.984722511 seconds)
loading group "union"... done (took 13.398300098 seconds)
loading group "simd"... done (took 4.750894375 seconds)
loading group "random"... done (took 9.584168812 seconds)
loading group "problem"... done (took 1.857100663 seconds)
loading group "array"... done (took 22.012552344 seconds)
loading group "misc"... done (took 1.79879561 seconds)
loading group "sort"... done (took 3.516380194 seconds)
loading group "collection"... done (took 19.008129462 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.551508025 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1337108 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142455746 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132191183 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157472486 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.127436684 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135289536 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093311488 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.851650053 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158970438 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123773297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425301465 seconds)
done (took 5.451139339 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179665625 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08742644 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094447217 seconds)
  done (took 1.267482896 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073231327 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133796893 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074943504 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074966312 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074646559 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074562922 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07433043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074604365 seconds)
  done (took 1.667072931 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078658066 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076166597 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073608832 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075363842 seconds)
  done (took 1.38992208 seconds)
done (took 5.675003364 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.787218046 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216913433 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190760605 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411127239 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137214936 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183659057 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656110991 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330719963 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192029241 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084001181 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115034262 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.356252559 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129074955 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.652106163 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08320005 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099158515 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144607861 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430246886 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073494958 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09031276 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096478594 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134858904 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093826585 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082186707 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.154638558 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073862384 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143682079 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087717333 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071697953 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225067644 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.181264474 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665480029 seconds)
  done (took 10.491357656 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104090752 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106720763 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076434667 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133846116 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106833261 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077909509 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083197164 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075527494 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.101333168 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13830927 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100258087 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.114108266 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074415703 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07680895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090904413 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.218178966 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088271606 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089384667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078046429 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086409821 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117071518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086555862 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088205107 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088082898 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136853361 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187708709 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105602727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105932919 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074667767 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089375685 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122216399 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13615306 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07360272 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073365069 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133728233 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103245129 seconds)
  done (took 4.871238217 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.997981659 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150299706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096765961 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140890642 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072955813 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115789921 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.075862114 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088665414 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218372261 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.387064844 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.594145076 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139685104 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118802945 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108507841 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075443101 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076539127 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099397221 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074661861 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.510802018 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109045988 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117028629 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088673223 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078411996 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.078356138 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.073746264 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075694079 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07186736 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075799551 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121693545 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081714765 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309745803 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130358773 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076590941 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.96204931 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.175695834 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074520788 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.24982577 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170819352 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100596817 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150560976 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077517645 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073998012 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170012007 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07359155 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078301601 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073592721 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092859914 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074213582 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111535963 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127393287 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073834858 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074275103 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177321051 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.076152459 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087369011 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.15127048 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160686781 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071960584 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301011719 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098909475 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078436247 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.073495456 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073342041 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182345465 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130347078 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076220068 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0750179 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076612932 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077178027 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36936743 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072518067 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.18698938 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074644264 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084346594 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077665209 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077998717 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080841823 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080811661 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097015644 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073970362 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084348982 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073986361 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074195528 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074099326 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091609032 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.492458207 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075363083 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075789733 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072645334 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099014326 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104274786 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075210206 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073229399 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107907763 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073420262 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075136005 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074262275 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091509375 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077922389 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121097733 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075363258 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071329647 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.10788175 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104902291 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077043335 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106259255 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088232929 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076136245 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.448730923 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073348953 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075664639 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073275203 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075464345 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074414308 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088152672 seconds)
  done (took 22.81082288 seconds)
done (took 40.257505111 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.252446249 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077740878 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078012341 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078253186 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07801244 seconds)
  done (took 1.73641363 seconds)
done (took 2.897873401 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128510884 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106198764 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072726705 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104902914 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072063882 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108319037 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110659835 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085076823 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106582943 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072470028 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104540493 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072122917 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071718841 seconds)
  done (took 2.385999663 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089370853 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091753267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078015007 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090697845 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072039293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090682371 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089284673 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097489103 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089773238 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080445634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071174942 seconds)
  done (took 2.092471484 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088598631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091499731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077424352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090246935 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074469386 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090067297 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089399921 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093610741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089604411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082057867 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071518125 seconds)
  done (took 2.084831797 seconds)
done (took 7.71031989 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08287708 seconds)
  done (took 1.219713629 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.543571776 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.683250241 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086499784 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113229353 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197850556 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119007531 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.254268552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091987904 seconds)
  done (took 8.389157777 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096821456 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077682965 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077036346 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078286182 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076960208 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089007462 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076655703 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079535523 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076737134 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077543254 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079722935 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078520998 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078996356 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07978556 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078694349 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080045988 seconds)
  done (took 2.494197396 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099469923 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098269189 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080870288 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08253159 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080387 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079548938 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082051263 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081147556 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078440439 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07977477 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082953736 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081160667 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079416625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071613432 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081352464 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083825993 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078631049 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081676096 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082357032 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082923318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082598949 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071183815 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079057539 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081798134 seconds)
  done (took 3.203226091 seconds)
done (took 16.454033878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111650675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075519538 seconds)
  done (took 1.334743077 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085914485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08807164 seconds)
  done (took 1.327678679 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085767061 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.071455981 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.095488592 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084091611 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073431718 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072647163 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093032256 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072646148 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072918162 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073088966 seconds)
  done (took 1.948064221 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072784485 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082858007 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.076672878 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.086778881 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08020864 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071258626 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078926067 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074419364 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083243766 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069682874 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077863759 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090400101 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078097861 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092154397 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078546194 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075250547 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077469593 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074409733 seconds)
  done (took 2.579285711 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070788946 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073393203 seconds)
  done (took 1.302566031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071956971 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070216782 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072991811 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073783597 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070390057 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070256021 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070338849 seconds)
  done (took 1.653973363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398931784 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124702264 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.314876809 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079886391 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.090124811 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266968879 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073966321 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079417219 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079112092 seconds)
  done (took 2.700619517 seconds)
done (took 14.011838354 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086042668 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096154116 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103247116 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393204379 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.100999746 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075241789 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121167312 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189879811 seconds)
done (took 2.339337789 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219436861 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.677515224 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.420041881 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215274342 seconds)
  done (took 2.474156633 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3449182 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09603262 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067649185 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076119751 seconds)
  done (took 1.752280193 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072551877 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077407019 seconds)
  done (took 1.315016916 seconds)
done (took 6.928196416 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073097759 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.207555535 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073837936 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074336555 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.071872121 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073723537 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07171788 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071673131 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074049518 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07392939 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074411671 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072159419 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074138718 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074085965 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071736692 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071546358 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073923364 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071297578 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071309542 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071625129 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074057052 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071091812 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071469245 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074052752 seconds)
  done (took 3.078524803 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088132704 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.074196432 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.078304796 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078319863 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.076488331 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077892949 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077786464 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073731671 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078396592 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076009889 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075787808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075945514 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076215805 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075654493 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076153858 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076760963 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0779656 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073487925 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075867624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.076253968 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078269946 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074297503 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076074913 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077998909 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.076025869 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076200959 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076147842 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073904039 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078237442 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076164722 seconds)
  done (took 3.479080336 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.076315399 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070350317 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071378009 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078053518 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.070651901 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07109781 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070268681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07119105 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.071438524 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.070688074 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071744251 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070435002 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070848117 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071816728 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071285922 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074856554 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087523463 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070958667 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070729514 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070938888 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077642303 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070276344 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070529468 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070596318 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070777481 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070380698 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.071598052 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070635994 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071865396 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070821524 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07465755 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.075354635 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070661152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078753047 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074804227 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070076053 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075119246 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069992557 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071455197 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069924748 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.069994293 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070305663 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070793389 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079030251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070768721 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072156694 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070920884 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071908287 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071251364 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073531111 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070517965 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071311289 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072573892 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071763963 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075714279 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071012986 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071757585 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070537481 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071419849 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070812434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070380892 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070547544 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074052741 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071305666 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088014838 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078917303 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070588034 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072201837 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071442516 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074313861 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072601662 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086588037 seconds)
  done (took 6.413575326 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093444485 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095508888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073448915 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073761695 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068711259 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071304507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077560719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071620185 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073649744 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090753509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071723949 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074276726 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074172399 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075988881 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071619874 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073477412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080067648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069267102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071320779 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075205694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071610695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077116469 seconds)
  done (took 2.867796786 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154570593 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07809539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114222454 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082895238 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078126917 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083532001 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077590071 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077859421 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077862749 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075627075 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075278342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078136077 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07760952 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075907365 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075261377 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07531642 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077566584 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07533023 seconds)
  done (took 2.696276437 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082305037 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074601634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096271364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073857154 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074534776 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076089391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078246627 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081647872 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076296007 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073773497 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08168934 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076266298 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076102019 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074052205 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076321864 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073979581 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076253175 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073943558 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081459577 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078086099 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078142219 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08141272 seconds)
  done (took 2.901075178 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085398221 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076117948 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089313734 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075501225 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06889151 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071058012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077712662 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073707283 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077858898 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075685086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07335516 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071120753 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076200682 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073487635 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076623679 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073811875 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076017957 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073692202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075645286 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068705916 seconds)
  done (took 2.696117985 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09019158 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074815777 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074726551 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081247514 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074764078 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074611236 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081806293 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074389891 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074897174 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096017379 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074714923 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075120818 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081882 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082076988 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075225659 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082578438 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081541283 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081442348 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075315326 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075286928 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096574869 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074925378 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081746812 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075030428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074919254 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074629074 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074824437 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078860812 seconds)
  done (took 3.401654895 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072921125 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072087318 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.072386027 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071081753 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071627519 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071732073 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071582869 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071362122 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074189318 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07206596 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074069067 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07407419 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073622412 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073531793 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073947539 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.074124435 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073765889 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071508474 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071891888 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071853663 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073844203 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073873459 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073813288 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071054252 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07114313 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073930774 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071384821 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071172662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073894044 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071565845 seconds)
  done (took 3.37109506 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079521187 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080994492 seconds)
  done (took 1.353391272 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067873842 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087485612 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070866677 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078705825 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077150344 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074647124 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080953093 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077276556 seconds)
  done (took 1.802689647 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087660928 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082657356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074289572 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084291179 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082865891 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089804152 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131711326 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073468862 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08089459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072512814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086291875 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073450397 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080750699 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074224155 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08003262 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081057535 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070725234 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.078273436 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075555009 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071893314 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074080966 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08296973 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077531997 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068694497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075941138 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097540365 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085018754 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072712036 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07742617 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081739551 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080681981 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067836712 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073099198 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073427073 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07144239 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.082542736 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088627741 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077401436 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083082111 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074258099 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082096424 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.069040192 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078835472 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081790541 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085687931 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073386495 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074387422 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068922475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072658875 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076681921 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068975045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075041172 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068556685 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081545981 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077713839 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085074062 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07271629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076187254 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077334607 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077296678 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08135132 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076554212 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077983722 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07330433 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085629051 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07971153 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082441592 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06841943 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067825038 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071627635 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083857197 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09821234 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080178516 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073659831 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074224555 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071622164 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077546974 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074207761 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079345803 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.081463417 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073464677 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078110214 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081719554 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074666558 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076831253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080199924 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071613375 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075968063 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072385633 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089837051 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.074216798 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070900658 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071807048 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083992403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077538788 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071787599 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07132581 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080662811 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066961057 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072328445 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072756665 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073837203 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082261914 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075825362 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076531655 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081768736 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0792218 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073531263 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075237097 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069144816 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201657831 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075261756 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083779659 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068967567 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078296206 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076854658 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074116902 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083382776 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072513216 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073631925 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082063767 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.081142831 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072437607 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070434052 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077722818 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073763137 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076320238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082813875 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0720023 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0681841 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069061095 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077907552 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073534747 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078040307 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077698314 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07750497 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068555585 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.072099553 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.078033355 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082276609 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074574158 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075796955 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080194136 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075614116 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072270495 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080996594 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076702433 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073133419 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080486494 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074761932 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068828636 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075611492 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077021574 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072189688 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078935112 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0761335 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076597979 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073923928 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071557363 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079424974 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073679914 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07397899 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074283888 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071982351 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084905587 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076044967 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068391922 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070582588 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081336201 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072354157 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072719421 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073813705 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076721181 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073764054 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071636118 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.073163193 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076127274 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081831266 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076459198 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073834244 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.080155685 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086748708 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072910716 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076583724 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072764844 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074402605 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073802286 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083500773 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080495561 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077362448 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076650438 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070792838 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079183277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082558476 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.074047899 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071326882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073377984 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076981796 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.080198521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077221682 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.074486172 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071863961 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07560477 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075818044 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076694789 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072648892 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0730721 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078299665 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.07128467 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078237317 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073339142 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083949086 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077455224 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067693803 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075245828 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070642342 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079892577 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067547505 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071252231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0728936 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072757084 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071708633 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075304551 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066799351 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.213780824 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084818819 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076234238 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075198302 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.075325116 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08256286 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077255501 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078664346 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078970233 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080555191 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085480283 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074211352 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081312665 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085682588 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073466204 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0679014 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079679877 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071960074 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072502141 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072886809 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071325016 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077615676 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081271964 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080831597 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067575464 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076987632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071842056 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073453663 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068492224 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.0786296 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076840442 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074847023 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081177222 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074503817 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073322727 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077920531 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072528111 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073625855 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074307087 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076892271 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074157156 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076068252 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073776924 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076866974 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073014386 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071149344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076079769 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074111589 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074589421 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078958957 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072900087 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074126418 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076460414 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073681113 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075503149 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074720239 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07335691 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077743968 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075159378 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074707307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076361681 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068536257 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082010025 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073115293 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082073252 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074592964 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070885526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079217393 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076892159 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077967524 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073882896 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07417277 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075830469 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072764418 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076812128 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082229086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.07227692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084955929 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081248694 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076279033 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077269323 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074870951 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.076077677 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073895371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075600513 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074369912 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074711059 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073189184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078799868 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076789686 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074617592 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075931944 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07414701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07499578 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07458713 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068095107 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073336409 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073269121 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072447862 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08289047 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072991896 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074005952 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071853146 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074040259 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.071532892 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.069555606 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07895483 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079947402 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072377651 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079721732 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072674513 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074502579 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083761372 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066887963 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070453595 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.205733898 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.073951732 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083107996 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074938783 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085823573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075848651 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074563437 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07131504 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073860817 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073138776 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068789225 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072144834 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078309385 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073687254 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072610925 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073946373 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076808307 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073989348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083932193 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073332602 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075649392 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074056384 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070485737 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073708247 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07351329 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.078074474 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074277152 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072191314 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070818615 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072799577 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075753101 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075980378 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072951623 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076062358 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081386559 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073596702 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077247735 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075533256 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068366838 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077115921 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073198069 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072633651 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073849811 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080976845 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077564619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073935505 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083701226 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072543279 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07502413 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072987125 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070973764 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072299566 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072881288 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073226864 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073548188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074034488 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082287264 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071399994 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076934484 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074462674 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074666822 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080537723 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073617361 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077071718 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079036157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074469231 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076066637 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082695043 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076978894 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078156337 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074375289 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075537281 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080235337 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073329837 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080687577 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074602497 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073792714 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07638006 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072470161 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07309764 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073349326 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072271798 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08014952 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073605861 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073844219 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073546712 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071801869 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075154898 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075670923 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082376168 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076522011 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077294531 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068615945 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071459001 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073990634 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072463278 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075884004 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077126159 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079714245 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076259397 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074155664 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072466351 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083787382 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079262279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077152525 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072226877 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077244282 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072666375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.076331457 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075321354 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074398037 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073301224 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077140381 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07532236 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072390469 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079098226 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076335353 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.207341797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.077516389 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077165328 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076673243 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069779914 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074842768 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07667174 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079346273 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077500062 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073865477 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085446068 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072136953 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075153619 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076689561 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072774724 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07930001 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069196204 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076025187 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07443582 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074129035 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06963336 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073761659 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0722213 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07775474 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073639178 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06845835 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084876762 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084220404 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077532634 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072873929 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072300709 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068755113 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068277691 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073565062 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074090276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076907315 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085026461 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073414601 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072874929 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06840152 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07350473 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077167469 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.078213978 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.07049963 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068662962 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07325826 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076793111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079440181 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072073952 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072811052 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077144557 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076192414 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071260205 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076327072 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070247616 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077879972 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08672617 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.07389138 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075783869 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080291471 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082457186 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073371403 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068423229 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073572591 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077437681 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074780585 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073912456 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074214505 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089009852 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076899962 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073536848 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.07249087 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.080003489 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073849236 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082600534 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074264339 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073792961 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.079549548 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075900677 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081346794 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07785159 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081206701 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077190569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077539547 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072505691 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074911079 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072245804 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073839665 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074514941 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073764904 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07793958 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080624684 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073825607 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085358033 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08399976 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076768011 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070061641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073871596 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073388561 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068115218 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073297797 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071068089 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.07135449 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070907936 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071613383 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074545142 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078501773 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074326705 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072541979 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072415711 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067021611 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076033538 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075267949 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074861352 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069456156 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072253723 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.207339845 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.080180748 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077542341 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072972033 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077077535 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076089075 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076617945 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068970947 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081533507 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073154576 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077188124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074220071 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07341141 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073468952 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077463279 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078123288 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073891281 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076910865 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079033559 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075411625 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.072108295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071003717 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07970842 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071346719 seconds)
  done (took 47.083190459 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104636545 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070673221 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069225047 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068652244 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078462966 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069388927 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069033935 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070030902 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070792499 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071613689 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068977982 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068932756 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076656968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084098405 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079559424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073469934 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068779322 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069770192 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068989383 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070051377 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07730908 seconds)
  done (took 2.824283972 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077658799 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085366486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08114803 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090476132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077913999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07671003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082320924 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077200199 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085298105 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079646516 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085322784 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07679687 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.080030119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079509427 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079430288 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077102649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085392186 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078055264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07661439 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082211222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07680912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082091282 seconds)
  done (took 3.039912126 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07172309 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073054412 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0753832 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067978272 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071736846 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068238541 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075280792 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070722892 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075763298 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072718952 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073017261 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072644984 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075487728 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068386264 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082324622 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070510595 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115797827 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075831662 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073193983 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073850702 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068439294 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075600757 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068412177 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068990144 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072518721 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076013429 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073453064 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071150388 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072569124 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0728527 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072771972 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070965442 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075826853 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074262194 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.07297029 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072789541 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.075085793 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07261861 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068319098 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071278765 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07480107 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068978305 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073156268 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074940655 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071685013 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.0708677 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075122609 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072626427 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068632781 seconds)
  done (took 4.870211691 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082763065 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115885266 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074699685 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095523078 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086679476 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079022505 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077774725 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096375639 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.07019528 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070657439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087972297 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08530799 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072846089 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07705447 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077690187 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072535035 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073055294 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071800795 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0754101 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072112435 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075696183 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079238725 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086804125 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084741158 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076195864 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071349846 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071653181 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.077285381 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084333607 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076905566 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077004238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077701656 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087741312 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075871814 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071891744 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074369142 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087975192 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072935282 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074682354 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070456462 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075321403 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076709795 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079365707 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088047572 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07241927 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077394903 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072295667 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070121301 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084227178 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075095958 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079704388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085873291 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076223403 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072604801 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076512464 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087224941 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072323017 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071514207 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07575443 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083820356 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070372301 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075829217 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085409456 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074667015 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07925695 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085250436 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077387833 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075830186 seconds)
  done (took 6.738506325 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081039495 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104216479 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089959443 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089570523 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083219524 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083364792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082907267 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083442777 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08324047 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087038216 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083734606 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.124264994 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088113698 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085774127 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083245122 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083243527 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083638271 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083039106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083851489 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082930488 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083658382 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089675687 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084542979 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089608263 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086529805 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078838927 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083491572 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083192986 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090068953 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083573402 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086828146 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08281949 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083495364 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089710748 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086137397 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.083220884 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072550751 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082719336 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083414324 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083351704 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078670332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088870531 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083085706 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078655843 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083053821 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082638601 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08945892 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085795372 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.086151734 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08726824 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082785032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089686853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082698867 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083314187 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090019474 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0922035 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089448766 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089731394 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08288428 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089492149 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089823689 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092991023 seconds)
  done (took 6.631686236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085803347 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080006729 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092959787 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068630821 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071622513 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080309946 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071361551 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071629665 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081008567 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080509364 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083032806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080628238 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082868649 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082528688 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07964341 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082788676 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079798898 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079799198 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080694559 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079548347 seconds)
  done (took 2.890997314 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080721132 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090998827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.075190598 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078825849 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076589417 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078750065 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076283038 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076896327 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074756528 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076775043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082742945 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083335985 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07492068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079328524 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083229182 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078948553 seconds)
  done (took 2.550981747 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088115374 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07985674 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085262526 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.073325272 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074323075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069249134 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072699894 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068725633 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087192625 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085350632 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072898712 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084247478 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072676728 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071208114 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069849225 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078761999 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069447974 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06981713 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072399753 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084094663 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076815557 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071173506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076966952 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072504331 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075489972 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077295903 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07161823 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073904943 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06997304 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072725682 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075821764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076956126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069354822 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0708102 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071696102 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069518966 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072313384 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072981985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078629575 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072294094 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070730139 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075274502 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072658393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074414787 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069109252 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072672032 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068851862 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075561256 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070977506 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076176171 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073367289 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075136517 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073339247 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080149553 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075499227 seconds)
  done (took 5.386982629 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085893292 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076392964 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068818347 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071411765 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077021294 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074785349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077003471 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074268634 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074679093 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071215623 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075039174 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076452522 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074859417 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076896067 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074614567 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076411527 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068447892 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074300308 seconds)
  done (took 2.663210921 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078036909 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073788095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080481657 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07332933 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073134523 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075611691 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068631155 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071305296 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07148085 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073327914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073575529 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07564235 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07171429 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075601691 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073724096 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073279755 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075522524 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07114623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074029083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068280065 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076014567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071384366 seconds)
  done (took 2.921435216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098314537 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090462123 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146492919 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.087155954 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.094322455 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079069644 seconds)
  done (took 1.899491513 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098193029 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108906205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073702483 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07590111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082182398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07698987 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077668686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077446932 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084278863 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082697015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080119152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08499962 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084543152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084136031 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08222206 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082719003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077695097 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077174363 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074107657 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089563492 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077421422 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085303519 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077549454 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077047615 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077636643 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084196561 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085019733 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082307143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077470536 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085711199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083280462 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078074783 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08510488 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082875772 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076908722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085056789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077765337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089719719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082838976 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084716346 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076494256 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082442851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085675701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081860373 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085747366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077835568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081868892 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077535942 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078044368 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091230697 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082963938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084095571 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083263713 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084980908 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084629753 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09170295 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082500619 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084177898 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082991034 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082773393 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084488153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082661151 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084123559 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082366743 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082554025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084434954 seconds)
  done (took 6.761095236 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109415509 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074575565 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077287142 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082649933 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084563343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077604517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077744826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077764445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077863126 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074602137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116032833 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077573602 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084631082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084158004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077659682 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077464443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077694128 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084479438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074667961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091600112 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077857682 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084472522 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084604167 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084414114 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082134713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08263151 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077434115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077962581 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077624191 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077523489 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081629688 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07756432 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083918501 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074585166 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084284606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077618512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07749222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08224927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077522982 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082644746 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084400944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089766882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077575795 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077280048 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082703827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077996659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077775707 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074830021 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077705786 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074577147 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082652874 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082493993 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082619136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08433711 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077622151 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077735708 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077303571 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077339819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077982497 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08285685 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085010718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077862454 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091561736 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077797722 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077868403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084235233 seconds)
  done (took 6.685906173 seconds)
done (took 138.177574703 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199750145 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176098236 seconds)
  done (took 1.671698588 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074049869 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104140301 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084184157 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13661743 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071640266 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108641915 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104342876 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082514533 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074216329 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074210199 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074370871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076467402 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139621847 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071807952 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073167796 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076223063 seconds)
  done (took 2.738435255 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102193815 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165790084 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109251628 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072634093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105860859 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079315667 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.075021359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082344153 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078124801 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073116644 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079621678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077663869 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073216219 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078367715 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078438033 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079885922 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073080987 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079833417 seconds)
  done (took 2.881474437 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101385613 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097961007 seconds)
  done (took 1.518310982 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163820804 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138843974 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207890171 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34401444 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164204417 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151473854 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151541787 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.150006755 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122157916 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141418968 seconds)
  done (took 3.051709792 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104556227 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157177227 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282874124 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125481301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08106259 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099171032 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126912126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086419883 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087539736 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086999234 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086654552 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083858373 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107247706 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081191332 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081982889 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083317479 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.110682949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.08155869 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08266486 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083056005 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108811365 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074486599 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.08094875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081428404 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08459761 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084429066 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074699295 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073765063 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083346757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082826775 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084437031 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097464089 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084141572 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.11023574 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078828569 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111231048 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084506911 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080705619 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.08263314 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.081151712 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.084948353 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08486124 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081660206 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083818187 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073907514 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.083877455 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07385855 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074043298 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085075526 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075067587 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085101951 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083994436 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110551681 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074882852 seconds)
  done (took 6.342169894 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112459415 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112972785 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07857005 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119923944 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112362443 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077322899 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113914908 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106185092 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.115764227 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077774858 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076262047 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078100502 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086655192 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089439066 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.124841956 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.115548638 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080125936 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077690407 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114953069 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.115015321 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077412219 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108753372 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104847451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.114776275 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073166352 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077296514 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07597363 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077198343 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08328994 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084723793 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076456799 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08612353 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.094432144 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084634786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075130829 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075646085 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075939978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085479003 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085171523 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085461443 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083890674 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074875994 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076003011 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076834475 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076345955 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074992128 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084334106 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085930309 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085061529 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075531376 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077304669 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075953961 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077094838 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085491383 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083726233 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086720647 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086106672 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075927471 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07595512 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078685281 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086652172 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085605202 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085654548 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079662909 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086353055 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075887466 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087967862 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091743967 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076204395 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077849069 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076435429 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075525134 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.077270945 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083119089 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.083590593 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077741098 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075893887 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076973752 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086351318 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084282412 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075902029 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083571074 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075440875 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075445598 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076875282 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077254459 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083012363 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08485742 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077175307 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075965953 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075403189 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075347052 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074367715 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081941495 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083418345 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083167297 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082574104 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075832367 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083236607 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082982798 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.212182742 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086646634 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077773444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078800465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077830775 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085370108 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083610191 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085377198 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077259834 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.077732673 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084934003 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087345035 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076483933 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084087633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085937213 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08571678 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07536903 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087921274 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077633163 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085897416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074641857 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08620296 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076946719 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084465097 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077284789 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075145154 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075649764 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085323433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07715424 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076115009 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076522043 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076249904 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084633506 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088958753 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077368244 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084446081 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084337975 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077219622 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084261863 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075489082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085275257 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076097528 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077183049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075204719 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087496005 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076290471 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075815852 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075716897 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08637073 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074303053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085849999 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084147793 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075283845 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090264753 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087142535 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083563352 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086248521 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077951003 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07586527 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075959404 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076231838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083821303 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085126895 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077854571 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075726768 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08345312 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.087248612 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075766384 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084433699 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084329631 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08404027 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076205181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076046805 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086880219 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.087486116 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084425592 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084306254 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084929743 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076600642 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083720347 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084420741 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07615348 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089896245 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07733234 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088672206 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08512001 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082805526 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083961324 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085285855 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085672013 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086142905 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088780284 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074646902 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074964421 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083391222 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075115145 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074573622 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081886741 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076472925 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075881068 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087811744 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073166907 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222973722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076601123 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086373936 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076380282 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077962402 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089647192 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077300286 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080193842 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085063659 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077151423 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084139042 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087742261 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084630979 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076112881 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077981055 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086710503 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086028104 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076758512 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076315983 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07763436 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084092288 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084569482 seconds)
  done (took 20.191730078 seconds)
done (took 39.727026684 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20484604 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154592265 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.169338419 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121467077 seconds)
  done (took 2.054528002 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115330646 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106045361 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097172766 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072663197 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103556966 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072735883 seconds)
  done (took 1.922411061 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278801722 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196520962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183209696 seconds)
  done (took 2.008126763 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208671565 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191885186 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44782356 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.275473253 seconds)
  done (took 2.574467675 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146363524 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094013513 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07480992 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091096551 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134480433 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163295884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104640814 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129486572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.086218479 seconds)
  done (took 2.424652708 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153446143 seconds)
done (took 12.490810509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.205439029 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098623495 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09946432 seconds)
    (4/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.183083812 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 0.13996604 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07620265 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130303008 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.103879404 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.237842205 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.200619647 seconds)
    (11/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.240517897 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.236447856 seconds)
    (13/309) benchmarking ("sort", Float32, false)...
    done (took 0.141863785 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.086825182 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090048022 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.084213853 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.144203043 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125407912 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.082434938 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.329467297 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081656136 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10615871 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081720135 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168696379 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.094096058 seconds)
    (26/309) benchmarking ("sort", Int8, false)...
    done (took 0.163676609 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.084992363 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.126825234 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.063111881 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17774575 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185539275 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188187702 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090485035 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082156113 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08427965 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.160148309 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148311582 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.159216224 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098904854 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100855042 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07749383 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.082277763 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080954392 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.08200757 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082626656 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07201366 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.08122777 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096077241 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.169081648 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085003013 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.163620279 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085384011 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.157212538 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074420592 seconds)
    (55/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.081158836 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.074790821 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108058359 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073463717 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135101754 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080559281 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.082121564 seconds)
    (62/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.123921384 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.095240209 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073328169 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.186084166 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082544849 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.079822955 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071559037 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098541204 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.184320293 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193854795 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.221546322 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071401587 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099241943 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.071631998 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083143927 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098280423 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.184085938 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081055555 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073704871 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.203856215 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.163266088 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.295192048 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.215893636 seconds)
    (85/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.174398987 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081714885 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060544309 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190795359 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075077135 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.076295622 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.205334026 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129397996 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.071539155 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.085603833 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095958785 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.080224069 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.188748639 seconds)
    (98/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082564019 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.180258654 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.059252002 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181939569 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080907261 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079613636 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079560527 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07879028 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084549581 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079834977 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102223292 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.154867285 seconds)
    (110/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.124931583 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086517152 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100970304 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072309128 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20389812 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.082333831 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.074564962 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175452447 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096247096 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.073695689 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.074073017 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081146599 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080520952 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.118526867 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080768654 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.082191075 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096549868 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.086560559 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081377459 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120416869 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075157929 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074935717 seconds)
    (132/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060501051 seconds)
    (133/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186787381 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.187228983 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082872434 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146993421 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.061697833 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.099368052 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090975778 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221051059 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086806516 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08435796 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059232076 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079686923 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211789756 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.059618206 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080767541 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074338157 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17833965 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.08225342 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073480083 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.176863405 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.127774973 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073041883 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.10002163 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.165440356 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.072161472 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.059310109 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11607313 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073298922 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18703904 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059608275 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073203314 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059496519 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.059092961 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062707398 seconds)
    (167/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.111548068 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058991011 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.059570572 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.08186302 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153738549 seconds)
    (172/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.071661154 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164646552 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059169496 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071959953 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148802835 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124502121 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.111523813 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.060282744 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060963031 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.210114517 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.11114338 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072856973 seconds)
    (184/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.111113847 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.237675496 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078490445 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063551603 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129573257 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086506044 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073480116 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060740753 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.097764734 seconds)
    (193/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073568004 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099283032 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073792485 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084737033 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137005978 seconds)
    (198/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.059556124 seconds)
    (199/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.060872143 seconds)
    (200/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08769807 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060001814 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.059329074 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.059283554 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202988941 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088922452 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082462419 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077758305 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086298448 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.092423829 seconds)
    (210/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.072552015 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163943007 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081142063 seconds)
    (213/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.061040649 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080745155 seconds)
    (215/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.098527403 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076231855 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129346984 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.0712407 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080606639 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08859247 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084398387 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073514695 seconds)
    (223/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.072448762 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099679038 seconds)
    (225/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059399088 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073506835 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082791344 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080831063 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073489739 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.060363176 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076330122 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149504345 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07373632 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.070111587 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.096485959 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.059348479 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.083869213 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.059370079 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061067896 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.107951087 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087008936 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076463077 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062260264 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095289798 seconds)
    (245/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.080850852 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0773456 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084228475 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075050182 seconds)
    (249/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.120711398 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06085558 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082456608 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127718487 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.098174054 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074763174 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12749333 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07184697 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0736458 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.059733608 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098861381 seconds)
    (260/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168090004 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187731363 seconds)
    (262/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.12240886 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081811897 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079087558 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099550759 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.059885015 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.059551272 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.061786299 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098207121 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133793122 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096395089 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060036282 seconds)
    (273/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.060912482 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20017124 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081685267 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.080050574 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095556657 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.147905814 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073911395 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.059297373 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059300587 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076040133 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060743563 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060567451 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.073104561 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.059675729 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071730863 seconds)
    (288/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074928479 seconds)
    (289/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086627065 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102739375 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077712335 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075658222 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080134883 seconds)
    (294/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.059956379 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059024901 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095810478 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.059216698 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.060774533 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072785494 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079248853 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133856443 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073307192 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060786151 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.060334594 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078638926 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.228750991 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079737113 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.076833877 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.063141046 seconds)
  done (took 33.709227339 seconds)
done (took 35.075829889 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090014063 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103072201 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.085410245 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101857446 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090944896 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086859362 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082369709 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087861097 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.09001742 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.091584193 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.088358206 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064500579 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083681337 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083950726 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083793644 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100268894 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.088130346 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08256802 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.082849661 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073286709 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082797544 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073771134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.075813443 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.063671962 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.087618434 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.08095407 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083374009 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082974599 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074143528 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074447995 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07835119 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.083381972 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073480764 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.088486306 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.081835999 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081780309 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083842282 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085281579 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075584923 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073535795 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083613534 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073728626 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081754292 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082042945 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080770494 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07942429 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082111949 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086369527 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099319642 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076607137 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083640896 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084545657 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.085600308 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081559541 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078342065 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082163483 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079426406 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09987948 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082070315 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077035839 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083603829 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082835926 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07947774 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081705221 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081660648 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08379879 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.085157114 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080000719 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083705013 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080620978 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073544631 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.082024694 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078310684 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076591419 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084859372 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086367502 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072151719 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079734685 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081348876 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.082468169 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073086552 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076285107 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075374997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080526854 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076183084 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063505332 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077915246 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.08082486 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072786147 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082243196 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080653014 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081557474 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075382244 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.086300517 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073103628 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079904725 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074088935 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.074109673 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07560152 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078546898 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073474229 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07659756 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.08441902 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075227533 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080801074 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086596029 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073450364 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080451942 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.07257152 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.073212744 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087138451 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083784596 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.07332457 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076037443 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.071968434 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080158533 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071754722 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072400876 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072707285 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072451344 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079197909 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072683378 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075609526 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080045359 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.231410297 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074771989 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.078926279 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.078046061 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074303712 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08019318 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073697127 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074310942 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075425444 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.071244753 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076735797 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073851245 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082242134 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076697006 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082190751 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075122861 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.083090173 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079421937 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080939954 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080215562 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072738688 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.069194371 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077149506 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076500415 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.076264222 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073940351 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075332499 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07355374 seconds)
done (took 13.729876438 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071956923 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141344503 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10194644 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102370921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.0929942 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074704279 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083337681 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103367905 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075813234 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106130459 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096286592 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093339191 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118316969 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072471605 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073881346 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077698273 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075803401 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087988572 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103915919 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094710333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120085108 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073903396 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09923394 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096226511 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094193784 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.109262489 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075134968 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077971123 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.078288391 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09845186 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097118167 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.077826437 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074558033 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104182299 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100504114 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091237145 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074341124 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089800667 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074794705 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073997842 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07558135 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10365396 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086877045 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087480737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.077873523 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084572755 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075290713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090063205 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095799099 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086342863 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092246431 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106126151 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076993786 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09092379 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072465763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092329587 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084041422 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076455757 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074745673 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.081859482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074428905 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.078137231 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087646446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08707519 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078416662 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091041779 seconds)
  done (took 7.251904766 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089546891 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.105655875 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.09092182 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091507833 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.074352324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074309644 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073805351 seconds)
  done (took 2.056339337 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071941506 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094989562 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095887406 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095608178 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088715282 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098701293 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08379247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074537757 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099421174 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075738864 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095007681 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105594058 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078147465 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.088390399 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09749952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074496899 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097513868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074205567 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077782497 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09738875 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080840975 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10365686 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08221448 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074889165 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088275414 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074428732 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12068143 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078745193 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076943084 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077781973 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075949921 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114919169 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087324802 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082090717 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074720726 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089696864 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088915506 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077895463 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085771144 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083800382 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087698703 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075509989 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075438388 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07614812 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07883819 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084267517 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075770735 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.078904613 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077473278 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094136168 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073147888 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087551891 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077550991 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.08042968 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076454233 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081623825 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085149015 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07561637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093978529 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076558441 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090562544 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08990771 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087567062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089630826 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077242272 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087509867 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087569428 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077081002 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076495954 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078208359 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089642992 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073247994 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076003856 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084569729 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076868019 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097060865 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096955968 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07652685 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088780392 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075418835 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075128071 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074563442 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097170178 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080115627 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07459523 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079429589 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078314583 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.077806943 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073545463 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078617055 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072857004 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08129885 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078174606 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078085883 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077474256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090663925 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.078056796 seconds)
  done (took 9.560539536 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074743851 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07609436 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077942091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075757504 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075468116 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.075786288 seconds)
  done (took 1.934762806 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094546027 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076185628 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087940177 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079142187 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110616283 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.093442844 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.09492984 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.084691305 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091285491 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086843352 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093640693 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095238518 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098708285 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0800636 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09389683 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07899292 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094527895 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082269034 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086620864 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080460924 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093659054 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079523133 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080216094 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088463802 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08347142 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079713461 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086426962 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086679988 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086024928 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085375751 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079745214 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083978196 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078544482 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085151766 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094082526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078214736 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081958764 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084846375 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079818488 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083249525 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095116107 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080470946 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081884944 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084726961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085271892 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078159888 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084667918 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087086334 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094000885 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084691004 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.084933234 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079199284 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083310417 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084983969 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078432777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084937058 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.085317017 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094050435 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080074031 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07843642 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076641466 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083662899 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084315681 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083743461 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08527325 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084678201 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07841146 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080190071 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080318003 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079085865 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084996277 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076562791 seconds)
  done (took 7.582231336 seconds)
done (took 29.828916935 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543071795 seconds)
  done (took 1.978476675 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606475001 seconds)
  done (took 2.072475637 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.512842279 seconds)
  done (took 7.971851988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.384725588 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.498838441 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.732126229 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139848585 seconds)
  done (took 3.258538453 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.734995514 seconds)
  done (took 2.208306103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242840431 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238297122 seconds)
  done (took 1.967795633 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382467901 seconds)
  done (took 1.846709961 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143689293 seconds)
  done (took 2.607570987 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.244311842 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186611535 seconds)
  done (took 1.897777286 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452397471 seconds)
  done (took 1.918874319 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.916375802 seconds)
  done (took 6.385366393 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225983113 seconds)
  done (took 1.735331615 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24349262 seconds)
  done (took 1.715180082 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.757778662 seconds)
  done (took 3.229230914 seconds)
done (took 42.27023973 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088867447 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093211185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.095238038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090360505 seconds)
  done (took 1.819342909 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081988977 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.081001926 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.085043484 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.080913443 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084387292 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080778336 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082872041 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.084044822 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080934859 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.08124009 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081472996 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081256826 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08364552 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082567549 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079984315 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083050066 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084904959 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080807893 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083849768 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080931935 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078662928 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083216892 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083631359 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080298761 seconds)
  done (took 3.444468624 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084086919 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0813112 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.08340621 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080186613 seconds)
  done (took 1.808255023 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08398602 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098169188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097453889 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.08715431 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098718076 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094825692 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077381789 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077465736 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078843575 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086638515 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076508116 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103559702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096614549 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086250451 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088805716 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073216425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07583443 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.095577479 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087570955 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087505048 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078567592 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08700261 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076496045 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.097253833 seconds)
  done (took 3.566168434 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086589207 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110002026 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08944202 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.099262402 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100351456 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073895661 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088082019 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.101293604 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13532856 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.074017571 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079226503 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07369839 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082947254 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.076520455 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089150734 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.116899867 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.12022931 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077174692 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10635347 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.074415516 seconds)
  done (took 3.33969342 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078419615 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077769886 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.078046468 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073551183 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085666034 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081344459 seconds)
  done (took 1.959855139 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07379454 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075829339 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075563868 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.076335788 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080446275 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075152957 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073597692 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076455437 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076176868 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075019462 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075040112 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073999351 seconds)
  done (took 2.388996923 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.188079991 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07766846 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076976233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074791633 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078131792 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074703754 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089653633 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075715273 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101293088 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074513127 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074625605 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077066158 seconds)
  done (took 2.546771843 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199630738 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083551678 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235604659 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158068699 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115489278 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119509459 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119302427 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118622469 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143759586 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105638893 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167837392 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168985295 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113713669 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143128823 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097386143 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.110378654 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157757506 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16839006 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113228361 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1688416 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148890642 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134054994 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152086126 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108160394 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112005979 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124655027 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079787612 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088316454 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169875696 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136273921 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147042278 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117375265 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09820255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184476759 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171750575 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143146495 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153127088 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090314296 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.110091721 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136844296 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203904529 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095718129 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308437463 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118838869 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089292274 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139082578 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124384723 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126604618 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111285496 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098172268 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149270658 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183783238 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138822591 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093520365 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130368022 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118753583 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118338149 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119830822 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176706602 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161888004 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134622747 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07907338 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114443305 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154027209 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140508098 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113805479 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128974383 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098376319 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13716287 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158638271 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127638773 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145357193 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120807243 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095236312 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126555331 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142626324 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13245115 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164167021 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129041397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080804621 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127721331 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106632014 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088273391 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152942594 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08291661 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176410712 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106588441 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112820729 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129380791 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114160315 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114030729 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157178624 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293860973 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11162253 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.076549769 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11316582 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126391738 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148951548 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094716086 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115177596 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122511844 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086254476 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138874795 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083731712 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12968596 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.085812286 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130327016 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135006324 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085898187 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128209466 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110777702 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109212134 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135091009 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162062112 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095115992 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088927049 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1678776 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127968178 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109201438 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146653577 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159967629 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.109615294 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105490961 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148110922 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172242526 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097141071 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165425209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111141392 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091026158 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095965667 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127785897 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117427431 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12970942 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088780595 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124043095 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169353507 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082369912 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102699868 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139680818 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086431048 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087686929 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111005162 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110376122 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103839429 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.105009262 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10812044 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138956511 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281619856 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114561312 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13034265 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105579268 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170549256 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095228923 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110613616 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111196162 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078083252 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137138468 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158303617 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086866079 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162360107 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127880547 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12154846 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125030981 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090720746 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140760353 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08646109 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078016534 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144746692 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117772202 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11570257 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153032569 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121897865 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128699523 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123859117 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136265318 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134667986 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134488286 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113466416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096267804 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119791915 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132337574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081176872 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097762776 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.088229609 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111652637 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101919954 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090810023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145025544 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127302757 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114032778 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119112026 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104173224 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150462756 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083631183 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130509594 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124004315 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101963547 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153648675 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153287704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136323002 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106111906 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290754304 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.080122365 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083288453 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09474032 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128753086 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091618004 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091543582 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120229441 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150765095 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133590662 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140414965 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130111033 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126241505 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157865866 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077989584 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126676926 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147882899 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126859346 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111983792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099176087 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106266021 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145663419 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111646625 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177787366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120122626 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130442763 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161667054 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.110224675 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087638706 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108988312 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136032388 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109259155 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147800305 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106360249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094734697 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115073861 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083817673 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104702589 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132070896 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123562765 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142797196 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120473928 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138407755 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085786093 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119521232 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126917991 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126434836 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072963172 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122838751 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167910058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101330599 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12291229 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307042355 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0880868 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.143335791 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173412635 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148874044 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092317258 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112733751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126385967 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130449085 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125540024 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142280717 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112031402 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142994763 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116499693 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093178112 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094089172 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103322575 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111079924 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101816231 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109300524 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119003246 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103660832 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13569874 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110322713 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117387362 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124480524 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107394032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100134804 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104704517 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176990584 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124416501 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170490163 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10731877 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145137971 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161108686 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083672816 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087579533 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086273571 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140993961 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092420843 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135933695 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117651162 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123139884 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128094248 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144024233 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102696149 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076603665 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115108191 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136550759 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128383576 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104107008 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108252067 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163412996 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105753477 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085414936 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115135575 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119853292 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107498002 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165001892 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069972917 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111599881 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083435991 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085774778 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127637744 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148470215 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086724471 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10504809 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124680299 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11183218 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124041865 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099724589 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109154449 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123287311 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139854138 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124499856 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092239724 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111111815 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125869737 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146066646 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103508592 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102150386 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159732511 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14412429 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148337186 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090399904 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113050636 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115193049 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110318193 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130412493 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088045482 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15089326 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086971346 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129862631 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10229461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089402818 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124213485 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112397593 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091310879 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138411014 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117004867 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087686409 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082458151 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113581148 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118305078 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104076282 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080853845 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394955115 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.086297065 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142951913 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168016317 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091846736 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11468268 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105734098 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089834839 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113842198 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111415958 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096965468 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107356265 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171899482 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.095281989 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15326021 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140289667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12019602 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141972535 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111844747 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.649583794 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086915554 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154914854 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122569259 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174269762 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107741831 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125180434 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116846045 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127451008 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147710409 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109133905 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189329216 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136737255 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122559204 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087612235 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109517074 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111267341 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095427691 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115097601 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121021029 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121947025 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100635113 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.121666468 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128092526 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.091029228 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103615434 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158234505 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12082251 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146398185 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140890802 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091206001 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123121707 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13997969 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241220041 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125154118 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153313442 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111998628 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106000912 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089070368 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107047059 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161581507 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.081689993 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176389384 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128716665 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116529289 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120426174 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115430294 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135223182 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110847241 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127412064 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099080456 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.114191918 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120230942 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089531925 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084966151 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112424359 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117213369 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106330928 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104015533 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104786718 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154723588 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.081074962 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105897992 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122654384 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146881444 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173740887 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095717748 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091462022 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125928328 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121780433 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118553654 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127844566 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087181908 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089152812 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087497761 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.090234226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114573583 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119745592 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120701151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116610015 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163372046 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.091314663 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233613155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102396101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111137482 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.079046143 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085740364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102940504 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102711722 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263098784 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115523894 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16377512 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.104050934 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097933202 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098118076 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.083063744 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090756696 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131393335 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117429597 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124077193 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107694408 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.071665738 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112718377 seconds)
  done (took 61.358521855 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112082241 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087060779 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.106314428 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147392551 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126999611 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204844611 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15528485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193647477 seconds)
  done (took 2.74078463 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073424648 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102714499 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111694679 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.09153624 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.074729385 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077202509 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234837634 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08894623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075058845 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101233738 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086311021 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077085221 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423116031 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074072763 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075503455 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071355526 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07603195 seconds)
  done (took 3.512124413 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.401620243 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623332427 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347963923 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.086096494 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.978074448 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09936817 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.287281539 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143331304 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084712241 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537858529 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414206562 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137719121 seconds)
  done (took 18.746643243 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086925517 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083563848 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.097131653 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.096548646 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086488661 seconds)
  done (took 2.055868541 seconds)
done (took 110.787448675 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087833187 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431809434 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063110137 seconds)
  done (took 2.128038783 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092127507 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092804096 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092571148 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091190186 seconds)
  done (took 1.980915742 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080007632 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084526227 seconds)
  done (took 1.770041778 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236580502 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177325821 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.104769874 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087373853 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.087915913 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088887524 seconds)
  done (took 1.875189484 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077520547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08272263 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.080277222 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.083825456 seconds)
  done (took 1.931521899 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081927403 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060568117 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062703779 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064800073 seconds)
  done (took 1.876626691 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091631594 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.092135027 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087823351 seconds)
  done (took 1.879381396 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104867581 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095097897 seconds)
  done (took 1.807521933 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086689535 seconds)
  done (took 1.696136739 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093269993 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107012727 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140962377 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.123286828 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146406835 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.122327861 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.09379138 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093928426 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.087207613 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094579239 seconds)
  done (took 2.710780181 seconds)
done (took 21.869640455 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083660949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.381912465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368578371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098240184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67864655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364701178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998391922 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102250355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14947436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075968366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093866992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.658077822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989726182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339071964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975277448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334259901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659853448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07790383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077562001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077297493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984645268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077445481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077105157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078111369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65937274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.382455448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077710696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.338973227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077669828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079391686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.364498066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09620389 seconds)
  done (took 16.470026697 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07558462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128507268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081765272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093484743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.079557607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078378069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.080954135 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078699485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130539892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077317263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094792492 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077599681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.081354398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078176311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097611504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.080396079 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078515055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078001593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077632081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078065386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097601465 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077302181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078144409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078062055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077840765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089953346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078033257 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077599203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07776674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079971426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080891281 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078264148 seconds)
  done (took 4.324994365 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121213218 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.133814358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082170602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113862344 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122077609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.079218247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155033541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103575543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138148867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077738906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095334437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077738273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111039712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077965773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097926775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078179228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078500924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078483197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077481583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077697883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097278613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077369613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078145449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078898283 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078367814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091980205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078170564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078016592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078243526 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079660285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.081049792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078526975 seconds)
  done (took 4.580948557 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07780903 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083121243 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090748565 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.091717648 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.078063597 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.081151957 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.08188905 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078644595 seconds)
  done (took 2.293151577 seconds)
done (took 29.288028739 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085248978 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07755433 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.08085041 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.097743211 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082443302 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085798097 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075460918 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084560747 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.082211251 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.08225302 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083605988 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075809796 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080542221 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075411365 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082856092 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.076424908 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0872575 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.081112401 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086929904 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.087337671 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078966429 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081409933 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083551343 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.086898701 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087029173 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086755511 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085785311 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081472741 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076451201 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079196684 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085559083 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092983687 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076113461 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086405741 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075761836 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076162075 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080355762 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076046981 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087106782 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084844029 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078197168 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085253168 seconds)
  done (took 5.066411228 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093249015 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.101032105 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.093627825 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.070839738 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.076167808 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.074169849 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.098185728 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.069713659 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.069063654 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.098131215 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.065949177 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.069081591 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071827742 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06361176 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.069138382 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.066544312 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070994049 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.065044839 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069023784 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.069418295 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.098836146 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.063287985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085721937 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071807613 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.065575293 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070891785 seconds)
  done (took 3.614697761 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080734526 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091379477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099516514 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152969393 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.119479164 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086047622 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087129706 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101110659 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101941264 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074826564 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079290461 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101733261 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096693703 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082349367 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0761617 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.092452898 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.093093518 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077234891 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.080812476 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103200346 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094469568 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093827203 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100492615 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089867323 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07489725 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07828033 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079798462 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.089221181 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07840747 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08512331 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079367095 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.079420777 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077850942 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087193462 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078528324 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077455642 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.102619572 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086511049 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086677796 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076641001 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084157759 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07726098 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100290771 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132460815 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07500431 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081986077 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079386711 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085965007 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075162211 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102320625 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08702828 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075265793 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078726011 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074755541 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075064935 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078292546 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077482139 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078296053 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084884634 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081608618 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.100678931 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081163797 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092857575 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075772259 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084510736 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075275721 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.077022279 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.074685443 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100737131 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077231867 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117096831 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076346168 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077858187 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085534511 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.086242308 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082527883 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075545015 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092143431 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086030595 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079271815 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08441977 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079519887 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078749261 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104754732 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078180039 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077714661 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076492619 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081308413 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078802309 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076979585 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089015169 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075208317 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078308881 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092821892 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075502499 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077018652 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081082305 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080212763 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074929567 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087851579 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.08015472 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077044144 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086315503 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076052909 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078168105 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08739158 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082227971 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074187083 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.079360657 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080689702 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076047965 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076744549 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.077870184 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077135183 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084302415 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082712302 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080179878 seconds)
  done (took 11.579544977 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169220492 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163500876 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080603648 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15656998 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08612168 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088207353 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157654709 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103086115 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.077182011 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077750619 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077421745 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117978995 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.113280001 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.127554084 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087652181 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076974302 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.099687154 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122914558 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159349782 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154975134 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.100939075 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085834001 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079912251 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.079121962 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079179874 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087249232 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.098085747 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086388253 seconds)
  done (took 4.770938828 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085480765 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.113310392 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083643437 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100925812 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.099557054 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.077063682 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.079332038 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.079185505 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.094408262 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.087356413 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.077044213 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081906455 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083300882 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080275583 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077678364 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.084478287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083883613 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.078280998 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.081121422 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.084701663 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087671012 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100597745 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080594202 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076179976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081898684 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.076112069 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071892399 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.093085038 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077684248 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102686785 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074668534 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.082489955 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091665085 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.078094662 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.077487209 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076978585 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.077101318 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076894868 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.079308646 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07578116 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075806662 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.066654192 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.076232998 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08764751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.090653692 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065465801 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.082388462 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.082563307 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.082565859 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.074575829 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.080142351 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.079814513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.080039479 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.085123661 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.081433955 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082409762 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078020237 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08524959 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085790321 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076955644 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.074012841 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.076110941 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.081752747 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073691023 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.092272812 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.082011765 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075781468 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.077009617 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078925717 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.090652578 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.077347001 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.082761963 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074539204 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07922255 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081781771 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078901295 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.078121049 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075818292 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.077027635 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.077582854 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064032872 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.077128618 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062119217 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079914364 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.075142804 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.075560487 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076995293 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081478171 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088208068 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078337966 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.083464015 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.078034451 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.076382125 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.080259794 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069151865 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079721928 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087924391 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.091054175 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.077654745 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074894896 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.090475666 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.082554329 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07596077 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.066009555 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081654372 seconds)
  done (took 10.158496139 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098274103 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078943586 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091838977 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099911953 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095953648 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084596378 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087322055 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.079033873 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093578001 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.083817073 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.087002104 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07746207 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087937332 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086940781 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079441004 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087232637 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080895215 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092943738 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092044949 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07742195 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085763465 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089725745 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098805212 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.089766335 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088931882 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090019241 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099576227 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.087104004 seconds)
  done (took 4.155972322 seconds)
done (took 40.971702703 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.7485501 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.895835725 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.71791465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.042679754 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.795093844 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.920519661 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.792575451 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.711184487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.824023851 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.744571579 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.03372297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.8261734 seconds)
done (took 64.82635264 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.762905567 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.847551242 seconds)
    (2/2) benchmarking "String"...
    done (took 1.947339667 seconds)
  done (took 5.434609912 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.923574802 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.514761704 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.9584902 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.709493268 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.716499195 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.003841234 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.517920983 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.241414722 seconds)
  done (took 30.302299046 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.895554661 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.938747409 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.414971442 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.443490833 seconds)
  done (took 15.383472374 seconds)
done (took 62.534643534 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.704809563 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.727070431 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.753608504 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.696500338 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769506557 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.722087068 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.953613545 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.74271592 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.711868508 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.702323377 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.71309539 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.141940363 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.724277972 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.861593862 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.713950983 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.710999543 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.750204312 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.1526514 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.871597385 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.724353816 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.719282426 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770805467 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.718202718 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.841668534 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.765695607 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.711971892 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.121986069 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.711230119 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.331745151 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.713179039 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.74393022 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.127495875 seconds)
  done (took 201.766449107 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.711051424 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.843928334 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.910531952 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.724451169 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.251140458 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.891737725 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.8143069 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.284159504 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.720735185 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.731379408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.946341964 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.712237944 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.963208917 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.657921282 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.762111033 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.79933448 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.914379528 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.96802521 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.7655331 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.881133767 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.740676022 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.818997601 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.7671027 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.91922223 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.727980533 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.721937501 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.723017051 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.744409728 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.901032768 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.8876472 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.715212069 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.743108676 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.914307098 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.585989178 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.728831939 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.724831941 seconds)
  done (took 168.261513956 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.904975926 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.714521573 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.713409358 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712474147 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.718702298 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.713805761 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.842537196 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838656197 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.353290105 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.056320152 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.76865615 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.713598852 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5004472 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.71345169 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78007531 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.725976291 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.714108685 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.713986554 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.728948846 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.741234448 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.713639454 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.71347594 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838087484 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.726379807 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.714841202 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.721186024 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.715036997 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719259408 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.085037057 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.713423837 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.779320384 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717847926 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72016682 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.955719045 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.716113813 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.713930696 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.561703926 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.245233871 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798898335 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.716382366 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721050046 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.71585109 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.932992812 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.716214904 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714268738 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.714578322 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.717986372 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.715352749 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.855895725 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.714484879 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.844431258 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715623128 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.192045942 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.714689611 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.715261263 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.86243999 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.508822126 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.716197701 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.719475821 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.71624646 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716289091 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.716126241 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.729045456 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.664988182 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.796241383 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.717267624 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.720270913 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722080474 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.717509561 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.921753385 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721076571 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.019459629 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.779577693 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.833663441 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837718705 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720154897 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78201707 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80904287 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.717051175 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.716413626 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715749846 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.71608792 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.796378978 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.716888357 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.878771741 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724424714 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.718987778 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.76970593 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.786098667 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.717672395 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572901821 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.721197914 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717809578 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.985782776 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783356963 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.718134784 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717923597 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.854260499 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.841239183 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.425801683 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.721553966 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.717223115 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.63681449 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.868033428 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.718618037 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861289856 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.721376895 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798958439 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.72235679 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.720239544 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.749734078 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.718117427 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.772902563 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.71909369 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.090261993 seconds)
  done (took 395.00894245 seconds)
done (took 768.640093019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.325755187 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.292068013 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.401523739 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.302410935 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.284409839 seconds)
  done (took 13.25347273 seconds)
done (took 14.901586996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.809653115 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.811972846 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.743027118 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.80862935 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.741092542 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808073709 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.790927626 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.74415943 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.774294092 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.743114354 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.777415766 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742279466 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730424778 seconds)
  done (took 24.673817392 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.954324595 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.947325505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789184817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95275852 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765872595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.950380754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.87969466 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.86628451 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.867307649 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.734456706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730738135 seconds)
  done (took 22.087497656 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958655119 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.956653127 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796321735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.953708737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76913954 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961620903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881548227 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877168137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.871843933 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736408047 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732296454 seconds)
  done (took 22.143530644 seconds)
done (took 70.552713387 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.728893642 seconds)
  done (took 3.37863858 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.755897913 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.925175561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.735216884 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.731104924 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.727989702 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.728315979 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.732358453 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.726744442 seconds)
  done (took 15.713147712 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.72377927 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.724497332 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.725064817 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.724662759 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.725439551 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.727328971 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.724870168 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.727961517 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.725067082 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.725258561 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.727350374 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.727057545 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.727906159 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.729774351 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.727039767 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.728354505 seconds)
  done (took 29.270488964 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.726193173 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.725213449 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.725922704 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.725184139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.725283192 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.725780411 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.726693701 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.724814448 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.724782517 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.725442662 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.725896449 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.725212672 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.726126865 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.726116389 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.726331578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.726743481 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.72620748 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.725825588 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.730787033 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.726286515 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.726779954 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.725751979 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.725873522 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.72736184 seconds)
  done (took 43.080206963 seconds)
done (took 93.092778121 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.476008016 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.473590916 seconds)
  done (took 9.600687589 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.729798002 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.729216337 seconds)
  done (took 5.113686472 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.729250988 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.730939477 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.729614776 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.72912605 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.730187592 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.730291947 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.729193413 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.730729276 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.730404441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.72994891 seconds)
  done (took 18.95167914 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.729828729 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.730776685 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.727199792 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.730268219 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.72953907 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.727497076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.730610222 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.729986945 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.732160041 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.728297591 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.729528364 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.728613369 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.731163756 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.727630088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.73037129 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.727734901 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.728652169 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.728149956 seconds)
  done (took 32.780394455 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.730273423 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.7310061 seconds)
  done (took 5.113991602 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.728196033 seconds)
    (2/7) benchmarking "second"...
    done (took 1.727594518 seconds)
    (3/7) benchmarking "month"...
    done (took 1.728847348 seconds)
    (4/7) benchmarking "year"...
    done (took 1.728253572 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.729206355 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.728204017 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.729075144 seconds)
  done (took 13.752325175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.731964827 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.878946092 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.933273213 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.354091976 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.732462781 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.735404312 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.615866624 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.734896143 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.736898184 seconds)
  done (took 19.107057201 seconds)
done (took 106.07139834 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.592020955 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.729723821 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.952946615 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.778847718 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.788715078 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.024483013 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.743172339 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.011576582 seconds)
done (took 42.276070491 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.739755651 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.387281519 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.418113442 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.758657154 seconds)
  done (took 15.219315635 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.712354068 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.029244611 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.732805422 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.552996732 seconds)
  done (took 21.686291781 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.100070064 seconds)
    (2/2) benchmarking "read"...
    done (took 2.074603378 seconds)
  done (took 5.835013225 seconds)
done (took 51.136958482 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732550807 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.729379102 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.731882704 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.732173312 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.730511788 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.732387454 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.729662104 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.730373084 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.733169285 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.733260164 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.732561629 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.730073401 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.731820041 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732838413 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729934545 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730544264 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734473083 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.730630026 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731264427 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731230763 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734374066 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.729960228 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.731474751 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.734704369 seconds)
  done (took 43.216880144 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.733713205 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.731995184 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.735114579 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.735441799 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.732351168 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.735278397 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.734019676 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.730180729 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.735387485 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.734263507 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732148365 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.732036748 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.73530224 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.731867624 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734835382 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.732241138 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.733832752 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731774572 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735297793 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.732510462 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.734254217 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732334923 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.731846369 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736597956 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.73238591 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.73211368 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.7383494 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.733409393 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735190771 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.732662965 seconds)
  done (took 53.666021869 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.740187815 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.743662585 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.735566556 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.734545106 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.735956854 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.734740559 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.7345168 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.734679484 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.735816235 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.73460364 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.734794079 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.735684399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.735802049 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.736048291 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.734778851 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.734666821 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.736564813 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.735752698 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.735524702 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.736046022 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.736617398 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.736491869 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.736665708 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.73687477 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.737163662 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.736541495 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.735715145 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.735098767 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.735524937 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.736900017 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.736049288 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.736301306 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.736789636 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.73599679 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.736675136 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.736885598 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.741750515 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.743855806 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.736264097 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.736719471 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.736645333 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.737279289 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.737613522 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.736221843 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.736615681 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.736901338 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.735730318 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.736751838 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.73726001 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.73687394 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.737477287 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.737580604 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.736898742 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.737356714 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737776568 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.737112803 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.737960661 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.737397598 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.737064007 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.737386432 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.737171425 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.738850527 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.737646905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.738097604 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.738559925 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.738471114 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.737976695 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.738111884 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.73820887 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.739654734 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.738471251 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.738711046 seconds)
  done (took 126.721475563 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.738239798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.737461519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.735799283 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735213045 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73594576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.739771866 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.736747863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739106249 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73726543 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.739960472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739635257 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.736662892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735993428 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740277183 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738778668 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.736272706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.738774764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737046721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.738876545 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.738860218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739149706 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.737090495 seconds)
  done (took 39.892693803 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739520231 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739022486 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.737696476 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740160629 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.737048719 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.740110232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.740962264 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.739623543 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741003641 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737643893 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738006164 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741137096 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73722595 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736738023 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736910825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736863733 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739690129 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737919264 seconds)
  done (took 32.958582083 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.737180991 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.736846844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.740765141 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.737932439 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.738305811 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.740621233 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737963034 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740367479 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.741165081 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.738637836 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.742061826 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740722168 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.740365739 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738720178 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741299878 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.739490757 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.740793145 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738270692 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739931801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738757036 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.738354996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741837615 seconds)
  done (took 39.933481561 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741426151 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.74106265 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.740272966 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.739467839 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.738863193 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.741050973 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.742005134 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.738274271 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.741893735 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.742302139 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738118554 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.741026515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.738524901 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.739443716 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.739206581 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738399604 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.741206523 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.740865862 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741975195 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.738955336 seconds)
  done (took 36.469856714 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744044653 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743705399 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7436005 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744363552 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744169736 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.743819964 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744477549 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.743699562 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.745627094 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74483756 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744051657 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.744561704 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74497769 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744149613 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.744126638 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74487332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.745443785 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744693681 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.744970484 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745510576 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74501644 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743966121 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744637194 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.745513107 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.743835591 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74397004 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744832998 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745105871 seconds)
  done (took 50.511834542 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743910514 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.744725851 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.742495557 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.742881 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.741621898 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.741735555 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.742138078 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.741603478 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.743794893 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741868356 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.744657182 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.74435583 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744692596 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.744782526 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.74477271 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.745070659 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743956692 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.743029214 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743224578 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74335164 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.745736853 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745181576 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.745343769 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742301524 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742613809 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.745351519 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742708011 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743217907 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745066752 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742270627 seconds)
  done (took 53.975926754 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.763059008 seconds)
    (2/2) benchmarking "in"...
    done (took 1.764043517 seconds)
  done (took 5.193318273 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.742114027 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747328953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.745871495 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.743938038 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.742475996 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.746587261 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.74583234 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744566874 seconds)
  done (took 15.626691279 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.744331605 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.746676788 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.745796151 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.745995235 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.746999033 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.745198543 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753011713 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.746275713 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.747776435 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.74640855 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.752803283 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.752387191 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.748625599 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745775089 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.745809918 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74715905 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.745736367 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.748178003 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.747112723 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.745746855 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.748300104 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.749717444 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749170769 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.744809441 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.748961206 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.75825372 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.750854343 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.747391061 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746963686 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.751277518 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.746832079 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.744202784 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.749097677 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.748427821 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.746557907 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.749726446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754792349 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747978748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.753515543 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748331509 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746930098 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.745335394 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.74881391 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.748524677 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747793916 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.74787757 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.747212778 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.745250656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.747244095 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.750610972 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.752964167 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746117559 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.744334561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752543195 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.748883868 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754320255 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.749054461 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.751152741 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.758082518 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.758726831 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.761061446 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.755934881 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749742259 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.748510128 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.758035747 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.772186172 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755871558 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.745969508 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.746094897 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.74931275 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.756334796 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.762618461 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.757969545 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.751187297 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.750818737 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.749866782 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749839527 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751095456 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.756209164 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.751749301 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.750661929 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.751114461 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760461369 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.772878667 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.748698626 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.750424702 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.749264388 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.75035753 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.750217241 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76107066 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.750747478 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.749468876 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.749324407 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.749923624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.749802082 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.75175687 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.748645932 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75149739 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.748564379 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.751631522 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751617862 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754750815 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.758582704 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751850422 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751655191 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.757027342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.750429339 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749924978 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.758193914 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.75086707 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75090824 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.75205496 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.75721933 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.749514316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754740754 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.760358516 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.753100256 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.751498889 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.752591487 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.750540004 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761069512 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.777906127 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.751489103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.750833509 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.75748685 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.766225583 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751944584 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.754932858 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.751886169 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.749512866 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.74905777 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.753316269 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.752909573 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.753196831 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752751127 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753581582 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.749676329 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.753259488 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.753595984 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.753131689 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.753216303 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.752788802 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.754453432 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.755387082 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.753451364 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.753872349 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.759786341 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.752252749 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.753859184 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.754199399 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.750922241 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752961378 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.755064047 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.754337614 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.752490176 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754357278 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.751545257 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.753019824 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.753517435 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.755582006 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753281975 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.753746679 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.757236866 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.754126883 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.756055824 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.752417399 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.75055246 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.754254292 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.754267105 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.753815657 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.754374768 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.753266937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.758146833 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.762109662 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.753563206 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.755653956 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.756092467 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754678084 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754870988 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754608435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.757810449 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.760983236 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.755866885 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.76022339 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.755415643 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.755672459 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.755028944 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.754374501 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.75411964 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756249708 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.758893118 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.763277015 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769303606 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.763480914 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.756086653 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.761213257 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.757463838 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.762315823 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.759525196 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.75623555 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.756369336 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757481289 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.754362533 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75818092 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.755943684 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.757160654 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.755864328 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.756773001 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.755762231 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.757757529 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.756783014 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.756379978 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.75664173 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.753973622 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.756148197 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.758462331 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.755476805 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753239341 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.754602951 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.755628364 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.75723 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.757297037 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.762097011 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.753041709 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.7571199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756410245 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.757083774 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.756640019 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.757689727 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759905688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.75665933 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764785073 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.757346722 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.757649722 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.764372102 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.756721871 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.756516802 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.759573173 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.757376177 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.754304349 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.760613159 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.765141526 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.757283211 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.759111044 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.757240137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757211087 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757200302 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.763053266 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.754509412 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.757262785 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.756916686 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.759344515 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.756796989 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.759134829 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.759671549 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.758331775 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75966777 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.75735915 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.758810002 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76128365 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.760209075 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.759392416 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.758891184 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761715986 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.766770492 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.763026122 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.759168654 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.760121128 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.76064549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.762624525 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.75984896 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.759213283 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.758793989 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77229733 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.767167432 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76565255 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.75928739 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.759914837 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763466958 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.759776417 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.763210726 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758888516 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.760282495 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.759696266 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.759806939 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.757650547 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.761630767 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.760415816 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76170371 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.761150204 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.764088676 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.760864447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.7594953 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.761596927 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.760787338 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.760234562 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.760730115 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.760975353 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.762515739 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76117065 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.75945808 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.759551111 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766790433 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7608277 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.761910506 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.76096411 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.759990916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.761102238 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.763216797 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.7621006 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.763702316 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.769312797 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.763354716 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.768857189 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.763392281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77080111 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.762263929 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.764936996 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.769666724 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.758018762 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.760326711 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.761574037 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.763028956 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768546289 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.761686284 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.762726057 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.7677287 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762536283 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.762714363 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.762280561 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.762863661 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762072964 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.763776731 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770474525 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.7632432 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.766944745 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764661674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.760226103 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.764599748 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.763055339 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.761530275 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766226474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.763193795 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.762853757 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.761280833 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.763898071 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.763063904 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.764210291 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.762833171 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.760872368 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.762990729 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76965475 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.763569523 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768261798 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.762779964 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.769670965 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76352019 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768808677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.764285651 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.763491417 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.764128937 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.763381773 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.764550436 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.763392724 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.764306487 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.764022707 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.764380922 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.767181928 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.763597346 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.764987691 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.764622255 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.764723107 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.762264714 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774097704 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788311153 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.765340832 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768009357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.761160718 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.76606247 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.769516864 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.764246558 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.762670549 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.767909156 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774008366 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772383646 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.764940844 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.765433101 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764483888 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.766080328 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.763696283 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.764061086 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.765236595 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.763876843 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.764655213 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.766368103 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770939873 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.764938675 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.765771655 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765005739 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.765429997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.776497755 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.76598712 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.765992019 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765813987 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.764687013 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.766366066 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.766565755 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.765393786 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764674406 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76579888 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.767346456 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.772875716 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.772542729 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.769717771 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.7650395 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.767236325 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.765912442 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.768998163 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76881714 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.766238181 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768507509 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.767022745 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.767108106 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.768117002 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.765880313 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.767031191 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.767197244 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766729141 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77069359 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.77401449 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766364134 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.764016753 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.767421405 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.76753043 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.765793691 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.768447918 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.776156921 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769874959 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.777244229 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.776061116 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.771918408 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.767733347 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.77113412 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.775058383 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.766339543 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.767334966 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.767629101 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.769418101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.76858324 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.771143149 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768474594 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.774233695 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.767265001 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.767267719 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774693924 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.768948042 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.768640243 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.76904482 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.771432857 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.768885601 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.765517193 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.768855339 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.767140871 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774667416 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.769194198 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768228503 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.76908195 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.766865059 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.76962461 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772794157 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768392022 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.769190644 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.765331891 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.770075971 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770701192 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771414553 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.765413421 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.768925952 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.769700187 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.772676171 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.777116576 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.766493407 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771193973 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.769787943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.769828695 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.771527581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.769205035 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.767956355 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.769179081 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.769569008 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771420316 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.77028062 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.773075965 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.769533122 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.771039299 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.772105454 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770886985 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773846627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.780000076 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.77762974 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.766620495 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.76990515 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.77052675 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.772650458 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.770784404 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.771207666 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.770180985 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.772081343 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.769966592 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771286072 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.769781072 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.77452492 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788357209 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.770632088 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771446251 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.772202137 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774429737 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.771034699 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.768413877 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.771175053 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.77269248 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.774246023 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.779518074 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.771622963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7785091 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771809565 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.77265168 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.775687254 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.774400434 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.779866497 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.773917916 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772042959 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.772411631 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.77678161 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.788088062 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771391423 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781122061 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801317085 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.772328 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.773262978 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.773078187 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771626997 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.776758097 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.77495296 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.774357285 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.77256366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.773504272 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.774359893 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.774701123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.780205791 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.773865914 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.771917754 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.772703087 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.772708317 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.774904223 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.770975029 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.773640591 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.773218522 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.773378417 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.773521927 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.773892175 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.772842252 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.785615484 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.783893752 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.772006053 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.774993236 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.770512424 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.77589477 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.776888005 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784926768 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.781249773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.774684085 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.774447047 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.774694875 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773658273 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.770019431 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.77481422 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.773354325 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774567279 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.771479242 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.78701996 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783047543 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.77820566 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.773787934 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776292015 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.774775877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776616397 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77551018 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.775469999 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.775645159 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.776178282 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.780285263 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.775062328 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.776649247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.779209562 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.783267485 seconds)
  done (took 1052.002974657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772387963 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772260455 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772241932 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772570918 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77203101 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773446418 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772914233 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772777199 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.77398135 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772351479 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.773174595 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771781296 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773958196 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773108004 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773356027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773975587 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772533774 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773020066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772325177 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773354932 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772082377 seconds)
  done (took 38.925904439 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.775313297 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.772168629 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.77294024 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776152118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772877288 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776537179 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773310173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776764023 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776474308 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773016913 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774783728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776358584 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.773405113 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.774017072 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773275777 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776605906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.778928551 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774474623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.776644923 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774083023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777262719 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.774550986 seconds)
  done (took 40.746544031 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.777090229 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.778071072 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.776660193 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.774646675 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.777476159 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.776027601 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.778364786 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.776527853 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.777908021 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.777528406 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.777351219 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.77968905 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.786084226 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.78251021 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.780058727 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.777786523 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.921493859 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.778075387 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.779009327 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.777996088 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.775366424 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.783455268 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.77530321 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.775162855 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.777620294 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.779478114 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.77589073 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.776938946 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.777355746 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.779190724 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.782824771 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.776798506 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776851862 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.777381397 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.776414849 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.777375847 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.78269462 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.777927573 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.77443074 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.777525615 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.786712215 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.798258302 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.778802821 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.782386987 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.776666572 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.77823677 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.78149755 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.786966408 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.773418136 seconds)
  done (took 89.008412018 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.777062778 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.776736785 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.774929322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.777797495 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.775765837 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.775308028 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.775854367 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776928358 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.774080674 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.775462553 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.776416596 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.775308499 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773907414 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.776948092 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.777976401 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77340435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774143585 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.773819855 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.774087677 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774593472 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.774846206 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.776855011 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.776869805 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.774162027 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777244009 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.773810498 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.77394105 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.779050687 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.774890011 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.775202119 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.77748501 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777488073 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.772642153 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.770326769 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769697666 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.773057171 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.77445188 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.767729207 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.768312521 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.765495502 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.768330914 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.767949641 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.767829396 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.766331716 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.763931202 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.764489852 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.763780323 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.763759588 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.765818739 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.763686748 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.763192443 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.76067563 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.764054148 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.762031526 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763559304 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.764777137 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.76188735 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.761000673 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.763488932 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.762962513 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.762318825 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.764802599 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.762207316 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.766206876 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.766033575 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.762253327 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.761909355 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.76464677 seconds)
  done (took 122.077646111 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766678904 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.766428109 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766998555 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767269675 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766069603 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.766651929 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767474371 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.766629353 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.768712176 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.766680301 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.766679536 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.765551538 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.767376987 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.766323581 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.768038018 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.766422917 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.76725708 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766129789 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.765780776 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766414656 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.767840298 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.766010919 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.765632496 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.766225662 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765754745 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.766987149 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.765754387 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.767032506 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766186241 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.766801521 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.768547119 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.767158162 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.766150909 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.766977644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.766723044 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.765631664 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768142861 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.765935131 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.767208321 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.76602551 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.767498643 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766713361 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.767646637 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.76725455 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766095039 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.766656605 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766850599 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.768462257 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.766000015 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768079009 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.767078216 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766843216 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767595779 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767037319 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.766484304 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.767793331 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76785241 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76808857 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766970558 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.768064378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766583906 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.766709102 seconds)
  done (took 111.234212739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767396705 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766967471 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.763458101 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.763243014 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.766392334 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764410194 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767003041 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.767906652 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.767483396 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.765258796 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764881527 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762496312 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763646029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765064408 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.761620262 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762643635 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762830848 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763478762 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764611791 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.762205702 seconds)
  done (took 36.981053629 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.761470214 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.764582864 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.762945816 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762809774 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.762812223 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761604824 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.763888913 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76494421 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761699693 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765393692 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764410659 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764629097 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762319515 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.761345916 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764326759 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762418828 seconds)
  done (took 29.897236455 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.761241518 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.764360372 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.764871002 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.765800607 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.761040916 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.76181847 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.764610277 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.762134333 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.762010775 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.766275468 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.765220204 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.765140489 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.764083555 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.766618415 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.763212636 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.764914752 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.76347105 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.762643199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.766069693 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.765921048 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.763518302 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.762566623 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.76558229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.764666359 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.762358272 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.763346589 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.76439217 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.763010676 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.76238827 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.76551238 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.764235587 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.762681269 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.76319772 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.762319669 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.766341806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.762772074 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.765433175 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.765902627 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.765352677 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.766733064 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.76510861 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.7638042 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.765344979 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.76586173 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.76176985 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.764167548 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.762864216 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.762668895 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.762296446 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.761561382 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.764714894 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.766124641 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.764309811 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.76418664 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.766796015 seconds)
  done (took 98.710423391 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761996883 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.762723724 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.760331047 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763722339 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.762134763 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.756033437 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.760057516 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.75735078 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757769791 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762118814 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757792729 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.759823792 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756051861 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759075354 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757611391 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758920069 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757603676 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.756645266 seconds)
  done (took 33.350191449 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.756482256 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756749993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.759088408 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.75496315 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.755723555 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.758359785 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75433395 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.756891482 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758302955 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.753941637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752730406 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.756340252 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756088032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.757019063 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.753343184 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752879895 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.756940098 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75618662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.752496492 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753650703 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.755863931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756278758 seconds)
  done (took 40.304049168 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.755741226 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.754886641 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.771391837 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.775095209 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.777336927 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.789795387 seconds)
  done (took 12.299064899 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753263788 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754680341 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753297181 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756310274 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755005989 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752849666 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755115313 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753208437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755326963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753536324 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752947041 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756639611 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755217601 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752363113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755457169 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755476522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752713447 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75197402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754092953 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756441253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75389898 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757053507 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753879882 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753872358 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752899126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753558693 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755139836 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753746451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752350537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756264667 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754129539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752565873 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755679512 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75276871 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75529395 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756498995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75245786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755832403 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755970171 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752067827 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.756648103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75491663 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754977112 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752720481 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75504512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75288806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753273587 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752636285 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752678824 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75505631 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754592115 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752106771 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755111484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754602665 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755337841 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75494646 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752124546 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752575687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75459433 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752229265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751529654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75434917 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751368456 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752693562 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754780375 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752561293 seconds)
  done (took 117.445807111 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750384289 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.752486104 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753791113 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75280394 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75201235 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751664865 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751936318 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751326733 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753950968 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751530137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754139099 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751759721 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752128854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753309872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751611642 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752076764 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751695914 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751137793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751420773 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755317679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752588909 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750541657 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751394604 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751287059 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751527863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754768747 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75091843 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750840115 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750876456 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751567829 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751712091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751052918 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750274751 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.75096992 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750502408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750440179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751999613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751497372 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751328424 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753934454 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751251004 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753763119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752070624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750832619 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751195244 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751004901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751074398 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751658311 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749935499 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75087776 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751749994 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750832508 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751232057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751621456 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75100851 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750922578 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750363872 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751910213 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750675165 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755082854 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751131471 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750562992 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752789639 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750447972 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750740133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752293591 seconds)
  done (took 117.290554777 seconds)
done (took 2440.100034318 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.792907409 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.757498173 seconds)
  done (took 15.223126715 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.913617832 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.867392428 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.751230518 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.771430472 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.750699194 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.751131002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.768138319 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.752063919 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.752282133 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.751186865 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.751791119 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.937511736 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.804980741 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.751451378 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.75173053 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.844556772 seconds)
  done (took 50.350154438 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.754063231 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.755084762 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.765449863 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.757336306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.75505875 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.768045483 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.78669496 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.757790831 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.787220323 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.76651894 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.821715455 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.763805144 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.751668167 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.803472805 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.766769583 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.767553613 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.847658191 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.827701842 seconds)
  done (took 33.678771299 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.830883615 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.753659754 seconds)
  done (took 10.264480255 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.766769499 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.786327882 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.793875107 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.769978575 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.753667788 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.772200417 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.771230981 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.766845725 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.781954692 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.774548531 seconds)
  done (took 69.414981336 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.75944128 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.754993297 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.75475434 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.752611799 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.74648745 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.75006339 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.753391831 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.74789867 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.411274265 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.788605672 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.759898354 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.758787958 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.752656825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.754994706 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.751982437 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.777870926 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.856894373 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.752273464 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.75190592 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.758492228 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.754460514 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.808940601 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.768079307 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.754947919 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.783247325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.413002612 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.761464677 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.759146977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.877836973 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.751618702 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.753447464 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.754658836 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.756289916 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.153322406 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.027635876 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.754256224 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.770401066 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.763019561 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.751676609 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.867865645 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.755139237 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.762866986 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.470768161 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.00746081 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.855083775 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.795259006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.075076902 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.771289521 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.755409546 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.78265024 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.757582335 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.756034875 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.768582526 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.243343403 seconds)
  done (took 125.91660132 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.751733755 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.101995786 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.922365512 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.753329676 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037276289 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962297866 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.753213241 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.802220289 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.755611206 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985952395 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007238881 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.857763749 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.752680288 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.751303652 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.753127209 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.749534756 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.907390559 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.82520824 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.752064598 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.750185691 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782039223 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995439805 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.875696169 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.754193901 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.780821576 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.964713823 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.876087244 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.857052198 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.533682157 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.749329648 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818033781 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.752963365 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.751963997 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.751665829 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.909649358 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.846890098 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836120717 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.752313962 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.751485092 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.752471433 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.501877595 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954980298 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.848914156 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.883542868 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.005487808 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958060336 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.537199083 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.750149674 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.48897972 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.916739638 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.981619186 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.987404526 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.873745652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.755712927 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.024700312 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.752193644 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.751319801 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004451789 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977135798 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.85249595 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.754947075 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.750939788 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.751036623 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045560507 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.75525542 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.851836092 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753334877 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.752738833 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.851208258 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852280323 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.985509344 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968271502 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.784808872 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.097919973 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.265953634 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001219157 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.82080027 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006104823 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.75781192 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.752320787 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833885947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.597864436 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.008482135 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038960651 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001162211 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789587832 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.481253501 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.753061887 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.980815286 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975888332 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.015433361 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004941174 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.987247181 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.079451817 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.753688719 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.751990383 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.05042896 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.879940907 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.755172283 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.107555598 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987369363 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.290645044 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.783385592 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.061087893 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.888749162 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.758174304 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.394798534 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.75527724 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984769072 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.795653893 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.755801417 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.752980397 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.975667566 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.747502495 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.755163614 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.66401533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.817355735 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.757528242 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99020547 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.759308079 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025485075 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.75942393 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990426462 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.170035197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788629331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.930106379 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005095972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.757548906 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996684444 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.000680344 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.871872655 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.027254844 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.660652775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.756966216 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043237181 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.763154914 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.755340701 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.927639119 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.756990687 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.900518259 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.75775121 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.050231026 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78144766 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986271946 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.758229627 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.015200183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.793985544 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.807969818 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.762882838 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.880053086 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.757010781 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.58499418 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915920034 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.758227365 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.75847947 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.333477924 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.757048543 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.907503074 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.398462694 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784382452 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831617565 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.434705104 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.75601435 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842612247 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.78366831 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.150449083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.756338856 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.010614365 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.758384908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.755672278 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.754991187 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044870637 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.999452712 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.760348274 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.755893947 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.669838618 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.756661982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.757244627 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.941038327 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.129528654 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.756352525 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96222757 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.762350514 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.886322233 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.762480473 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.835717018 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.096614963 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.75731291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.757804102 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.75764625 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.759902951 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.756709775 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967021774 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.786556206 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.255937233 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.897145624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031159372 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.069969253 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.998366221 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.803657577 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.760913204 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.017593301 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.760074156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.823902469 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.76015924 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.78029068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987073363 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.761752541 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.024160609 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.029744419 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.76276511 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.808955214 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.760824006 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.760509487 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.757958482 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.905170293 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.845869358 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.759884467 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.758267322 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.875562658 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.882322731 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.968232834 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.760128112 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.798748906 seconds)
  done (took 878.460144043 seconds)
done (took 1184.983557924 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.760406375 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.763879048 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.748639004 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.763258265 seconds)
  done (took 28.721111548 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.767595619 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.762628182 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.765616207 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.762799128 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.766761186 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.763548117 seconds)
  done (took 12.272116343 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.786976123 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.762476483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.763095836 seconds)
  done (took 20.996461065 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.830762357 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.143501531 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.868021637 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.18410451 seconds)
  done (took 9.711015577 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.766259801 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.765308446 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.765857747 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.766080406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.767800949 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.768009281 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.766163088 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.766927378 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.76871914 seconds)
  done (took 17.587975237 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.972761613 seconds)
done (took 94.948055084 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.926671442 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.792532017 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.838273135 seconds)
    (4/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.873356781 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 5.513062495 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.877402284 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.112871839 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.821146505 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.290435435 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.77382117 seconds)
    (11/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.760453015 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.803149891 seconds)
    (13/309) benchmarking ("sort", Float32, false)...
    done (took 5.498174234 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.791377228 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.773317269 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.8577145 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.929942704 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.896152987 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.795400929 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.276111108 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.938260606 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.126411683 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.799826557 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.903991413 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.028621658 seconds)
    (26/309) benchmarking ("sort", Int8, false)...
    done (took 4.68263859 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.873365688 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.734841716 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.763887566 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.17039271 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.013449538 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.13397084 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.870524007 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.927063738 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.773039281 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.883213101 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.916515253 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.053606576 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.789015127 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.772746522 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.927978338 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.908567338 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.019683536 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.953357716 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.856432958 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.878517547 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.796796288 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.012668884 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.013048033 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.77820824 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.100151019 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.783645386 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.773690502 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.776823759 seconds)
    (55/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.875289349 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.445507578 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.28795877 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.106242039 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.881413505 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.008243657 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.798477732 seconds)
    (62/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.902940904 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.662446273 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.937471839 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.086305587 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.800452381 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.013571412 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.868822773 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.395559879 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.978613898 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.086940179 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.268813368 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.860295847 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.447189223 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.080673181 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.797194906 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.089612886 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.15048236 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.807955406 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.774717731 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.182857111 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.931446901 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.810136166 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.974730129 seconds)
    (85/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.900246472 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.944553254 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.958439332 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.960165917 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.044482016 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.007314341 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.104873139 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.77612894 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.200773425 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.864488955 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.746470711 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.93374508 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.781143411 seconds)
    (98/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.791538329 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.192739866 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.1823025 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.784207187 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.171531422 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.797548004 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.256161931 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.863909937 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.930468864 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.247763952 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.769215545 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.766554749 seconds)
    (110/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.102275858 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.918845861 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.394651647 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.870348365 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.762429974 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.929893248 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.777448663 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.951274811 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.174329048 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.123572509 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.77996268 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.072741343 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.048838565 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.683260342 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.982290159 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.804138899 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.90740505 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.475235183 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.810402974 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.764847444 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.956566698 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.881141029 seconds)
    (132/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.763231841 seconds)
    (133/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.781690634 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.647721099 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.812469623 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.77990109 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.658219785 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.096786825 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.991941642 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.196987432 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.279006463 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.798803823 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.874660728 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.01962389 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.765639977 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.230850905 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.80968418 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.785453806 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.922539246 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.805108426 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.088011345 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.231078584 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.774385745 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.978248048 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.81353331 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.964514589 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.814823005 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.881882161 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.007068579 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.204690925 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.783147227 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.965841474 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.145746962 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.951362841 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.287695716 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.173754245 seconds)
    (167/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.983268685 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.160280954 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.851334601 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.942730325 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.660331377 seconds)
    (172/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.770434777 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.263443447 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.954543452 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.169162085 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.783004599 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.89858915 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.85984524 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.068829623 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.076568866 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.770632646 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.522553894 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.788559247 seconds)
    (184/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.97298198 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.805685292 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.780784386 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.640014353 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.880462315 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.783932886 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.218366921 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.861625441 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.71330425 seconds)
    (193/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.883272231 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.415101944 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.465786475 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.879020351 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.81892357 seconds)
    (198/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.360094779 seconds)
    (199/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.214032383 seconds)
    (200/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.474687272 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.081811397 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.089007872 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.045104373 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 6.788357809 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.963984414 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.789776164 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.843667984 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.173976456 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.637974519 seconds)
    (210/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.023794252 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.895017842 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.860394424 seconds)
    (213/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.181554028 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.924851513 seconds)
    (215/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.796846889 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.917861014 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.918230047 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.938705629 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.029637794 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.616670089 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.788940957 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.443283628 seconds)
    (223/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.971230763 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.142493363 seconds)
    (225/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.159465835 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.790276471 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.723426975 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.987548 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.785787572 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.832360753 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.928304644 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.784067527 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.185388561 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.250488835 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.772914822 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.907149791 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.818862131 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.887054658 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.090663379 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.907864833 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.349938146 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.965594885 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.037690722 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.113470154 seconds)
    (245/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.935083697 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.768858933 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.04086801 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.877033236 seconds)
    (249/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.227172296 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.776836962 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.895193353 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.786712985 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.671032998 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.946770076 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.329295029 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.891704167 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.473580939 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.651388583 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.788259574 seconds)
    (260/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.092699951 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.787944333 seconds)
    (262/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.911074965 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.821152554 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.799838809 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.897291451 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.127471685 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.933146261 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.77629829 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.678158335 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.906289339 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.802029105 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.884551056 seconds)
    (273/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.248659571 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.781077724 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.376551564 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.829628794 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.805862327 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.805292697 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.124852263 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.031700078 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.864382557 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.863325288 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.221770367 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.914223941 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.183540404 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.858936521 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.019863648 seconds)
    (288/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.931498643 seconds)
    (289/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.696030285 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.920632266 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.87159637 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.850291348 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.599379224 seconds)
    (294/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.06853247 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.108927732 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.715407545 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.814530988 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.779943673 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.141744122 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.824474217 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.893387946 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.786201759 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.657522457 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.21023089 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.952568337 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.920990146 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.013802088 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.134379606 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.970704071 seconds)
  done (took 981.310677129 seconds)
done (took 983.288063018 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.819540336 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.814938583 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.797583934 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.818597125 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.910188453 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.825743957 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.80784638 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.800105123 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.844593448 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.847233594 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.796009526 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.824937052 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.798608095 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.798969138 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.797810064 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.811688321 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.113562998 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.834214769 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.816007876 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.807782797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.81599247 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.794673334 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.847951249 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.825302089 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.801753365 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.801940241 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.800790465 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.819467693 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.91107971 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.802579652 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.801595259 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.810767402 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.116489729 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.834125258 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.793807461 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.818148022 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.810433826 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.80816223 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.803349609 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.831889101 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.19826549 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.839511442 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.801711929 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.801062013 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.800001717 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.80538826 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.801958247 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.806792085 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.813839098 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.814678786 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.192184515 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.85682744 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.801834423 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.800206543 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.811400521 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.801627016 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.804984212 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.814873336 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.820100569 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820113986 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.095264276 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.835881718 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.802851143 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.817437637 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.807932341 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.225883446 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.838403379 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.805437862 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.20103921 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.845839884 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.227033552 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.851935975 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.801904532 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.815193408 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.833563641 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.115261687 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.826754302 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.801172376 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.809385771 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.79860287 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.811373588 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.815304535 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.806338532 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.801992136 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.815911106 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.830085358 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.812475144 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.805699654 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.810854861 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.821804034 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.810344282 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.81374504 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.806412333 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.797696349 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.812143659 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.804890774 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.804768601 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.805050522 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.806950799 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.812678466 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.198080796 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860275749 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.799361926 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.799418456 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.802849307 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.816917629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.198260309 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.845316877 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.824328812 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.85088978 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.804374689 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.098817864 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.841125045 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.819827101 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.812694254 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.805753116 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.798690251 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.098070285 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.224701015 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.859869506 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.804875588 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.79918035 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819430465 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.806189997 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.800724781 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.119766269 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.834926541 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818519768 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.925574424 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.817175963 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.835985121 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.800464845 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.806850382 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.835400263 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819292137 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.836604796 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.807446715 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.820586304 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.822054575 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.80220631 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.813964261 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.818433577 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.806564368 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.811380497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.800351097 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.836703813 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.818390119 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.81863026 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.827231438 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.927136312 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.801494443 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.101478853 seconds)
done (took 283.503388267 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.874475799 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.798690059 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.898563622 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.802255731 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.883142064 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.887464806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.798095362 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.800728344 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.798864828 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.178724088 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.799785004 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.800307542 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.80488377 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.799534293 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.883032676 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.803095769 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.800831309 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.141996384 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.803388892 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.876081195 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.8053552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.800487387 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.801937653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.181978845 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.804257004 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.79937118 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.877025751 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.803467677 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.145585927 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.800726581 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.799356145 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.144196481 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.894077268 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.821534137 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.812728919 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.810852944 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.883733922 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.807994431 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.884559557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.884832333 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.90028572 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.843663249 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.803076958 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.796146733 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.807955527 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.805069843 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.79961976 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.831679125 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.803924842 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.801574822 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.14270594 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.813061758 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.811426045 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.80116064 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.802116813 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.825685733 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.80129047 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.805542073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.896931019 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.804543495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.866027838 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.18018828 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.182551092 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.805231808 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.802749818 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.802064544 seconds)
  done (took 179.857142135 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.86982547 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.88358417 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.869696831 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.80955916 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.856078549 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.872386675 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.80942437 seconds)
  done (took 14.693778738 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.81054226 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.805504496 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.856851049 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.857786473 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.805694367 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.961315768 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.804512769 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.817613773 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.802708893 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.858148051 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.806517752 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.805129069 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.812249891 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.801133892 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.855216468 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.817534152 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.921402316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.805925539 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.807424584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.956228212 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.803416735 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.813815735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.839137471 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.817222255 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.806464077 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.812388889 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.396996091 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.807786133 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.803751835 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.804508301 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803915769 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.847675031 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805694383 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.803832063 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.804940289 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.9191587 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.807752707 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.803608928 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.806333383 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.807857453 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.80730621 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.80830754 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.809419516 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.804492905 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.807559747 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.829301091 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.806470151 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.80701483 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.810337452 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.807675347 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.841123457 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.807570386 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.805344582 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.808103416 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.861744032 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813900706 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.809463738 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.804405754 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.808116379 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.806777968 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.957689534 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.857628722 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.807044099 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.858864281 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.809128875 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.809134027 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.807528876 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.807885654 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904276004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.80799762 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.858583982 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.806195291 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.965061258 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.831105487 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.808597061 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.812110786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.809694289 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.807865278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.805519328 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.814404396 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.805251988 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.809805673 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.813994803 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.808362211 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.805922141 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.919841462 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91320342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.805681975 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.821797925 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.81894891 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.806295459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.842310547 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.807462321 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.80613937 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.86642791 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.925068516 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.863211751 seconds)
  done (took 199.662213854 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.814903826 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.816068009 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.810869194 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.826044697 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.81036717 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.809123576 seconds)
  done (took 12.613538014 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.813519118 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.811197232 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.808927206 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.809878412 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.810339073 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.811340345 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.813251595 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.811373754 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.815242407 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.81033511 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.812258845 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.814050594 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.811211155 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.811609666 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.811546051 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.810406768 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.812842311 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.810259008 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.810768989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812369852 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.9554368 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.811596195 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.814231843 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.813067331 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.816049399 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.811324982 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.819302499 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.813313922 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.810807154 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.818747158 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.815214678 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.812609071 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.811644883 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.81797244 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.816928834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.811409076 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81638094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.813417603 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.811896707 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.814339211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.815316791 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81332587 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.813561214 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.816137854 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.820563848 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.818583104 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.820268512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.821921515 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.816561824 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.817800893 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.815279155 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.813704378 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.814272935 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.815607611 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.816610721 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822403296 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.819652055 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.815449596 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.814201937 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.815239749 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.817481574 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.814814229 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.816739488 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.818175198 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.821566924 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.816498549 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.818893492 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.818927813 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815133371 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.814314571 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.815838389 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.816122709 seconds)
  done (took 133.528821886 seconds)
done (took 542.095582712 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.944368169 seconds)
  done (took 8.675651702 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.901927147 seconds)
  done (took 8.676855697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.225975397 seconds)
  done (took 9.958542069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.848494822 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.827310797 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.816773853 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.809766375 seconds)
  done (took 29.057368685 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.935541876 seconds)
  done (took 8.663530662 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.828806968 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.804156317 seconds)
  done (took 15.397170302 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.870334998 seconds)
  done (took 8.599217036 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.916299114 seconds)
  done (took 8.671187139 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.822100804 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.842638421 seconds)
  done (took 15.410983421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.792677654 seconds)
  done (took 8.523102171 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.532628441 seconds)
  done (took 11.363485186 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.824414587 seconds)
  done (took 8.666777313 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.883319328 seconds)
  done (took 8.614536552 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.859181769 seconds)
  done (took 8.589896328 seconds)
done (took 160.60148094 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.811053704 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.809418883 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.807436661 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.807663941 seconds)
  done (took 28.965611461 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.845930498 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.846394438 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.847813706 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.857717497 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.848729768 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.847241224 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.839824076 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.838418554 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.858162864 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.848801804 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.847805726 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.848501504 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.847498969 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.839671096 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.849917134 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.84873169 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.857689066 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.849690488 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.838899339 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.849946813 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.814103513 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.857620255 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.849764201 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.814200689 seconds)
  done (took 46.024758705 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.006703011 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.884420633 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.968782684 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.86652443 seconds)
  done (took 9.45709884 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.866603682 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.868019081 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.878784572 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.918414818 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.956642941 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.878154062 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.837967287 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.835623595 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.822651113 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.868630403 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.944601232 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.862646655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.952825611 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.814123647 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.021003272 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.815342801 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.814763118 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.866969934 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.918432568 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.93298449 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.81477887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.866848905 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.869808137 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.863081302 seconds)
  done (took 46.822526576 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.813349878 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.822486547 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.820682063 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.813675406 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.816322516 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.81458175 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.820921982 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.815098826 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.835561827 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.816258919 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.813780041 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.816376354 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.813642247 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.816026719 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.813615944 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.826336558 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.829208491 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.814592895 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.819264763 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.822639046 seconds)
  done (took 38.107024561 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.808800178 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.662248881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.161836147 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.066388692 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.811969051 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.815081965 seconds)
  done (took 31.060360541 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.829876499 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.823550547 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.816492472 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.873933621 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.955923577 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.82270439 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.816128229 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.828563715 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.864528642 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881959363 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.840005209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.845405839 seconds)
  done (took 23.932739494 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.813049215 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.823833448 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.815638779 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.840048404 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.827123548 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.824386701 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.823729862 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.811834088 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.831056334 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.83589432 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.824366688 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.827807316 seconds)
  done (took 43.636357172 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901230022 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.700048484 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464313304 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532988477 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348517986 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02302142 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339044792 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99278447 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.816113823 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086389221 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.474537068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067685531 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066714436 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814270836 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889355223 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.280107149 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114230526 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047443292 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842009324 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532122196 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941704524 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340619274 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.6168336 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952147436 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023739441 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.946195251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.073724267 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.77041319 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953518348 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852330116 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824616087 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.815526448 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08836476 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06719635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903082229 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824689456 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468550317 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.532716191 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.803582138 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.560997941 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.57757494 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.962129116 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821961639 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815642331 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748442111 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341248272 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999873659 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.819562455 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.51700321 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816490609 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825962075 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902657383 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.819997774 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.629013745 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770704258 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.092567939 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.81346285 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822161425 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368714023 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933960439 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440264197 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.756373176 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.908017636 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602056358 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306553228 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.978541427 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.820413109 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820151582 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749854179 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.607862124 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947345725 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961593114 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.836803322 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465674644 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13194878 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.556054773 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908377385 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113860713 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.616230262 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.75792018 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043637868 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.766684038 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750321831 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.67326097 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.750764802 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090226936 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857987901 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.476920585 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858986451 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994121823 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82843123 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837707317 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826257729 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039475458 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.699466279 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819251745 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.413984998 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.115967998 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839781412 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.995713255 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751426789 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.821386096 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070965774 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.028274612 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.068433523 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.291922975 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989096822 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819816458 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.909058506 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.734590033 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.833827972 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.108304736 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885400079 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938818974 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955758814 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.778023931 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12439802 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848984161 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.996610424 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.475775851 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094756069 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.148928309 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073685514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903672061 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821481341 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.821318173 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.611483145 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450563597 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.041881181 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.820106203 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318228865 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.834978546 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.8215407 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754517394 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.472892655 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.498959892 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.938480324 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042519417 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.775414414 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098150997 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753924739 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963684972 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.80790262 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.042404987 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.480509381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.909796858 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079043232 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318822532 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.069486151 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834799774 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840036041 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903213121 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842103338 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.232902169 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.077030442 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.823869759 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.824699526 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603909621 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.902378919 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825486874 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.825823305 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617511378 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113986152 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854751394 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.823254922 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709443479 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.835825816 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904977504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826864979 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8304828 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.346791494 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.568878934 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.83221549 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.499283327 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057201615 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830757132 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.608786352 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022247574 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.909707611 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1080122 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891328669 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.75576281 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.525150831 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.525229146 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824873285 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755887317 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.823374453 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829853691 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833437247 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.015178547 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120207818 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876200771 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.598691934 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944877727 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834470799 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.827534321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824494729 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.320400111 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958708193 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453977921 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833294137 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959483248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.836603863 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756143352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.826433622 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827409614 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.82512727 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.778277248 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876126403 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.607599886 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164945023 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082183303 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.469194439 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840414787 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.570298154 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.962331861 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.845501646 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.436504617 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820925393 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.965648502 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890779957 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.834143549 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.634202017 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.615796548 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377449919 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159831677 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158879348 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28924164 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.192975421 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.166553304 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001227993 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058619328 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351930166 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885028438 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004121277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770189017 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912469604 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.485409723 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193949482 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840400103 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052160908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227050169 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.512826706 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002283196 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035707941 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859365525 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.629418726 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857484639 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.347817371 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979750441 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.483561234 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060927997 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003025089 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.438765394 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.955096404 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.826680877 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294676102 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910133237 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.535484369 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186649402 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365107797 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.52305991 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214177986 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.826712637 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27083853 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193152752 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.161657857 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.923564357 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761774493 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836772826 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836460198 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.826998301 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.803885041 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.759199161 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.108876257 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838358243 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06106406 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.10509368 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11080122 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.737835279 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.832801804 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827626527 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132908456 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.507020515 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067930004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.161455888 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.401067883 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835596815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.760814089 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759778774 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.530224739 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.836645066 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.801127728 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05939686 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.939117518 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785454826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.221439494 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143668862 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081581828 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.842974488 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115912718 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112660602 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562332454 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856868784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.929953623 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.440454569 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.595867864 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.05052666 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062835418 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.629558035 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058224572 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490145658 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.806351653 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.829154409 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042762262 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.051870937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.520725141 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091961302 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.553866371 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.842008373 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21200794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894907207 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.496191758 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.055288191 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.921818348 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839929148 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911643655 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838290783 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.840398057 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839947101 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874689805 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.498496255 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979811636 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.843099631 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92133997 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.962003848 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420661613 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.840557169 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122567665 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216456483 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181362945 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899108589 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830774064 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833909204 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765027074 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969973951 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274775979 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10394137 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.962329618 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.970163226 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85630395 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.444838465 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.111322662 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145318005 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107322342 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.72513407 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832416659 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922958755 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.054432257 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842303172 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.041487536 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06679815 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157616977 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302891031 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.971298654 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113739118 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105855627 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.196191494 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.833238038 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42058003 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.842361657 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357471822 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.874106103 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.524318507 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133145622 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841443161 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058309837 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.854565914 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.029091695 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.28537883 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611002217 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203103336 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.833807651 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.896162476 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125547627 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256284044 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154410413 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914401277 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844674152 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.530453538 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973306136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.803910384 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.103077549 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835537226 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044240695 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.545406065 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841731209 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132936388 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151596059 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.834279544 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.833076063 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89504606 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.84321596 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055423889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106669049 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086678926 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843005967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.843030586 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.65288701 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130145717 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901385676 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766975141 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.838710924 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930146864 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081820595 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855957984 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.351327629 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.53755156 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140031011 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.753805876 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857642 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232210117 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29574097 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194274408 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.363766704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073601408 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.395350726 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.674470013 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214322392 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.83963652 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.233293436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214360954 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.839651712 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348108711 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948750262 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.118806384 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168170402 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.856179181 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682128876 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.889833543 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05814384 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43077493 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77848435 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8371249 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.896397443 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.83757748 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.831939687 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847652064 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.8480002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.707238384 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.678178902 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32810162 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.842549293 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.848919455 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.401109591 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397872341 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946312265 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994289304 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844850896 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.544254208 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.126826537 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090380141 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338866766 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.912710958 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.840652604 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838236122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.763143952 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032545122 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.031528543 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141133829 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.177322386 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.948919143 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841824725 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.052550391 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047914043 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.446614013 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003127707 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221383471 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951356774 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.767333719 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.549889875 seconds)
  done (took 1659.056365432 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.852320409 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.870174275 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.846972675 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.888428785 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.860039733 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859488383 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.90385257 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.845320661 seconds)
  done (took 56.687929119 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.838245788 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.018921487 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.846454879 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.838849025 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.86163455 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.839688353 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.025564024 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.850485608 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.862499038 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.848237005 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.839140262 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.848972638 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.576104679 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.865297524 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.840668181 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.854339513 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.856997614 seconds)
  done (took 74.280740211 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.841668296 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.191460704 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.85923631 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.860304895 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.815807393 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.853100917 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.867133917 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.893782204 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.845401258 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.018571752 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.175603797 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.849525733 seconds)
  done (took 89.833298692 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.855391682 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.845459756 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.844984308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.845620965 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.84590064 seconds)
  done (took 11.006090223 seconds)
done (took 2160.623549096 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.089855983 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.024908281 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.068105756 seconds)
  done (took 5.854632722 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.985757058 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.035034498 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.152908113 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.174944469 seconds)
  done (took 10.112832201 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.12293313 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.20959212 seconds)
  done (took 6.093075814 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.168820801 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.875959642 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.219287183 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.838969279 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.844502674 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.841828198 seconds)
  done (took 22.291599572 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.842695711 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.845908704 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.842582881 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.845610402 seconds)
  done (took 9.136429253 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.824283331 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.534085153 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.826278918 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.841835994 seconds)
  done (took 20.787867028 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.995674206 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.958980965 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.986316363 seconds)
  done (took 7.70255625 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.329556207 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.060108167 seconds)
  done (took 9.152423239 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.00447436 seconds)
  done (took 3.766279513 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.872879571 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.115278461 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.337807408 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.371058331 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.432281748 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.747971506 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.184741479 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.07755558 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.298995604 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.310061152 seconds)
  done (took 24.510985445 seconds)
done (took 134.52607213 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.193114676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.869283437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.046358722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.203753043 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.081161335 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.046532161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.059967853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.194587735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.885456676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.872304584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.205312707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.077038251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00801059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.86333269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.01906241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.863031666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.073441587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.212804522 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.88849771 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.099078636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.07046285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.847555809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.041061657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.860956913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.074638708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.994630921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.390393159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.861709074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.024978428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.401383359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.000961009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.236539721 seconds)
  done (took 167.332470386 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.838431425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.838207864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.835968577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.837089992 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.384248656 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.83795095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.837711495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.836133032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.307211562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.290746647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.835849905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.372926324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.835546308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.835029554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.837252099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.835231224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.466795773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.834765601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.834704124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.833981212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.834722011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.209445631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.83447005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.237320705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.466806609 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.835265026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.832764995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.833738403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.831823699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.832433395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.834919563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.835078198 seconds)
  done (took 208.546168171 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.753411601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.835401355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.835217154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.834779981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.836327616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.835498779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.835416001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.834611646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473357405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.463640483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.835080937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.83569205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.836029945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.834356933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.83351853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.834492139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.833811569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.788039992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.834969931 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.84122316 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.845012719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.454256545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.847606244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.440351687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.839856006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.842192987 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.834777084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8420992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.844459438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.844550045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.850319939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.835134306 seconds)
  done (took 218.921234208 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.09367353 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.840328222 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.840941661 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.759845574 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.840879353 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.839691492 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.843564669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.088727802 seconds)
  done (took 18.917961406 seconds)
done (took 615.489812768 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.305520598 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.148263973 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.024758176 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.864604899 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.132382733 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.898738051 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.860807142 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.924672352 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.474645042 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.93019157 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.531189053 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.883263243 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.610370309 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.887725559 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.983938196 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.919884572 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.403302241 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.492017504 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.037839314 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.942277168 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.032657078 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.78701311 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.947755879 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.524268654 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.630584098 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.844110384 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.943313854 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.410559892 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.873740459 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.021235808 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.619012435 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.171915134 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.879700359 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.858391623 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.91701163 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.894189199 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.140550036 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.878267371 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.98656465 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.5939969 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.957367587 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.386225867 seconds)
  done (took 101.313044899 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.83167859 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.830216 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.828547417 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.830096004 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.829746027 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.831103904 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.828745364 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.82964183 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.83309697 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.829491128 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.829000684 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.829360728 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.829165553 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.829408195 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.828620409 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.828473111 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.829491492 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.830414942 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.828927974 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.829697221 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.829538641 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.829322706 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.844727852 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.828800286 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.830729576 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.832436885 seconds)
  done (took 49.358981532 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.843314675 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.994527824 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.080516721 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.865022907 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.844103939 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.845362302 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.862419837 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.849047505 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.845970146 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.845174207 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.948276984 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.849664416 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.861766937 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.079485033 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.861592732 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.843541987 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.844296572 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.844550617 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.003708922 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861001642 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.864288537 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.849006039 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.862312646 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.857194297 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.845400171 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.844704593 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.848002666 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.337725818 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.85463639 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.948497532 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.891067545 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.872558185 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.280163326 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.088854909 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.90312003 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.855845752 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.845062268 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952160424 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.850968794 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.844727728 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.861896529 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.849733198 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.080366012 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.33982873 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.860976257 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.846007012 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.347701547 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.963374739 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.88737997 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.855990794 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.082310651 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.864150708 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.846295529 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.846112415 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.883349981 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.851307869 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.845578862 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.195988666 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.858512428 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.864234198 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.851199299 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.846665078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.006745908 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.85636621 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.99811926 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.856535499 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.852935245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.846949944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.08206866 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.864209343 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.340780506 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.861998837 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.846818484 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.950570508 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.001935582 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.376505529 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.86124622 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010409117 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.298305812 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.872396981 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.854143313 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.330065753 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.87611423 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.855764435 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.849189946 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.848827498 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.846469989 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.889679794 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.863086141 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.278630826 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.348620978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.21652268 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.87454088 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.861569307 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.847925032 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.196291945 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.856762632 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.84714319 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.07869228 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.354076463 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.863087212 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.855289809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.332678569 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.864381419 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.866535478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.856679194 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.086920221 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.865923519 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.891808084 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.848470934 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.854440488 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.849581779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.866665571 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.856388322 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.849414981 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.326463655 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.974296021 seconds)
  done (took 229.530569044 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.845293976 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.857206828 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.843538784 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.8587317 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.842390785 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.848274683 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.843256748 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.842865034 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.847799139 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.84335565 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.84333345 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.842748504 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.844831753 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.843287196 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.868124773 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.859778852 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.457787638 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.853527388 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.854847139 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.853555156 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.512075849 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.861487272 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.854807979 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.861605279 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.856404066 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.854338634 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.857617046 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.869749094 seconds)
  done (took 166.891194304 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.860522859 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975819485 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.880109143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.888697809 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.869222305 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.858494786 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.883087062 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.876466938 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.865312108 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.858244408 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.858502433 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.921835176 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.874393792 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.960236026 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.896468098 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.892567482 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.965039881 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.871270975 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.858429439 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.858369182 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.890053913 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.855193702 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.922134582 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.988836661 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.879755721 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.977733597 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.865282822 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.863327482 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.861286277 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.979205854 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.880074045 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.922432106 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.890178541 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.880507092 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984464395 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.979157931 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.972119949 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.895410775 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.866851719 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.859693128 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.859782531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.847911227 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.97837924 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.879756351 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.862416818 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.966369007 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.880144387 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.863549361 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.869642465 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.860301523 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.875015745 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.879583795 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.928889732 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996389132 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.896044999 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.88691752 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.887101683 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.14850578 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.871935357 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.962348218 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.857908448 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.981791012 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.883431099 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.849017378 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.862508871 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.867603835 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.891424091 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.894894685 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.967120936 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.873762706 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.962132917 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.902441367 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.869984226 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.862812753 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.864458933 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.981193663 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.981052346 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.90288167 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.901731259 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.89437629 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.858140281 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.863010682 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.851162604 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.880394389 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.867115244 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.980202898 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.981839734 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.875671333 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.865733981 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.865446991 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.865461581 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.892596149 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.989201094 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.89946346 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.957025281 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.935816048 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.939628573 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.878208156 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.877264093 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.867802101 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.928034309 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.879444352 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.87452698 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.198188007 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.935890753 seconds)
  done (took 201.826870147 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.320666046 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.921451207 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.92065452 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.190970657 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.212748175 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.792688613 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.911129391 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.913773696 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.936284031 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.104379613 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.983761092 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.931482466 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.900165113 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.887151738 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.912417034 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.93500037 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.92149949 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.235607379 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.019464656 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.050706384 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.894388263 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.230733812 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.194805707 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.295114362 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.949989314 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.275675485 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.569045277 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.055985929 seconds)
  done (took 61.25465509 seconds)
done (took 811.933459042 seconds)
SAVING RESULT...
DONE!
