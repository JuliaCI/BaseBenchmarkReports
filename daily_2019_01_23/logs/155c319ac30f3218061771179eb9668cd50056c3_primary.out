cset: moving following pidspec: 30796
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.330824326 seconds)
loading group "string"... done (took 0.544982438 seconds)
loading group "linalg"... done (took 7.329307205 seconds)
loading group "parallel"... done (took 0.170247992 seconds)
loading group "find"... done (took 1.143104296 seconds)
loading group "tuple"... done (took 2.081911197 seconds)
loading group "dates"... done (took 1.308577371 seconds)
loading group "micro"... done (took 0.241301764 seconds)
loading group "io"... done (took 0.969314955 seconds)
loading group "scalar"... done (took 41.350527647 seconds)
loading group "sparse"... done (took 13.300329285 seconds)
loading group "broadcast"... done (took 1.004765516 seconds)
loading group "union"... done (took 14.321735067 seconds)
loading group "simd"... done (took 4.94105746 seconds)
loading group "random"... done (took 10.127740864 seconds)
loading group "problem"... done (took 2.007976143 seconds)
loading group "array"... done (took 22.473524072 seconds)
loading group "misc"... done (took 2.009922329 seconds)
loading group "sort"... done (took 3.406938369 seconds)
loading group "collection"... done (took 19.654655156 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574023722 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157467131 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149659549 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149005615 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199923178 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143767894 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158347889 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098067096 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961989472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172200385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152238746 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525221772 seconds)
done (took 5.17976993 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.258993021 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095808809 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104321726 seconds)
  done (took 0.879062107 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077172156 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146148103 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094349784 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078391773 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095577615 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07746968 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095591871 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078072249 seconds)
  done (took 1.349079674 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08733805 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097902923 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081999119 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097567242 seconds)
  done (took 1.049846704 seconds)
done (took 4.303561009 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.726138313 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274293517 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204061289 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466624769 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193611905 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217242024 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674256025 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351772996 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253383415 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100830496 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135629013 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39480828 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136759931 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681654522 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089626917 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124562838 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177501783 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459275945 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082749341 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109653027 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116881664 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140453349 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128897306 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091412042 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185654529 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082094377 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194146322 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108661644 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080707428 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274768801 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201145181 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680380121 seconds)
  done (took 10.862888672 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111842472 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134035662 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098222948 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138394334 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134618738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099938139 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084246897 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096566369 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121892301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176306899 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131140148 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121662122 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095228123 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082958304 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116333494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24627209 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120639839 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099704895 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100752697 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103629605 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12278145 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113054633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10899906 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0934354 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166041412 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224317714 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11165142 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126251953 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097195291 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112906502 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142922819 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141698182 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095385435 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081536467 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172465995 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124854274 seconds)
  done (took 5.145206778 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099613889 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190713829 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12188396 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170717854 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156377106 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079955767 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144238947 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096460761 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114465357 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257513216 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.119058315 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.494424072 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141849166 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09994731 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098667968 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083232072 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098568116 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.46921112 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159030379 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136156513 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095416231 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105606365 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099939365 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363698694 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080499924 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095080012 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082659688 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086600076 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162442352 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082252924 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.212442889 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120960391 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081691712 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135208884 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205684372 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109946404 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134760597 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096693147 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079368751 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176406205 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10475244 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078382003 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097454378 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120189666 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118302352 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135000614 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098940486 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096819115 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.196658096 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080347217 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112906118 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.950849175 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181589987 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118518281 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097690032 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305653121 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099270724 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097184001 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078672476 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.302423927 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.199671691 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098533926 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097151045 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079949495 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097588441 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380441142 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0805637 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.022461975 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082478044 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106846359 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084923474 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096256477 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07596092 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104864307 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102902713 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098521046 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097168066 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081513354 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097458266 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078410794 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098796864 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106894567 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216185052 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080829551 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098282402 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077901638 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094924349 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115869474 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110302964 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098829757 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094926213 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114147903 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098200639 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097244457 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115944888 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098939918 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106563684 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082363324 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142859945 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096156804 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16392602 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095582569 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127143673 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099064949 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11563189 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111005191 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098932123 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168482406 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078819486 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094995129 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079150041 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096071253 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081082176 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099458197 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109587707 seconds)
  done (took 23.078584519 seconds)
done (took 40.869288937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324598701 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103027752 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102392525 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103111762 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101080684 seconds)
  done (took 1.496102292 seconds)
done (took 2.23144908 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284455 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172864473 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094272246 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164659953 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092471273 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163006541 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158146415 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093809333 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216945053 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093600834 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159156699 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076447456 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093533985 seconds)
  done (took 2.621302628 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093262328 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114754027 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083500045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111707977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076777416 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108983763 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093518787 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115560712 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108170241 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085227799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093085449 seconds)
  done (took 1.817179383 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094399997 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111895863 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083819414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110227509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076851042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109754732 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092613431 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115422905 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109313092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085439937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093382488 seconds)
  done (took 1.814428959 seconds)
done (took 6.977956739 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091107598 seconds)
  done (took 0.819847899 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926935228 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.591261234 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113099075 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149355875 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316308668 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17182058 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474409186 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125940351 seconds)
  done (took 10.805693743 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113364755 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112699958 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100254102 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086056651 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101217932 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08453452 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099448318 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102378957 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083289491 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101988426 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085907298 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098439457 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100016652 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083174778 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101824815 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085013325 seconds)
  done (took 2.338296907 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118359708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11780479 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104750567 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107048577 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086841452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104784234 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105032203 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088056904 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.1016199 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102639805 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090386886 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104713121 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103928111 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080609269 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10533429 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107143855 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08519296 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104925216 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105454601 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08977 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105269066 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095584679 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086076292 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10560684 seconds)
  done (took 3.249562636 seconds)
done (took 17.946938954 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159765649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108675116 seconds)
  done (took 1.005555396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095770107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11252934 seconds)
  done (took 0.950864358 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097210927 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096215719 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122858545 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111222802 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081711694 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098087596 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120915994 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082986114 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098630923 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098156862 seconds)
  done (took 1.750007702 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082820852 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110057977 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103469316 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096211531 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096437066 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090279738 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100656525 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11258411 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077896015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103138883 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115457536 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087112538 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11771049 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107295945 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101419644 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086047887 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100552002 seconds)
  done (took 2.540599273 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079960223 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097098219 seconds)
  done (took 0.92095493 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081119814 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09530772 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083055675 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099399439 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096094542 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078726638 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096014575 seconds)
  done (took 1.371986019 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.43520289 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135530906 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258122885 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099551255 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101937543 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295572718 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096689566 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084555727 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102253122 seconds)
  done (took 2.408511168 seconds)
done (took 11.691630827 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093279684 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116004251 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11432567 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454540011 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106320707 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09670287 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145629821 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249979695 seconds)
done (took 2.123912836 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142905964 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.563124342 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421697256 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228692863 seconds)
  done (took 1.967713718 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.402218141 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098054957 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081452046 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082168964 seconds)
  done (took 1.420501533 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07945738 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099328796 seconds)
  done (took 0.933081128 seconds)
done (took 5.222775702 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079814706 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130866593 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081502449 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099597025 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079272807 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099402713 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077898048 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097005789 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097578484 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082006358 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09805147 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081868525 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098235892 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081874266 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096983952 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080599797 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09926705 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079891804 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096359174 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080471529 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096828414 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082187071 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096678941 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079267839 seconds)
  done (took 2.961128089 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100013379 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099110515 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105438771 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086771237 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104376392 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088291362 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104998176 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099809965 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087944106 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102024485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105135648 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086503614 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101488595 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086315068 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101688027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103911237 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088740072 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099747672 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084385118 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103369494 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104492728 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082923052 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103990484 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104211179 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086763874 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103346658 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084339061 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099454543 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10561323 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086471678 seconds)
  done (took 3.653196061 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084514114 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093643355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078053917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101180357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077180904 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097488859 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078058269 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095511278 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079563848 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096171015 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080823805 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097333025 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079884151 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099185289 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079903165 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100695748 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113396966 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080509833 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097000988 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080434607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101075847 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079660372 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09721803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079541184 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095820977 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077496991 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094661029 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078548733 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095021613 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078412935 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098400843 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081308633 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094675842 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08459802 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098306456 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094746195 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081107637 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094225696 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078116237 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094381875 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078020093 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094863722 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077262704 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101173378 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078390447 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097323574 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077597716 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096805897 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07816259 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099304975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077869689 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094311484 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096428423 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079219362 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099510236 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078203331 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096292925 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078974766 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098978662 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079784138 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096643284 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080077991 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099785905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080240454 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111467172 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085664882 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096763615 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081623096 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097981133 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099397637 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081250871 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111302497 seconds)
  done (took 7.20845225 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133306529 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128427393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082742302 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100512351 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07847529 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098708491 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084441966 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098981147 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099632363 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086629418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098431988 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081431545 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099265861 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09652796 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098484783 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099984003 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085955641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096283649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079631144 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101692311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081425161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101572199 seconds)
  done (took 2.874887169 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210139651 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106629016 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144406037 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109510902 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084679765 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109343273 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104115964 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088924933 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104821782 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085017175 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102401374 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104553792 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085040888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101985096 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102761912 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087233943 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104891913 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086795892 seconds)
  done (took 2.681956161 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09135504 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100152293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098858792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099074295 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100030825 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085591873 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106386221 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.220635041 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085538493 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099808466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093035367 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103343377 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103086503 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083795476 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102289991 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082984163 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103802578 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082906389 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110061108 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107808746 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088754983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109412046 seconds)
  done (took 3.019454949 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095894175 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102168208 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120262431 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085597688 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098559639 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080438595 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107724385 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082965622 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109275595 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102027572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082822274 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09956677 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089421705 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101127118 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106814193 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082945638 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103287713 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083805806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102512459 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079274701 seconds)
  done (took 2.681451477 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10196737 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100395434 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102050222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094287574 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102223738 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084147797 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111846982 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103043968 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085625084 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126875728 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102670105 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084491569 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110932647 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107790634 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102180414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092712623 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108285522 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109352147 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082910047 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099499906 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123023405 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082613496 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108466466 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100655873 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083240709 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099827964 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098965438 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087460813 seconds)
  done (took 3.563369478 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081408573 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098117805 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079488342 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09680383 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078328663 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095665543 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0784475 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095370931 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08056975 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095384479 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081089602 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098098489 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081216714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09806222 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081266174 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099392045 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08213659 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097029293 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080186975 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098755261 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082781279 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100901581 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083363151 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098375521 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081045669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099639074 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079003136 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097250887 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080985639 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096159938 seconds)
  done (took 3.445545181 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090347013 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105541104 seconds)
  done (took 0.966970282 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078879749 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114836926 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080371221 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103415398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105071754 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083544583 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108800748 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08814959 seconds)
  done (took 1.528876427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096341258 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109386054 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083488754 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112175597 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109824929 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098018709 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169828476 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10072672 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105521112 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080246538 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113361995 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080844848 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106214052 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082108388 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105052059 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088565336 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098344181 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104627725 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084637218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097626105 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083601621 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108864454 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104289441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.078819713 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100393514 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091812575 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110772112 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099993144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084830758 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106827826 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087471624 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093147959 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082081611 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099742653 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079472567 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10867305 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115684346 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084324965 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109018902 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101026963 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092333099 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09470343 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086072875 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106715265 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10956525 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083594408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100993539 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076808978 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099228051 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084059684 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094504046 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082761299 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094262686 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106368604 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084806248 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110187307 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080677103 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101735159 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083721652 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103041233 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106532136 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083371627 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101578082 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081813939 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109626056 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086291668 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109449033 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094511776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076413105 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097681598 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091591875 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123080495 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105962857 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082848857 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101544084 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079557103 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102794408 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101275913 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087537927 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105748541 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082446323 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10640925 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106859461 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081883407 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102131502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089812804 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098033113 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101880231 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079462722 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117642024 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08171141 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097172897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079824877 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109966217 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102437162 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081815266 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097303544 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089859885 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093597129 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083412334 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100382314 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082281111 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110311213 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105999433 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106298285 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0911069 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107412153 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082132829 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103113287 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080016686 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101115621 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08395764 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106623183 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093897565 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0845432 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100941328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082996486 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108380419 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080438591 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099932212 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107120184 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088290699 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098834777 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079050439 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102894687 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082195954 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10337926 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108874811 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082017858 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096868954 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078134787 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103693066 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082017375 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103521624 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10588648 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08581164 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094436244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081165026 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105127416 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109612832 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081648606 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101193303 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088700545 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101176854 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081368786 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107212414 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102463885 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081564338 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105565831 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083058895 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095961194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086444397 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102668541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099097375 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08585651 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104059939 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084477171 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100689502 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080672019 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105794424 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101383207 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080499845 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099401021 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080437905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110820938 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084627111 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095759157 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097546481 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090297811 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097320074 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082148634 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098769889 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084916051 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101165082 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080628747 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100247732 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101764979 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093234113 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104915809 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101103145 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087661528 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112484249 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082555861 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102661492 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082292581 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101439255 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101167031 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09118495 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105460959 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088535113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102713091 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096593212 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087696434 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108466584 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081527128 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098136448 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080886653 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105120428 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105652457 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085812177 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100875756 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081095163 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100690152 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086245908 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103138136 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099973339 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080988213 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106047709 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082503045 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109984284 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103901982 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095297732 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106315118 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07935968 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104233379 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08008978 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106935897 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095980295 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079334079 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099287171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083250824 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09988862 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086216201 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09495836 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089761692 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108544074 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099750101 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081558682 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100715286 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088898948 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101989725 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086519792 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104406755 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107159139 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092742117 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099970502 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085552897 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111099943 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101435298 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077120432 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105546854 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080678608 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100141368 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081749359 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098669388 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086067144 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109806952 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108067983 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077448852 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103201986 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083032728 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099722525 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081042964 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110361479 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106243634 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086770932 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111706008 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085603689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101692968 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086595565 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100994228 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101141 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08392755 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103998218 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08409633 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103719021 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082156425 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103683298 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081283491 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099282556 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102990804 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083354106 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100761315 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088790183 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100283893 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082548284 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103908119 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101900896 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083496289 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101827677 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081534533 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103971554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083039843 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100751411 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084802172 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096933239 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107639902 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083056877 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109260695 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083905315 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098737373 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089925638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105803027 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107063995 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084026249 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103891333 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087455009 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10424706 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088832731 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109275585 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100710927 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098450589 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113616451 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085870859 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10424625 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101340387 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085538118 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101926499 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086282196 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105191437 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08611869 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103970866 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089680095 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104022231 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101242273 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084464168 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103001385 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083642504 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103525579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07903012 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102190983 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085151625 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105117524 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11528413 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083768633 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105186167 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083602218 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104078119 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083902007 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098540768 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109666 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092153336 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101508111 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109110364 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082569947 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102742528 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093461953 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09561215 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081557648 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098588203 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080401409 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10953175 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102002871 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093121587 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101198378 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082453102 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098450813 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084133923 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100194779 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.084612214 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099122294 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105784858 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086363641 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10187557 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085623714 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107317505 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086282716 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112205529 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100324754 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084203359 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102322657 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079926723 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10003875 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081760495 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105529417 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084877947 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099112939 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08055137 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100902199 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102360499 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084656619 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101405931 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084224445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110131003 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083249507 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103911904 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105811441 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077665546 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104315697 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082553171 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10127457 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081987837 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105192749 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08596233 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102415213 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109991297 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084131399 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102823683 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083091178 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099540188 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082793084 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10189473 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102004501 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082070114 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102430525 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091003377 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099773409 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085940392 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101554949 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102082455 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090553725 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103165365 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086982808 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109226341 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085796219 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103741624 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109645737 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087199109 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105122617 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083899065 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103651355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107416292 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082361498 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107888655 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083365028 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102589955 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08488331 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099848165 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082530076 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101174284 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100780349 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090350771 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103012139 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082782658 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100684184 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081660425 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102594551 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105986973 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090962777 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103860635 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086183128 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09664022 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080833831 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103858058 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081271382 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103362876 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105763124 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089768723 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104243401 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083461079 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10026789 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092247441 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108202782 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105602996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081025217 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105677149 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084486247 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104274791 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08397474 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102191099 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103742805 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087611433 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103569946 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082476099 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109434529 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086987044 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103045998 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103436733 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08387342 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102428604 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079146294 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101733931 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085369518 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106885688 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085470508 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103214012 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112600891 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08286254 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102115671 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087078518 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101536161 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105819374 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078587843 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103225385 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084888393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10429112 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079136154 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100825272 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081286146 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104943547 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083220738 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098131457 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112865498 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09368597 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105895847 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082433285 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10171453 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078806644 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097197054 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101245688 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084817397 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103874342 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093902127 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101130692 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082749377 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098027152 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084334793 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10557968 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105367731 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080171459 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097460761 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082320184 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105303958 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089205098 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101739459 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082787226 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10625566 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104119222 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082043913 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105202641 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080511376 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105921029 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116095708 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084348086 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103242628 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089882458 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110973586 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.1023519 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079352149 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103636343 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087869358 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103285976 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08477736 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104196629 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118280948 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087301984 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101064182 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082482271 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.1047113 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084008019 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110486779 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103253127 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085257447 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106858632 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086285426 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112155994 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105311884 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091787106 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106131277 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086821692 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101451178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083319632 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100767832 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100331871 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084811972 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103987206 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088695986 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110905086 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101498304 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095427266 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111711153 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088230411 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099101219 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08246421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102286881 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097938986 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085109091 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100640142 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082296355 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10009874 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083087475 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103283183 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089040103 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.1035662 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085003507 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102906751 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096084269 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08629733 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105077719 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084792459 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098527165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084448499 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10377148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087217958 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106864774 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102603724 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085878774 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103958144 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08522678 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097786513 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090777476 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10195075 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086858413 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102453206 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102581333 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085569174 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105978135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089499403 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104188721 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104954739 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095518964 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104837159 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081122052 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100212303 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089101453 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101415138 seconds)
  done (took 57.776728286 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14549215 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080528474 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098090759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079320563 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112428094 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099572516 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079329319 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099152891 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081031125 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101750027 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079691747 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097958375 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107956778 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122609117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092565843 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103301651 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098295273 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080515836 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098032014 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080838251 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10826522 seconds)
  done (took 2.866610387 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104210471 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122161498 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116836782 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123043648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093608987 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116240675 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114111038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114658469 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099681141 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110937995 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120216227 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114739026 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092383296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110819932 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11211299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094824295 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118736504 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110713949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114999822 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095905763 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114251221 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115567486 seconds)
  done (took 3.251634859 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084111787 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102265167 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085919656 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097428781 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08338402 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09804762 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088477065 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100774053 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088392902 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102615574 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082290341 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102003259 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104461792 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080162405 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103124381 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081776806 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151880936 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106690432 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082634365 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104842079 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09824557 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086172668 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098925996 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080047382 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101985967 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088895207 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104842685 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082229415 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103220817 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083403541 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10332426 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101302484 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085045941 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103357429 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083060151 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102074004 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083626809 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102860772 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079528363 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101371109 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085587074 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09934404 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084477915 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104610602 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081320513 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10107525 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104001439 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083271054 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097566712 seconds)
  done (took 5.464770989 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103592112 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165894789 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089262495 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142542037 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123733841 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117073346 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091768979 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143119244 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104239089 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086600156 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125151464 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125073554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10795544 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093138743 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114984615 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107679558 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088898199 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10445484 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10848012 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083940714 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108584552 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111020382 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099971861 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120788235 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111851474 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087207185 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107273312 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113204808 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103220194 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114312068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113038351 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093943891 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125269517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113336507 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107145551 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090612203 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126451871 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10907433 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090511447 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105548554 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090807895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113755498 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114410355 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126711829 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088550476 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113503918 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087738191 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106411058 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122691963 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090860049 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117197184 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1240145 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112372196 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089149655 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113335738 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124365179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088355098 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103709641 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107951919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097598134 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101526912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107967807 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099413546 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106249859 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112639857 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121938411 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093637237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111829949 seconds)
  done (took 8.34010979 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094030238 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111186846 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121154436 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123911341 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095081515 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115254756 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113847501 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093792133 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112097328 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11662432 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115270781 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13598101 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086168133 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114758002 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111475373 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091296359 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11195912 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111892921 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094112016 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11336562 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112287365 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124132306 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094909467 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124370442 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147060211 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109528573 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095242553 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114288255 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122192779 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114522683 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127040358 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095407632 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115433452 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124674801 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128043016 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094452821 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108629955 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114272869 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094598955 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115155631 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107840217 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123888053 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09484525 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110131296 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115545556 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094501934 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122318914 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126869226 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119168106 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120435873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.095376035 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124647828 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114668616 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09547279 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1247514 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148560837 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126051762 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125519008 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116788804 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12477356 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104375835 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131174854 seconds)
  done (took 7.862055107 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108031813 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114866598 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116875844 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100568532 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083224605 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109197216 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084746267 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102066233 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115108875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096232176 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118849012 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111695792 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096924312 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121387968 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113449769 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116650576 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092844005 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114563562 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118129629 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113559457 seconds)
  done (took 2.985488162 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094320122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12368182 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085568891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112283278 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109424393 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093770512 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107510873 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108750819 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086592466 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108197861 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095969464 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118734688 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106613623 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093662327 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117080167 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112177291 seconds)
  done (took 2.510961422 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097466266 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117404658 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12051644 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084952855 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104316669 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080869917 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105136964 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100372069 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081391877 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120089658 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08466446 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109471104 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104680543 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082612761 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101232226 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088155689 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100607768 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082788512 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105700878 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11917543 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096381046 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103725596 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105597328 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08734421 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105216091 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092858264 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105973193 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103711052 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08540599 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105706849 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086555798 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113162395 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103317721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084599419 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102988549 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083548846 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104333391 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085041908 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109670462 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104975601 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083257467 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104932882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085598327 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106514298 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080823121 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105886416 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101707267 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091721115 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102586736 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086007867 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105444492 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107649405 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087226711 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115407268 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08939592 seconds)
  done (took 6.257470056 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09921874 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10877819 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08066755 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102557524 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088855188 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107741211 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10817359 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087764847 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106485174 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084119743 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106437516 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088995845 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107828194 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108784168 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08701425 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108315584 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0812449 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107010487 seconds)
  done (took 2.616023868 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09105664 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104751367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093288531 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105134638 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085348714 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107728079 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08037997 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10337878 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104059953 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08635126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105168269 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088120441 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103859811 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087370641 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104779141 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084623255 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107980487 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103729571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086007297 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100698988 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087483572 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103935471 seconds)
  done (took 2.971358302 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118735913 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124750715 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092842064 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230788909 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103269843 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131848074 seconds)
  done (took 1.651019256 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10921713 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120740565 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10571489 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107604499 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114395479 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107169453 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086763777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106818243 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11795783 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101156613 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108487765 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117020185 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116828041 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095834627 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114788962 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113338582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107306702 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087851175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105686205 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127169989 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088662973 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116994207 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108002317 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086714193 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108196649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116303901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118045913 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122318033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087688672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117172392 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114332636 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088262238 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118686589 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123121792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108938471 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097126061 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108010765 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12858333 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114332444 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097112684 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109458642 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114510645 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11899351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093589608 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116728289 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1075995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092983872 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108496984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107703251 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13497954 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114636343 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09663451 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114834276 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117151709 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117628381 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135299128 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101431641 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116499968 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115349159 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123145287 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120530423 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096721324 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117804276 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124331636 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116769152 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119059236 seconds)
  done (took 8.143401298 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102236538 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126308659 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108246035 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122489236 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097173034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108092762 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107651233 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087672161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108632874 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108780326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154574752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088879083 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118298152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116928648 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108108012 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087561854 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108768013 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116972105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086642577 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135170186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107446673 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117013201 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120481331 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099826851 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123477613 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11612692 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108340686 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087421996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107386164 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108093701 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093032716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108755798 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117651941 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086737124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117294396 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107796053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107929589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093251766 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108163877 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114684387 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097134576 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127756891 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108647592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108564769 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122578178 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08802638 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108355692 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086749999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108719207 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107733775 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12392046 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103684359 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122394817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117240997 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108097869 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089795869 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108180792 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107870928 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087976903 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115086422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116675436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109196827 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136463143 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088682729 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109076971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118908257 seconds)
  done (took 8.031487795 seconds)
done (took 156.063203779 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219105008 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198365482 seconds)
  done (took 1.26528904 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087976603 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136394404 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096609015 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168886567 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106831666 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118901358 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140227922 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097887041 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106970646 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086828128 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106658332 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087381385 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17054437 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08679377 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105840013 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107550309 seconds)
  done (took 2.670667637 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114038388 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254305802 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121842157 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105703689 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088502111 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110110053 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084298595 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110859428 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089729318 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104479668 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088423727 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106898597 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084562942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107347427 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109288115 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088562564 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104817965 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087981027 seconds)
  done (took 2.820704109 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113540881 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146432083 seconds)
  done (took 1.125032674 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.23977234 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161339036 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.229603465 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473048184 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278547854 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355564439 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19824749 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210641302 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165043789 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208812866 seconds)
  done (took 3.377670246 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119952342 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181406216 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314529885 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154592427 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106264648 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127641098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15566787 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130102377 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122238544 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121755612 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101644136 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11791275 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137236085 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094258352 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115011074 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11701636 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119720416 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113480575 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114080938 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094925878 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137753933 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105356092 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094373176 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114259847 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118241183 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098045137 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105375521 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084731467 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115689336 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114341706 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092221798 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124982669 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117837324 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153433584 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122760195 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154344704 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118783401 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091044786 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11481334 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11096858 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09750843 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118309492 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124883437 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096611535 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105506412 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117055268 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085807468 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105352099 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093682829 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117758941 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11419076 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092756375 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152869736 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118359425 seconds)
  done (took 7.355663642 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786354201 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161624718 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091689101 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881297134 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141134385 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1051171 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776611876 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115628342 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253694881 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.749527994 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137087924 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120769631 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205377262 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261038152 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956093025 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292379932 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638596284 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124505941 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151038839 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154305746 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118088992 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137128102 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110092487 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428754514 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117324975 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112165683 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096906053 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119099973 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161291356 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125690904 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114182566 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177414106 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250047382 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205189922 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09412761 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11143481 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111070933 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169977398 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263834624 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194052162 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179851408 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108935485 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089683539 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122557212 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132430297 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108791121 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163702668 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174707841 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170376998 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114304461 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119427372 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09888383 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121213184 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16495667 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120908435 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319199344 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310315302 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090658914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121454574 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125771147 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260494414 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101044264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22611506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140294943 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214964608 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090441051 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772222094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170827217 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1118913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095650626 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120220544 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116156194 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120436983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167081787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368734668 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123958298 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115174546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089660778 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243467312 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12436259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090733644 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162215508 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116250687 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12027007 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12408927 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100236409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190915316 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230447828 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123073301 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097423836 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115603673 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125410106 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09509281 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211203341 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219326372 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184074871 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207577809 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121784987 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164426121 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16863018 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120057169 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173630053 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120685389 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124611254 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101260957 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218720525 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145524851 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12385485 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093660586 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118277491 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148605048 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127677839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118704972 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172143452 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456577382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191041093 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08716871 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127788942 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121020148 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162058563 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118421118 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236626017 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123451657 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169411115 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120492749 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086269879 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121375521 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162520507 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122610081 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121038178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122255951 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098817128 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257076879 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194569384 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12181504 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242665793 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18426967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097010839 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192733749 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099594597 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189323354 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098269605 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124048028 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116334959 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75820829 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123741982 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120724006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094023993 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189035398 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112289958 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124832684 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102844039 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110251586 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773697083 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105470686 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122434907 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12443189 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095134369 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121197552 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118487794 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094239923 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183237512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231003408 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097719706 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12024744 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125238435 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161842709 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117716806 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103422667 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125421951 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125061296 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099595481 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115910058 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124595402 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169673784 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16272164 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219529372 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590085538 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090528144 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125534079 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228008111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111796841 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.267981733 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120083631 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225321626 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163128355 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122187268 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30769741 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165320039 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189320691 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127106141 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174849116 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10879636 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097953402 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185300743 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090106955 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11735709 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164998271 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124033159 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122803536 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.941177711 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112620139 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225158356 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109331539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172963506 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11682459 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098065193 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292820936 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112198001 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106736574 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186902835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094414594 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.131099594 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718369041 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104076891 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122038297 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118329054 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22254142 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164029027 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119443539 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097738818 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120072992 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161854423 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230402786 seconds)
  done (took 43.949382305 seconds)
done (took 63.420550775 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277514304 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215871378 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267674518 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169367918 seconds)
  done (took 1.895291682 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17261149 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149016393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122566802 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107040731 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150275127 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08509102 seconds)
  done (took 1.674930444 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361285645 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274822326 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241978242 seconds)
  done (took 1.772935747 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291696729 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24643918 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471906434 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325955964 seconds)
  done (took 2.348946387 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209665443 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133503548 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111286783 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103602137 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195204529 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244985635 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143683019 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200959047 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098830999 seconds)
  done (took 2.379869556 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19669358 seconds)
done (took 11.161208599 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.228779538 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.277981172 seconds)
    (3/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.246190085 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.168622544 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.238540239 seconds)
    (6/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.287319298 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.182418787 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.219146619 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.160324493 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098051319 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126377851 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114770457 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098305891 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.199168998 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116110798 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.242162654 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.155964847 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09642462 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115552856 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168715296 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117641223 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.145004998 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126613473 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.212733241 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.191788298 seconds)
    (26/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.133398455 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.171853919 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.17093511 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.14069341 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.188282344 seconds)
    (31/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093390739 seconds)
    (32/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.149388034 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.215947492 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10745143 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137682533 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.237429507 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076917526 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116916154 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134668694 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155516062 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.12949881 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215903525 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137845627 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08270691 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.178840522 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.197961883 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096318772 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.177019228 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07191232 seconds)
    (50/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.120002873 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093255884 seconds)
    (52/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090131117 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093254205 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107676435 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120671544 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098623101 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108790201 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129216999 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110481656 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123336221 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.179011036 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.088664255 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18293476 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.149128762 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.182201568 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194932013 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 0.186210636 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141890987 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154898424 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204216187 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189745949 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072403823 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175411293 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114125919 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085993943 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11565982 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067431417 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091964423 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.166936894 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.110729046 seconds)
    (81/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081304229 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.114518978 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090332028 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115481047 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113570485 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.144230965 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066052057 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108123038 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067193208 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155958307 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069036411 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090300924 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085732867 seconds)
    (94/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122974103 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140105465 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176061101 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176238538 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217482113 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109872014 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115586308 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134959601 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 0.171214357 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095937302 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.088667082 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087189853 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111118787 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100902823 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.186225515 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127023139 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111315994 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12532473 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.235775395 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118170854 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094141381 seconds)
    (115/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.07526302 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113054815 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120013189 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.24635035 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171361138 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114954123 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117891156 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190082759 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177406581 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110408174 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097734929 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111572996 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098336569 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109154396 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089321922 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.181347274 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117915136 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.288997589 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117139765 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.12926505 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115482512 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.133064482 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163282927 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.089352653 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090100493 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089905736 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067007225 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118715772 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093836957 seconds)
    (144/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.139985253 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085690354 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108663021 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196156398 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.176482292 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.138802053 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066256645 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116496796 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085122612 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137243056 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117029171 seconds)
    (155/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.124798326 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.1353149 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119800086 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065730266 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.125117575 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.13815935 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118517062 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107002005 seconds)
    (163/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197276769 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11599157 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097819441 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066485295 seconds)
    (167/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110546493 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068242081 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.184130711 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089005961 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085663727 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120620497 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086919635 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137289665 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067769436 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113590735 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.12021659 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089796982 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.08815003 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083825026 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.22148453 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13576436 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065862465 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110292118 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094150806 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091122743 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125993621 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118992014 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.130321172 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116405158 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06817482 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09011431 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127183389 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.100243767 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094964924 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094257859 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113802423 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091603661 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098044704 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115874909 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067975628 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.134053361 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085421366 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133949712 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179260439 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107790356 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116029409 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066262395 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114313767 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066316379 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.141342596 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068295077 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120190995 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094441668 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215570935 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138070577 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066579883 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135458131 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110485109 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090165536 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095866489 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.131477727 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099577093 seconds)
    (224/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112389816 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119899147 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092158039 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138189168 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086322143 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108598032 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.1062203 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123048302 seconds)
    (232/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170946018 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.194078959 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113480197 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118643141 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188095972 seconds)
    (237/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095483635 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066670824 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109856217 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066263415 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145052857 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162967752 seconds)
    (243/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067554801 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094411218 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175964662 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090775346 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10724466 seconds)
    (248/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101618994 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086950298 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112559885 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.06705951 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077545128 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091220755 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087211403 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118700818 seconds)
    (256/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1349352 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066473314 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086430088 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.090770144 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08895782 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223746324 seconds)
    (262/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220371754 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102983975 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18778355 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093689238 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112985338 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088869446 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07634975 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119121454 seconds)
    (270/309) benchmarking ("sort", Float32, false)...
    done (took 0.173644287 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086130836 seconds)
    (272/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.09123733 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066773143 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153114768 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092606718 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.179337709 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157055117 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087992503 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126841835 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089492074 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109411118 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067387565 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118232593 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066214934 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109811673 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085300859 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109202684 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067504062 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086011347 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10959142 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.10874921 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095161268 seconds)
    (293/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123331346 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086968301 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090002954 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087488262 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11802057 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192340979 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118655256 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068421251 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116666234 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092599131 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111139426 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08600279 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090910506 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093439745 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.090839736 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15701265 seconds)
    (309/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092069667 seconds)
  done (took 39.797463504 seconds)
done (took 40.695548009 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102241475 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146765952 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09610672 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135568297 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124297334 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091748742 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119075217 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098612072 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123914467 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124814653 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097721592 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093224167 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097058841 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12012287 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096807362 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139142283 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123388315 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094377069 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119841083 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086271886 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119078272 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086188541 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112205349 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070694254 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12237917 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094088588 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11631695 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12015251 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087004904 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110218906 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090173182 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116987304 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086385578 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124240019 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093726722 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119285216 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120317673 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096493887 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112506874 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086533061 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119106468 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086886239 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117602056 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094190531 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119220138 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09286978 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121492818 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12599653 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116250025 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116307063 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09831357 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121578673 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096814339 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118024963 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090702091 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119061925 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11572637 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116815128 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12023907 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092472674 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118894147 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094352481 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116535119 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118825435 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097870303 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125283866 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.102880907 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11679049 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09740262 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116891099 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086949965 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12188633 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114540209 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089414486 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124370605 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103328944 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113697418 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095051095 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118709309 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094495423 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110783979 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089299346 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111834926 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094125088 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114237468 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070053949 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114297842 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093702543 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110199352 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096485293 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11709514 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094233184 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112945331 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122182093 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086770587 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116132085 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088210098 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111416882 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091639059 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115194857 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086949298 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113192831 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099214278 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112190425 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093977842 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123884418 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087714205 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118089053 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086567754 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11029881 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125161366 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097559937 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110701746 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092534806 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110765055 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09546645 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110149045 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090115933 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111948604 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088647446 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118097103 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.090772354 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114484283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094478157 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124663783 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086960828 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115021679 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089631281 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110682551 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093642553 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111295158 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087177976 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112926067 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07752583 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114310826 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087127042 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118898706 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08922694 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119340156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113387692 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095731174 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115909119 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09336808 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11729906 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086252137 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098906648 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092712451 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11355181 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088623481 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111734209 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088958003 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11054682 seconds)
done (took 17.045785597 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091394658 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18626691 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153173088 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143170884 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107644821 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112213649 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122874076 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119226496 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114708127 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143597807 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111023822 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132818991 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148186827 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08697097 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112312839 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090950884 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113604839 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103026062 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146381541 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134448244 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1659139 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08687696 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148459063 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136540186 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121209763 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105012192 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113287401 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091472092 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115159622 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113573506 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132846213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115452756 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088324096 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135123015 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105121282 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120993448 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087586607 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119228401 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112798756 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087735951 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142765333 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135034406 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092385386 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118464417 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091549259 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114739896 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089580101 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12223158 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123212409 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092187747 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12758615 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156902336 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090688935 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123320144 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086549469 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122300836 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122350872 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090233892 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116279412 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090205837 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112994988 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09136376 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12861273 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143551622 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091643541 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12205582 seconds)
  done (took 8.66597745 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107988084 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140630828 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131935005 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106597998 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112215934 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088071102 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11268616 seconds)
  done (took 1.765408666 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092795001 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137284007 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111280149 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153997003 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132060714 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110021922 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123797295 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087650099 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13122919 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089430036 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133964935 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152542452 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089870294 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120878383 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137386958 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088468325 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137830767 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089940072 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118384716 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137275061 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09169636 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134650711 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090832205 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113774684 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103574573 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114792526 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16361912 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0942269 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115209426 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092707024 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112226485 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166876491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102991234 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124918061 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114265412 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102963876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129067475 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087081014 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130984856 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09487621 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128929676 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115508975 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090531576 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112537186 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094116855 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124385965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090614618 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.1155281 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09163734 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134000827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089767585 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128179002 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089484563 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117522008 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116390581 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095536372 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125370998 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089634038 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13525276 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091277753 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131697816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13324043 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102914317 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131791154 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091983493 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128093666 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127984414 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092421889 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115624684 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092616292 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130947404 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08705433 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115861366 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099377158 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115787145 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137099547 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112697759 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115887193 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098859296 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114504717 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089525965 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115338422 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112956038 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118142282 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114180253 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093651318 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117800848 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087264325 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113105815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092489165 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112619448 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090384415 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117391336 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089312975 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117470233 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105138672 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115596087 seconds)
  done (took 11.877739006 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095077551 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115209728 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091614398 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115029364 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09055533 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115723445 seconds)
  done (took 1.597302734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120171326 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123197645 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104820991 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120823013 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157441745 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129976982 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104243109 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123764101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.133108452 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103767897 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12968619 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105288784 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135822476 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122810654 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104893204 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121410285 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129850348 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100571676 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12830186 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097635315 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137415463 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121964652 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096477941 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132827011 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119373275 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096024732 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127442086 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10263578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128491133 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124220737 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096626294 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119249285 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121900157 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098406295 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131022925 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121806775 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096636484 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120421833 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101055066 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119291144 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131263282 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096563499 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127337366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094484243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123635741 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121494267 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093693707 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127627842 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128758757 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093976541 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120337923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094813901 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119402865 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119226858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096339817 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124750021 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094149894 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130277946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121495267 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095535245 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119049462 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093356589 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124427041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118698732 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105175456 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119229677 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121958361 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096962428 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122990882 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09628724 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120512338 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118267294 seconds)
  done (took 9.298095785 seconds)
done (took 34.159095846 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698183369 seconds)
  done (took 1.667462756 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.740940928 seconds)
  done (took 1.714330911 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.921083596 seconds)
  done (took 17.895938134 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506129643 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583910157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.816593476 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181582614 seconds)
  done (took 3.061612054 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951836739 seconds)
  done (took 1.947537215 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301405233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258742138 seconds)
  done (took 1.540125418 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.778404072 seconds)
  done (took 1.764315839 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.35648269 seconds)
  done (took 2.336950851 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.338229271 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185492511 seconds)
  done (took 1.509387422 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557691385 seconds)
  done (took 1.544055751 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.821673738 seconds)
  done (took 7.812635128 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264185176 seconds)
  done (took 1.265655114 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308033137 seconds)
  done (took 1.29901328 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.578814699 seconds)
  done (took 4.572040616 seconds)
done (took 50.908100337 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10346601 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127402154 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101666586 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124625497 seconds)
  done (took 1.442012725 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106757136 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122567012 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101165785 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121550975 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126347123 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095816791 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124765843 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100859703 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121428144 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097407944 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122384302 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120717739 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099136845 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123662768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092968475 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124662748 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125525865 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09680263 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124806468 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096541994 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119402806 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097746268 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124819912 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11974316 seconds)
  done (took 3.702200954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105139737 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122620168 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09648073 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119025317 seconds)
  done (took 1.438030671 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105389208 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142177415 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138396803 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100643708 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143994107 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135909446 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09188558 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117537742 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094622789 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126202297 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091463236 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150206954 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13811137 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099363576 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127569167 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114845027 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092196726 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137398566 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100847991 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126252546 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093586908 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125207866 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090190488 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139798271 seconds)
  done (took 3.82356569 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.163333633 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150611301 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13836177 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09534482 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155230066 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140685692 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0907901 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141622681 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087842264 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130584947 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119250329 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134137537 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128867154 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088529602 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113872394 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088023023 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129120484 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128495569 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091768053 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.147215922 seconds)
  done (took 3.47018445 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103748296 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118388666 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088886792 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117019076 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099717814 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121825187 seconds)
  done (took 1.653744013 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095115323 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116073731 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090447383 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115124859 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094721474 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115367907 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088331691 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11581146 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089328741 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115491517 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089228944 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114935197 seconds)
  done (took 2.245541332 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.474928207 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098851233 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120888667 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112355866 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096590723 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115445406 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103637653 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.12016771 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141943534 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089505833 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115836395 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092366667 seconds)
  done (took 2.687611968 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246970406 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131037668 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293428487 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192078825 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159357572 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171713726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152852259 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166972236 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226225148 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158497626 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21008504 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225321721 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158224605 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193802787 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13775763 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119132265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229096679 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247247505 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12885546 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233225214 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204138969 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16496226 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203605823 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126373409 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138120555 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169192057 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122323441 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129664661 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210595109 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206442193 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1910907 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163423114 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147493514 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245172785 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254363747 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204919332 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188309638 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136024208 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169821616 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167447025 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242393828 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137993758 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239116763 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162595082 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10548708 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222883423 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169398374 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175229432 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150292766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139940198 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199556649 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24278692 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195599219 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138719445 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164883666 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167168677 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16815966 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154071932 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259678209 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205639321 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205917594 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095640942 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147480063 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191601195 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184067097 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.193636037 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183322821 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14697364 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194964837 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187633267 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192988434 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1940156 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207478696 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113997735 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171619372 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201087972 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172442014 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230207981 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205234956 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096082826 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1695692 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150661148 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132371477 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194432455 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098720103 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241895822 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152070096 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108774377 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165437149 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162381156 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162625271 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226728285 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192927382 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14934187 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084196546 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156709829 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156520694 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188712125 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140267034 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159957138 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162157688 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131001517 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177654094 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124327111 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17800517 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091542028 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203887704 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184939761 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100606536 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159800114 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153455833 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152312526 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179862594 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225214555 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114055826 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133430684 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212572285 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201041994 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150453679 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180565111 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200280482 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143848886 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150227371 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200953049 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247688193 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140389673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204134281 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155948975 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135539624 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107403673 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207375402 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155529816 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134072391 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133900251 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.208593882 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213479229 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126729891 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112266594 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215773535 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106848747 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13365945 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164798706 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149210531 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139466355 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120930223 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152347219 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209795701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181580132 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154022384 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167832389 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152085975 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253107251 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141559116 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123295489 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150946817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121034987 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195084773 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224301775 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103664784 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231922798 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174989038 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156372332 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172727505 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108219411 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177721698 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130477444 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120938013 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194248853 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16706933 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162531246 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222476054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128444982 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.209650246 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182818471 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173658108 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17539027 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165671011 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157809809 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139495845 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159721581 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167199354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096587613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143504242 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134455304 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158561437 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144096786 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107161042 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228080656 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172152321 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15064119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159253191 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153094006 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180770454 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129407318 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179592198 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179956947 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147202203 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198080001 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192298506 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213474376 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143923656 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20654923 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121020406 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100555904 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143428085 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175252646 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134561935 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136306881 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167289585 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180164208 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186512937 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177336284 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1635164 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177976508 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217082894 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095670921 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168956864 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186248378 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176141678 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18683386 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143019476 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152289177 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176311819 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157650038 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256801408 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16670544 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178081753 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209896918 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149241903 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13243188 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151581527 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187552418 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154350648 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178209707 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148767862 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147288387 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16313653 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133598672 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160851458 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186895537 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164913447 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218323635 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124147097 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215455254 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105313062 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166939665 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159149486 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165793085 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109337783 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177998282 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230477459 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120474588 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197345003 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192897053 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131829566 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178291802 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215651719 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223323673 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110691599 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158482299 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160270422 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164748312 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173512962 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178497083 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160179811 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215445438 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158216096 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109046249 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140210828 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151255321 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152922759 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107002678 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148734147 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.201486768 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11235783 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218607678 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161215946 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130536966 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198965263 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123230041 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145722939 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151913891 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216682341 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203660408 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214829114 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149936434 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179501754 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234484453 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098726735 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132517984 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133712743 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178977346 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109630129 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217802953 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123711512 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157339738 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208729252 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193813956 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140193233 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095601615 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157114068 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174516204 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16458866 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153130485 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161981287 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236090671 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115916875 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132577199 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172615255 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158072949 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120005981 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227160146 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080111621 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150064022 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128934506 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105742081 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164466833 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23771279 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137212038 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159802701 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167655077 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196658994 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164352261 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122650027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149813041 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166473248 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228327492 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188477806 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132614287 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130643163 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204243034 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196995918 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162270871 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140323332 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204685913 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193584479 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227145377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143482398 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168586074 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168061265 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157188499 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186640594 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135134528 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205838857 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13480682 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224692972 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153052609 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115965534 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203376808 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.121873776 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142884502 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188702696 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202132808 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108261419 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134682388 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169161434 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177233602 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155821529 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129234176 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182312743 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125007468 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191772316 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260614046 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134364738 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153612055 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120516615 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137328326 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157488289 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159992435 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139974964 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140832151 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231007893 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13580712 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192010939 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229475166 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172187194 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176436181 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145305799 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695102839 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131783843 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192743185 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156197933 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207141488 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153337483 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173741419 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161380882 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170008789 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223795698 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161111604 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232422757 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19250636 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177273539 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132808265 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159008477 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162756968 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144889917 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153625071 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167503663 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161942616 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153593329 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17857189 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171179824 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133388902 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11300702 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225708617 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15634844 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187667582 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180594025 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138851561 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173280112 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187345852 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13492953 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182527823 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238323108 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142834123 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150939774 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106704854 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157284121 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262546409 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125563753 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202227283 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177697545 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159519628 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166696381 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147454397 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218029906 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15708896 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177993846 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146991764 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159399773 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127648628 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137206943 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131030735 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154333256 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167741999 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148474016 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160056227 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139498166 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187290711 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123447444 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145499182 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156632067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191585457 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24238612 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11075545 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13638267 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163744951 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151277395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175796137 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177762418 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136550014 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136103618 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109532016 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157359741 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112477569 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155535985 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155972474 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164885742 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232896098 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109789776 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27935875 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139993691 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15318421 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089542651 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132132767 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149997782 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145479115 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156855495 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123870703 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262783324 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146393314 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13215016 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121082011 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126172706 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135252283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164638623 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16585856 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180824346 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14473764 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081478774 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158929609 seconds)
  done (took 81.359790968 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170668796 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131001637 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146913473 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200775419 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176175381 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26839621 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209487833 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25316212 seconds)
  done (took 2.641212038 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.099409201 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145424195 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152327235 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133048962 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091174862 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120692992 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.330382726 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133106595 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090570061 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139537725 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148544025 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117187372 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.513112749 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.11842278 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118098071 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082775461 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115459678 seconds)
  done (took 3.727325398 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.465713178 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.713551022 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.478437887 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124808745 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.113226382 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134974878 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.739969543 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209367106 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09528432 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485655472 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771829062 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.186998117 seconds)
  done (took 18.60675897 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.105105436 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121816513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107690647 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135672804 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095542422 seconds)
  done (took 1.653097372 seconds)
done (took 129.439170162 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.109984108 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.416105407 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074925232 seconds)
  done (took 1.616179834 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113517638 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137416854 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110071162 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135895284 seconds)
  done (took 1.599072676 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104719493 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127296118 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108572392 seconds)
  done (took 1.435211803 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322393826 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191345851 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141964006 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.11120263 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129910327 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102584045 seconds)
  done (took 1.435525265 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103989472 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128178105 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097749252 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130291553 seconds)
  done (took 1.556789758 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100242866 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.075832105 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101108568 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075247647 seconds)
  done (took 1.441421643 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120364856 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132230863 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10480311 seconds)
  done (took 1.45356404 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136293468 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139531685 seconds)
  done (took 1.373732998 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110566623 seconds)
  done (took 1.204142523 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.123835438 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170972082 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189587369 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164251616 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227492733 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167364977 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141583278 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114412096 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130885521 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145106053 seconds)
  done (took 2.674728452 seconds)
done (took 17.64979608 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109765993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512604676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413999476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116827967 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722023008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381086694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.069887754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146744332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167588782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099431777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139993408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673665945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022948344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.467739659 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983270023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37194289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704675016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093199152 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120251635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094121987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.054291906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091972189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122557849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092757657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702599611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42680863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094413453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371491448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092116486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126714098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383098043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122653177 seconds)
  done (took 17.176293402 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173475552 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098914147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137483405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123980256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094307884 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124674332 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094427297 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179873963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122813626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111907715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121933342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126460447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095003332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142363203 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093195202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125484533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092841293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121210949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123442682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111284905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121327663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093617033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121991481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094930333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136446091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123413725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092665858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121213012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098751122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128158117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094914884 seconds)
  done (took 4.849518032 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146432497 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183663563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129555459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127721453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16908715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123967139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19954957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147322203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154881612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12349561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14007875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093046454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156702778 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124400577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114334917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121504497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09686765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121995336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093261632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123150067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140369685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093063537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12257786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094291593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123486128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136651139 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095862759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122163102 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0936188 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12755414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099942284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124569354 seconds)
  done (took 5.173072914 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103795827 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127026587 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108460301 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140002506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096390929 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126497138 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09802689 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12498947 seconds)
  done (took 2.027025779 seconds)
done (took 30.320144614 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118423533 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127648218 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109924272 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13536789 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103330811 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132141097 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091972487 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134571889 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13490888 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10229284 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138521315 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092072949 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123863278 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091182013 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135938349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097688948 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134147383 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102838057 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133197641 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132945189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094163756 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134263708 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103604606 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133936452 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104692675 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134047733 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139324707 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09895415 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122924226 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094472628 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12515057 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10529735 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125034814 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105358216 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127878995 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097937918 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123910513 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093972591 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132949567 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133702225 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103539684 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133472141 seconds)
  done (took 6.036159144 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11391005 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141188968 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104548227 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081881289 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117394218 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080483965 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138016331 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07935619 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111387782 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108457277 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077564484 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10677753 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078879741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102480541 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077233629 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075677425 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.1096819 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075537035 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076799866 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106696687 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079672067 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072954295 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108690431 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078902054 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104448274 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081739604 seconds)
  done (took 3.601131619 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106539098 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136563605 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112757022 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18388625 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162710986 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100489897 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132804773 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140733816 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108153577 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121134348 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095736273 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150021273 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110719404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129658263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092586509 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136922422 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136891075 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094041108 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128797342 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1128456 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139316241 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102960695 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14308839 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133626246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091806483 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12355719 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096091158 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135660826 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098229224 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131638995 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127165316 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096316135 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131123655 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104343868 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126175211 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09418598 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142892974 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132637952 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100762182 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123331103 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09674566 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123102464 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113423125 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167728017 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121231188 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100358522 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129866128 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102743974 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121812344 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110263433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131931954 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092318843 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124857959 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092019756 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121747633 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136230368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097722252 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12460178 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101669052 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125567308 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106273438 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125984026 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108555961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122461277 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130041389 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092243975 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121857751 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092756929 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143989002 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094820574 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16478751 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123302301 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09419421 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131744707 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101526478 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128496411 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092988405 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138622121 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102753064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125742075 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131605851 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097207284 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125659783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112296367 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125346494 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095091446 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123796877 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099249037 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125366553 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094134653 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136779088 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12242301 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095845994 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139901353 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099226352 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123754472 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099212254 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128101877 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092930778 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134977559 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128754744 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093023667 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131946445 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093308147 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125452757 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10303107 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128754704 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092765251 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127658133 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12904569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093924137 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12363217 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095680074 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125088249 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102354769 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128765067 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098075405 seconds)
  done (took 14.893806176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234854846 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215699591 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249222527 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.268103466 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136416033 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145984635 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21317032 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125698594 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123305349 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160682679 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164145573 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188217101 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172908719 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18483387 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110606295 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121793961 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142168061 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1345555 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215179975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289857561 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142901356 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101969102 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161899066 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160772852 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137261466 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102337567 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140536506 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133320217 seconds)
  done (took 5.808039859 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113633637 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157018094 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098481354 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145301829 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150444833 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092908443 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127185979 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095176752 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135187635 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135493308 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093692257 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128744217 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100235147 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13237475 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124180087 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102960682 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132791999 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095687933 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127073532 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097496264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130130441 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132538362 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097506945 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122557735 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10021638 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121857212 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086339086 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143067124 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123902167 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114738365 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12125771 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100061482 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133774508 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092919079 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123735313 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095253794 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125788444 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095828063 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125234227 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092654529 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120869535 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077471386 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123342554 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136018729 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098776147 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109677253 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09942625 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128819136 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098726553 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121313872 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096244868 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125465242 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097414792 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130986242 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098154446 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128702351 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096415859 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115708597 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100300996 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125610515 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084551331 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122889858 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097944069 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118138943 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10140439 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128818559 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092674119 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126113594 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097733957 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129552286 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096140938 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125961657 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121154862 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096404932 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12862967 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098255564 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12787397 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092648942 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123731884 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094237106 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106143791 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.092932774 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074945041 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126862091 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091963382 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121453436 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124926677 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.098982997 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138742801 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095160216 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130325548 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095040778 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122474162 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126036871 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083971257 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0970186 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138524673 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141081417 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093480882 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122042751 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107268938 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128049858 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122861341 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077323777 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100180386 seconds)
  done (took 12.989893531 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133264166 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153334551 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096323951 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142767468 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156020176 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158680951 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102337064 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131048236 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098493938 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142656759 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093721387 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131545584 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097674147 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137496897 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156947734 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.11056237 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125728844 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106807446 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132093827 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170325393 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116807317 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142838799 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138420892 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093429563 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129633402 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110615472 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161668339 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138606426 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108021259 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142280678 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108157487 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161818912 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143439871 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098404146 seconds)
  done (took 5.516209695 seconds)
done (took 49.949951157 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.209350995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430632628 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.204467834 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.119972795 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.226005704 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225788331 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218011992 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203146546 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.231815606 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205190921 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.470772619 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.895889075 seconds)
done (took 58.775467643 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.223374033 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340392107 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471669762 seconds)
  done (took 3.942529308 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.573407581 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.148575117 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461897745 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.20599064 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202232182 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494042469 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.879103501 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.573056757 seconds)
  done (took 28.095320051 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.205346563 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.601303108 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.92096025 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.930765141 seconds)
  done (took 18.791108842 seconds)
done (took 60.756054739 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.193075623 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.233913725 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.220230084 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.182468435 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.318417969 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.254901229 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.483712179 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.42452743 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.202886088 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.192166027 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.228138541 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204428056 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.212763141 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.48160032 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.210317127 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.214520841 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.219035559 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.67073556 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616335656 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.208216184 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.207597779 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.223147814 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.225702737 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.211895915 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.258476196 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205299964 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216598766 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204519373 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.816748749 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.211232088 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213038617 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.659001984 seconds)
  done (took 191.756629206 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.208643704 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.250466449 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.337088972 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.244735275 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.67656016 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406388287 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342199188 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.75300976 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229007414 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.227272448 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.472113594 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.210082922 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.539624397 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196043128 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227340093 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.311896466 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.563805116 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.526867086 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240373304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.480409233 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220402029 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.661521956 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.594690285 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.415132345 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.265544803 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.232812012 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.224210232 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.240757863 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398604497 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.49887052 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.226401725 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237103269 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.844706582 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.066794019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.227960866 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218559943 seconds)
  done (took 151.153802182 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.513992941 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208593666 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209923017 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212346673 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.208990989 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243799587 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.212404579 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798562515 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796990815 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719798119 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.579526506 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273225557 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.466311577 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20607501 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310056595 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.222971829 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210380301 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22527476 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255105826 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207666647 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213692733 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800882632 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222529802 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.246811867 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217526372 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212254759 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244828317 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603117458 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209069429 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246189756 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.53670767 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260275892 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212386191 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.542883104 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.147753915 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319982148 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213595899 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244763863 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.211817156 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48754273 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211769189 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21266051 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.213622872 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.215814904 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.851449683 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.211804455 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801774332 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213006061 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146625662 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209527772 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213232849 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.43403029 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.708185886 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224258971 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21498755 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212884702 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.212299966 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21291941 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246650018 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.452934628 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314223215 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229609036 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217241569 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24816741 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213299718 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.216878916 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211523993 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.744984996 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.268876104 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320055773 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799415768 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21623292 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212742173 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309129884 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332803579 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211332406 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213814541 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216562489 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.212365259 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324798435 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.212725936 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.637415613 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217441747 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.215889925 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276685941 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.310067873 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216241132 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.216809982 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570581585 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216556923 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215341759 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947020017 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307635925 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.212816287 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213773774 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216727931 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.639462274 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802603394 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.447194241 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216117424 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.469599577 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.214169831 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.656325919 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775006737 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.834177025 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214233397 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325750039 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216582686 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217208863 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.213787529 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246214535 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.232691735 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275541511 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212976795 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616721541 seconds)
  done (took 346.589898064 seconds)
done (took 692.145370046 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.915409315 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866097312 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.000040333 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.885586364 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.864724695 seconds)
  done (took 10.672238917 seconds)
done (took 11.811679308 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409723398 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.404786149 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275021873 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412303063 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247101443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.422885272 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384475889 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237729063 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321791587 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.30227721 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322425586 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272001295 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24453382 seconds)
  done (took 18.398189003 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535585943 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53867713 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282235252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536918357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261391061 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538637177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414661064 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431352202 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430386043 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248566002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233807655 seconds)
  done (took 16.595751641 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568897877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532761356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284116025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534933518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261306251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541941386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42602766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43719089 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431597507 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252707368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232057217 seconds)
  done (took 16.647017561 seconds)
done (took 52.784535016 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.228596835 seconds)
  done (took 2.372868358 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262675595 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.426100515 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.246457111 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.232263373 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.228488663 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.229089733 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232142544 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229162714 seconds)
  done (took 11.232141993 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225977328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228009354 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227101237 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.226985544 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.229091395 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230878865 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226844709 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230361366 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.227172824 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.230648801 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228842199 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.226225768 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.226711377 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226674771 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230011026 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227408025 seconds)
  done (took 20.795259394 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229463231 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.225381709 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225398267 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.228135107 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226846035 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.228575343 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.22782117 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225947844 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227128055 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22661 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226967539 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.226377234 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229459421 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227592972 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226488094 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230323951 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.228763971 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.227267707 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.23367337 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.227348159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.228596021 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226716274 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229050875 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228128406 seconds)
  done (took 30.615575335 seconds)
done (took 66.156862304 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.40668044 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.954820648 seconds)
  done (took 9.504491753 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.23157833 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230698946 seconds)
  done (took 3.611392732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230939635 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23002558 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230090734 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230070309 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231134981 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230287399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.231092873 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231295749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231174654 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231467982 seconds)
  done (took 13.45384298 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.230207042 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230172988 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229986938 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231989165 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.232298921 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227971929 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229954591 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232227626 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.230947667 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.230760075 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229908252 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228031088 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231868469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.230028152 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231353204 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.230074506 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229862638 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229655491 seconds)
  done (took 23.295951685 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.231962847 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231859504 seconds)
  done (took 3.612483324 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.231035635 seconds)
    (2/7) benchmarking "second"...
    done (took 1.230120332 seconds)
    (3/7) benchmarking "month"...
    done (took 1.230768109 seconds)
    (4/7) benchmarking "year"...
    done (took 1.226685368 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.229738901 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231325114 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.229854127 seconds)
  done (took 9.761512637 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233675499 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.411208035 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.49450881 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.867865446 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236729367 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.238486866 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.085723248 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.236466231 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23728078 seconds)
  done (took 14.191201995 seconds)
done (took 78.573869852 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.282851136 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.239685301 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.439266683 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.239507379 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.238086008 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.569678911 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.271854895 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.356016225 seconds)
done (took 37.787451327 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.227712926 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.005096662 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.004706886 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.226756368 seconds)
  done (took 11.385473865 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207698219 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.191240182 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.228148897 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.278213519 seconds)
  done (took 18.057303059 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.289903569 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566900646 seconds)
  done (took 5.005485926 seconds)
done (took 41.823407425 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236229461 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232206557 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234293419 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235475626 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.233253654 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.234561309 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.232430615 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23321043 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.235306578 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.236117568 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.2362692 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.235171061 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.235178956 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234442846 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231238396 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234014777 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233600408 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.233010752 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231970925 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23312934 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23341798 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234086761 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232840903 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231257795 seconds)
  done (took 30.764309702 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235884344 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234647183 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.237073887 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.236043561 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234370163 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.235526397 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.238367219 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.233044939 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.236464443 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236643732 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236166618 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235071098 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236358969 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.234638216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237463868 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.235429659 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.238433849 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232867973 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236326454 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234037944 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.235853104 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232922987 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236466105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237734924 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.235063301 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234247406 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.237132729 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234977035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237220425 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235451612 seconds)
  done (took 38.223982752 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242215761 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244065083 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237738464 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.239069456 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.236316035 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.236732767 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237901197 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.237174606 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.238311542 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.238123031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.238889975 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.238455068 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237980481 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.240055024 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.238990781 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237302389 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239984401 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.240442319 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.238815855 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.239288449 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238927137 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.237767212 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.239980059 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.239253226 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.239540566 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238947675 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239681743 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.239099584 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.240022364 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.237780983 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239990333 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.238006917 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240092616 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.238167928 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.238435463 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.242599899 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245033967 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248821786 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.241086386 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.238991223 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239993984 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240964177 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239054558 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.241356237 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.240015775 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.24012943 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.240370698 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241993471 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.239177116 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.238610541 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241207783 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.239598692 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239894833 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.240106181 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.241024175 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.24072557 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241607401 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.239812836 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241266299 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241080484 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241547875 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.241822476 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.242281185 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241841626 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.239335292 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.240111204 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.24202294 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.241853164 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241053573 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.240947413 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.242022515 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241244759 seconds)
  done (took 90.440651373 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.242047355 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238377676 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237216564 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240681028 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239839065 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241057357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237769158 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242845442 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238112019 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242854797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250947974 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240801854 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238916961 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243895285 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243927454 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241374296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.24351296 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24188273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242748886 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241638829 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243550973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239568033 seconds)
  done (took 28.47181158 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2432285 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24485858 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.239858804 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242534829 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242532339 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242872589 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24332975 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245749728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246052075 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242769745 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24236759 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242922139 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242132902 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241669938 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241756241 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241011859 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245332472 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243680062 seconds)
  done (took 23.533844837 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242103138 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242438484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.246489463 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243327586 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.242058179 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244563255 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241157776 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244510252 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.244112575 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242091133 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.245280184 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242457561 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245716968 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241442824 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244739146 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243902042 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.244963506 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243683298 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245081322 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24388105 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243694232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245376186 seconds)
  done (took 28.522662847 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245712741 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.24468001 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24347916 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243117767 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.244061758 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245125513 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.24690017 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244127588 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246188244 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.246651316 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243036364 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246368235 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.246552672 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246720167 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.242159943 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243941648 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248790629 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245357799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246247562 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.244860632 seconds)
  done (took 26.066275447 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247626023 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247452889 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247413064 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247323242 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248215774 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248363623 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245934393 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248945675 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249601937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246613913 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244648166 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248389771 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248326567 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247725083 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249702663 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248879151 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248075278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249533559 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248604803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248715874 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248671048 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249157059 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248402108 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250816876 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250412187 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248186839 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25069321 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250103498 seconds)
  done (took 36.119663417 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248269577 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250210207 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24639188 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.24589395 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.248371408 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247309399 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.24688759 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.248057995 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249340488 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245741735 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247500298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.249740697 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249287805 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.252821491 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251710862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.251728433 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24957227 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.246967862 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247777339 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247776539 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.25142908 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251630973 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248683731 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248062456 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249589445 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250820162 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248669427 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248681438 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252921821 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249995808 seconds)
  done (took 38.636773479 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.270509662 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269899917 seconds)
  done (took 3.706705856 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.249157348 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253088743 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252252893 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247051336 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248851783 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250430987 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252379107 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248972875 seconds)
  done (took 11.166914371 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250884305 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253488809 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.251079362 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.253378907 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25253525 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251199799 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261818682 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.271610004 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253147453 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252974017 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258833556 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.259939117 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.25555077 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252165006 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252573919 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254354142 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252843144 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254415782 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253867175 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252887483 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253882052 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255734962 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254064437 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.252522834 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254071277 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264975305 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.278184878 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.254540252 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253330357 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259644292 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252407555 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251350274 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254749199 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252427521 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257752768 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255922284 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264349103 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276347274 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260721961 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273714414 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25517728 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254264936 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256123956 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256408703 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256510621 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.256194704 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256133327 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252996329 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254945535 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.256984045 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260108668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2553646 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255209085 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258982453 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256053355 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263931767 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274991484 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.259768832 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266427763 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.267480638 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.288271746 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280514052 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258376255 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.257401362 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266573516 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.281191705 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262842925 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275149791 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255180792 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.257267383 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.264971298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287055341 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.280561657 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.254490065 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254978523 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25867716 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256435713 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25721393 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264123541 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.281081177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.256048614 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257990345 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266399331 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281391165 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256012184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257000083 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.257295543 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25882001 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259656569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267752944 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278245627 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.257209973 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255576381 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258987572 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259647416 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258432245 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258757791 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259094044 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254560056 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.258610693 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259661548 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262074645 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.268188223 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258228754 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259244806 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265475688 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280001388 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257782407 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266469367 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260234593 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260014039 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.26202444 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265149109 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257942549 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265183713 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268526702 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259829476 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261438891 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259484885 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259950351 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270457962 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284868225 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.259284006 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.262759912 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265000735 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.271305533 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260065528 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263070706 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.262072949 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258779293 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257415695 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262721632 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.263166242 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260199629 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260541953 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259034811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257767281 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261663074 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.26208107 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262118546 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.262081959 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262380975 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.263445125 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.26248618 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.26107565 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.264777597 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268463453 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280518045 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264691019 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.263223571 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260019248 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264029826 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263184023 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.263283025 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.260988122 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263029609 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263511739 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262807035 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263332772 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263076962 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262945599 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.26389424 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266598688 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.261865952 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264408728 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262157303 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261074347 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263393518 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263610082 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263629192 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.265689398 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26260591 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.26633645 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272519108 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.265569614 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262597873 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266439732 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263355965 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265353418 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263008809 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.265776259 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271668115 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.261641959 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.269114726 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.281729068 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265543473 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263521918 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264783443 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264818865 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263434044 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.265511945 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.273214369 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277334462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287543946 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266613147 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269339581 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265843863 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270372836 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267048285 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.264036696 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.264490822 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265214968 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263494252 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263585106 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268232491 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.26657767 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263648379 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.266694918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264407377 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.264213534 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265866877 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.266972416 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265884244 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263075411 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266237137 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267089453 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.264020526 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.265106144 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264031601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.266709853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266025162 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270001378 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27289378 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264389881 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266350532 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267872309 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267830544 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.267327719 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268272202 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267437443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26717535 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275667407 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286853292 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265720246 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27365482 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.286294764 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266960271 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270273291 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.268332737 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263713983 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.271733773 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.277328048 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268685525 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.266973398 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.267197023 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266974256 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268292473 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275324249 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.28426525 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.268119571 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.271011663 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269528804 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266405763 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270398264 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.269090175 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270096897 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269894204 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269745262 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.26738573 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27090003 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268813971 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268604843 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268149785 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271051922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278785613 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.275240928 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.269472646 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272028331 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273192637 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274609285 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.270760708 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.271399447 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267592394 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281004527 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.294973853 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27499058 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290948794 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271251989 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273480544 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288268845 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.271304009 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270799154 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268120751 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.27017693 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270654408 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268911456 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270430141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271507805 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270803432 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272503275 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275011499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273957113 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268942124 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270516156 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.267334716 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271935695 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.273877217 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27343917 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.274967197 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273600389 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272312875 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.271149481 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279928937 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293333196 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271624136 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268174165 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272423744 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.27047149 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.27346694 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.273092253 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275127487 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.279507504 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276048902 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281937601 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.273988178 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281546972 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.273987937 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276510799 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.281283688 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269908673 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271742129 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.273640138 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273263458 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27915577 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.294340852 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.275471019 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.277884838 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273085567 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.275135574 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272506539 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.273980446 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273313471 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273979259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282876136 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.295378855 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277086493 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275783787 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.27333026 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276350034 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274384041 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.273516741 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276492804 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273325435 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275089894 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273028379 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.273906123 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273737912 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.276104127 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274158899 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.272848715 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277513021 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282580963 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.296273425 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278719683 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276698492 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283300406 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294045134 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282267847 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.296404971 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275163712 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275179803 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276185549 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278154569 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275664531 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.27717679 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.274449148 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276694036 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278837141 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275078025 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275666185 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275889868 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275659722 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.274965438 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287875945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30119542 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277169238 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28069276 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.275379347 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.28179974 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282100355 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.277152025 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.276218775 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278533127 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288317843 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286863775 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277038505 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277434419 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27841312 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275509759 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.275581806 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278579562 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277121228 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.276937896 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277733687 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276621215 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280642062 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278338514 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.278613559 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277515794 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279497033 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288826107 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.295386683 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.276811023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276416017 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.279787333 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279514931 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.27889871 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.27938443 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279227902 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279184241 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280358712 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284915205 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287477274 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.282200958 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278400366 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276998482 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.278595377 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278559075 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279726867 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279174573 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278278067 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.278057449 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.277816569 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280379818 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280558771 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.277838633 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.281231814 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279740925 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282599989 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287816113 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281766736 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276870328 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282845753 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282465814 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.279603034 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.281630192 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289322738 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302021733 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293461826 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289202274 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284004597 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.279820534 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285014617 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286619899 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.281216011 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282243793 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.281746566 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280505762 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.279723998 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28387098 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280089874 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.288858205 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299620524 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28394093 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287747319 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.302972225 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283192099 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28235664 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.287090842 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.282519812 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281405174 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.280640997 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281641418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287931362 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302985663 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284256696 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284725791 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.284978735 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282110479 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288031251 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282413742 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285344254 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279867507 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.281355659 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285055416 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283938131 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282476673 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.283637727 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.284928508 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.285561987 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291338937 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28068805 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285643126 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283299841 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.283441441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285329322 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286708558 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282601846 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281178425 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283141273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283990199 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.284780232 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287785907 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.284395058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285410323 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.287787701 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287456105 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285663755 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.295656269 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.294500506 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.282835758 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283915531 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285344376 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.286005184 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285909769 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284621229 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284774884 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.284132843 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.287992051 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286553335 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286728008 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287427136 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299745894 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307828278 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286338723 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284141651 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288748263 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285040892 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.285031444 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285760657 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290790985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.289336119 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296813051 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287105177 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293409825 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307005607 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287539075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.289819153 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290963892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.296790979 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289682329 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287350769 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.2889433 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290573032 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301528803 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289595024 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295630951 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316018673 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30675139 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288837694 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.286643178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286998603 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285361167 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288314231 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286644393 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287623917 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288427967 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287939271 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288276737 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292113423 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287128526 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289083086 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.289156745 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.287951276 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.289575179 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285142688 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.288505648 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288693907 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289167786 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.28980261 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.290199118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288175153 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300757084 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.313623337 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.290725724 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288257968 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.287191785 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293063305 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.292331841 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30115089 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298657525 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292085299 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.28895022 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290941967 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290612894 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.287283056 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.29052145 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291158384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288801594 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.289052018 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303295617 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316930842 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.29338223 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289566707 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28969859 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290136125 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293516382 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290957694 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292104677 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.291209921 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292552971 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293508179 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289462412 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.291003443 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295180414 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300311187 seconds)
  done (took 760.878914388 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28967222 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290107799 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288142667 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288935044 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288430491 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288952655 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288376688 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290001134 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289032194 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289758504 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287988801 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289282113 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289372443 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290597669 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289235351 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288963562 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290648406 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290629594 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290569774 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290116624 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288896687 seconds)
  done (took 28.278191784 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.292916202 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289014123 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29188278 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292882836 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289889766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293907087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288121894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291669213 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294511139 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291026466 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29415867 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293203004 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.29212218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.291575988 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292520259 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293709257 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292861045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290567074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.291564459 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291341741 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295564165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290705372 seconds)
  done (took 29.630053668 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.293756169 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292408131 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.292383428 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.293178904 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295066916 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.291245994 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293968602 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.292977053 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.295928799 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.294028948 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.293874496 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.293609463 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.300763247 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.300577359 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.295706238 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.294894704 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.438411561 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.29514885 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295613332 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.295467743 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.292663026 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.303153738 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.311802422 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.29190204 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.294238155 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.294310119 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297318431 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.294978834 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.296758627 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295725506 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301711665 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296716586 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.296962354 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296459144 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.295191953 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.294638543 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301187815 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.297073733 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.295250196 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.296714508 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303386817 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.316737838 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.296214947 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302330925 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.315835625 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.2960098 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299632769 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.304281643 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.294501132 seconds)
  done (took 64.917636409 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296556978 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.298954038 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295900445 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297630308 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296627075 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298704428 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.296909164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297651213 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.296290606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.295002905 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.299054004 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29568861 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.293633969 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.298105898 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.298658135 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296203966 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295789253 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294656262 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295062216 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294695334 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.2962853 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.296711181 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299035233 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295429228 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297943332 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293919714 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294266279 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.299555416 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.296132789 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.295073616 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300907588 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298335618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298724387 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.297178476 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295340543 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.299449357 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.298848645 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.295831074 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298901563 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296823695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300449765 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299817631 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299263423 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.300692678 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295410618 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.297435473 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297847131 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.297585331 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.299750647 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300655089 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300880221 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298439222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300119505 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.29650555 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299158212 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302780264 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.299877113 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298913287 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300501425 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.296581935 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298249494 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300553844 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.299631797 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.301081391 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.301114559 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.296827817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299898916 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299292018 seconds)
  done (took 89.464829233 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298757958 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.299344955 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299522533 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301546255 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298063718 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.299310224 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301096903 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300056355 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300623092 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297991921 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299735122 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.299561602 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.299715182 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299968062 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30075554 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301014212 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301069167 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301537159 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30080971 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299321246 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.30302405 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298453963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302343777 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302421362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300943462 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.303675895 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301561515 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304964356 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300958807 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302054616 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30273519 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302400562 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303948519 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.3042411 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.303160086 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.301937106 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302801101 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303586226 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.303134877 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304424819 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.30485179 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303470802 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.301528218 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.302890169 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304555765 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303892171 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302872009 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.303521838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304794458 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301448267 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303398208 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303127256 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304489807 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302273586 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303186082 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304934972 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304981181 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304623252 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307340385 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303263815 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305876499 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.304017003 seconds)
  done (took 81.949961837 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304402982 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305840095 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303226182 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.300853132 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305533548 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303825068 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305990799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306333153 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305160334 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.305329885 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305530435 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303175719 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302789422 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305068911 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303666056 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304348251 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30118361 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303180075 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30692524 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303474718 seconds)
  done (took 27.298303422 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.300075562 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306513078 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303914293 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305416477 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306954261 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304675972 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.304939093 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305798747 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305487971 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306109563 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305842671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308163041 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304205621 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304525112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307367243 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306362896 seconds)
  done (took 22.101494366 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.302841088 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307465091 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307810123 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306001581 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304802576 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.304352033 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305534153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305064384 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304948591 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.31021344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308367013 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.309911992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30745558 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308471244 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306504826 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308733952 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.306426644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.307811279 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308604744 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.309110273 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307907436 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305849865 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.3082726 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.308772096 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.307251838 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305883521 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305310314 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305876865 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308422215 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310437776 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.305539425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309875879 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306526198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.309103655 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.310446182 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.306647583 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.31178459 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308241318 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309982441 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309358946 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.309472499 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306696812 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312341888 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.312268007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.308305666 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.310107346 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.309295716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307791821 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.3071766 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309761249 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313636066 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.310833499 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309199001 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310611619 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313297243 seconds)
  done (took 73.170600375 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308826156 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311226311 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306641869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312722113 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311868623 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307152566 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31123107 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313184602 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308317738 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312151798 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30893136 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313081072 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308774074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311492919 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309930732 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310035731 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310715661 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309463409 seconds)
  done (took 24.807257434 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309940468 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.30957784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313595488 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311292887 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311742106 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315683703 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309822625 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.310961442 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312895469 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310433404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309509438 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311982779 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312555484 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.312216736 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31270696 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311926506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314891553 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313721788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.309295778 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311434391 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312621759 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312311803 seconds)
  done (took 30.081880648 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.310443063 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.311243342 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.311680058 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.327718515 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332533751 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.333189675 seconds)
  done (took 9.145263993 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318422401 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311515338 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308933499 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313603378 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31277036 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310084835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307178251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306888942 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309517661 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307250032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306349461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309430962 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312245749 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307614208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311879185 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311299387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308407579 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310257595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309525638 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310786722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309207642 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311931937 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310070094 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307124513 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30803157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307252793 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309719219 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308324844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308708148 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3099765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311003648 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305108281 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310058275 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310824882 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310845583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307718021 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306976976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31033701 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307272822 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309946496 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310289572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309714236 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306831787 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307369076 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307689096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307715896 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305823805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306938703 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309443466 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310789022 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305439833 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309256889 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310216736 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311553892 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311757412 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306843229 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307559411 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309596232 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308303381 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307646629 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310208435 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308544504 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310054014 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311465587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307211124 seconds)
  done (took 87.65873654 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307728544 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30836529 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309531208 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311421903 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306262633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308043217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30727996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310195566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310903906 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310495708 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311883293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309324711 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308095144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310110568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307381167 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309763073 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308825364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309498026 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308880486 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312201788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308867549 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308403218 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308417861 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308472498 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309895734 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310376965 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309738755 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309086431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30986133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309386144 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310525051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310703056 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309161311 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31344534 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308943118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311938293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311696268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306518313 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310349598 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312957286 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308858356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312542988 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30920459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309797522 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313165912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307535695 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310778299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310768268 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310755227 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310047623 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311568701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312244774 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313506953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310210021 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309585802 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309628904 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310980409 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310781145 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310552648 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312079718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314802407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309097517 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312948794 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310434137 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310989561 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3123446 seconds)
  done (took 87.689714199 seconds)
done (took 1773.875021043 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.331487233 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.347459492 seconds)
  done (took 13.900970413 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475124346 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.427554907 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313121302 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.339765401 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.307158871 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.334709348 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.32596858 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.30675132 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.311573684 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314143902 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312728264 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.49969318 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.368392423 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.307611494 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313128107 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404609234 seconds)
  done (took 42.886117962 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.339939217 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321082333 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.438654937 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.337842792 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340363616 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.513672631 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.372859934 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319454294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.50065212 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363793982 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.942047159 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334336055 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318937076 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.469938575 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328655383 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.509823903 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.576445242 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.939602954 seconds)
  done (took 30.490504526 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.790447403 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315907414 seconds)
  done (took 9.329072293 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.304450842 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.341219952 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.329062648 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.316803945 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.334352993 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.377337845 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.328462518 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.337494678 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.350426344 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.348554539 seconds)
  done (took 64.59125434 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.336335803 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317924683 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314373858 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.31415379 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.306885273 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.323394342 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314906092 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.30912466 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.101086405 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445729252 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.331182222 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.318106247 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33239704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31617713 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.311592509 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353765845 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463402403 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.331742225 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.314644281 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322427922 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317405725 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414712567 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355509282 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315479605 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.446766611 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.111057001 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321376972 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321864796 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.440542063 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333738761 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316460791 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.316269877 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317748285 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.888501888 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.822741802 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.325262999 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337205039 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327903479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315700659 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.432520756 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.33374262 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.322168743 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309195836 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.789173435 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466049595 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430955181 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.605145522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317034627 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.318347984 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.376351024 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31705737 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313002278 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.345992253 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.092264162 seconds)
  done (took 110.819819769 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.325756103 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.798452543 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477501939 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332978468 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.159494577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.995314154 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.325276806 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600022119 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.337218125 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301490801 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.63838659 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.820999946 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322929592 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.377590883 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.727749868 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.311303656 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306409634 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.246494104 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.323876087 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306407119 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723552592 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323406095 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303136697 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.452439133 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343949927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787162374 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.814277721 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.745385508 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323848982 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.301693372 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.782837505 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323696072 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.323378274 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300846997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586359936 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662276248 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648489026 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.325960969 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343374314 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305485794 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.328128437 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767986247 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659675306 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320543698 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30358714 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766558339 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317771155 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.307875038 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.314776587 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517457865 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.107102673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30776358 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.732693316 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.303506314 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.563606822 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367401209 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.381865849 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794674243 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317916765 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.423838191 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37224867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305695789 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307158351 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311547666 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308778382 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.64840345 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.582056544 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303848501 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659645292 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790173075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326623873 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853740557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.152303403 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326347936 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.357416325 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313200129 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.057898296 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820249052 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.349370584 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305087314 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645281795 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323205593 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.631538567 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.340929581 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306883976 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730489639 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.333325618 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.370927786 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.316251117 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.305635497 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.122058237 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314725238 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.57600051 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.368828089 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308463584 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.309240646 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.315610989 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304425754 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306195157 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.311394962 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832084823 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324239646 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.617855558 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333143336 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319970263 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.313084781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.312420977 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314538488 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53230709 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.835498891 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.313942073 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309234953 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.307555369 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.315828128 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.435231207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.311212986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.614664934 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329649285 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307735987 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.308567576 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.038072842 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346049586 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307773373 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.311786052 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.162935072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.534647604 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.333929567 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.310776963 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318339271 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326687731 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.756532768 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318287169 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.410328825 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315461636 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022250874 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338269092 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.324631969 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.768207839 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320034145 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313672668 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33328343 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311937831 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62337846 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.599056362 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506872868 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311628859 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.328648185 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.021964842 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.369973191 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450595576 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334197178 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.31498694 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518408148 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.429048107 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310187592 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.858410021 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.311727216 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52869891 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316961239 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643393952 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816594135 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.333219781 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319120367 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.026749997 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.005923326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.111724058 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.319698465 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.652070815 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.290518294 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.765354286 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.314566461 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316833815 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.933114739 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319076587 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317777684 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.310404677 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.31667067 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367157569 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491700932 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.983236552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314376236 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789612851 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.389964803 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311080867 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324541393 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312795904 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.665140269 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361598914 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.313225944 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.343182837 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314993183 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.320291898 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798641451 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.267970759 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.32035974 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47327825 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959899436 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.337864707 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318200931 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.994840676 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.562227528 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88091208 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.359568028 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626019287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.331719667 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357046103 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.10346842 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.397578039 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826985859 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328555986 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314080842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92865261 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.335289768 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.396577788 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311507755 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321199806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84779756 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328758291 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.32313785 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.752620468 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318734342 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568481275 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.323697614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.339424404 seconds)
  done (took 1108.207646435 seconds)
done (took 1381.445190056 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32044118 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315229808 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.300815007 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314419028 seconds)
  done (took 26.483907209 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329298605 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326237236 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.325025001 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.321174389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329372699 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.323356215 seconds)
  done (took 9.188984727 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.354535396 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314850299 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.321259297 seconds)
  done (took 19.215156639 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541183766 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.622408039 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.698570979 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.559368818 seconds)
  done (took 10.655231787 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.32327181 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.325956154 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.327389471 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330394602 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332626696 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332045656 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.328545714 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329024546 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.331668706 seconds)
  done (took 13.190128022 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.279040349 seconds)
done (took 85.24439026 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.317061684 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.930027606 seconds)
    (3/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.649935674 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.827988286 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.607022397 seconds)
    (6/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.926577095 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193748002 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.725135419 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.090660635 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.318539609 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.589552837 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.119561252 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.359672871 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.680510581 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.382957006 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.30698153 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.992831116 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.342170747 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.404439878 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.559865742 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.678938384 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.053082323 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.810151349 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.737565507 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.697153191 seconds)
    (26/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.132200173 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.318406721 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.344927244 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.925499416 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.634989585 seconds)
    (31/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.402236111 seconds)
    (32/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.6521633 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.756806583 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.732635455 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.499191203 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.307944168 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.502870839 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.469981433 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341021514 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.908100939 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.377706868 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.320555227 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.170295122 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.222883891 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.630357067 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.396123779 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41062309 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.632656749 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309552268 seconds)
    (50/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.413030931 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.433338125 seconds)
    (52/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.917281118 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.597964075 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.742733041 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.451290234 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.338254874 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089561139 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.461987894 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.37823712 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.473476661 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.81035552 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.486770079 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.695432378 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.310712648 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.308200524 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.327662795 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 4.35726363 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.34240927 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.435676472 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.340063728 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.921336173 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.300379085 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.71236075 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.545610934 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.947904127 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.365553175 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.304428729 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.308855952 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.307968002 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.552695504 seconds)
    (81/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.876034663 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.916704254 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450162317 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.342458947 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.326854886 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.687490177 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.821243925 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.965900679 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.14220007 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.317751988 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.963448646 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.302485529 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265004828 seconds)
    (94/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330301518 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.328127245 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.516747623 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.195642504 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.324994421 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.323097498 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.712067588 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.827433962 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 5.646350552 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.348208722 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.097176182 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.325066651 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.324736402 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.705344876 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.427450311 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.590522893 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.327344594 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.415575193 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.750817452 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355034115 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.541961975 seconds)
    (115/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.690675426 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.360006839 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357328017 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.195775093 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.346248273 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38784052 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.353705104 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.32863044 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.932464875 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.360331811 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.412547223 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.632300043 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.39825623 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.326812076 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.436989727 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.846346996 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.368324655 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.811140002 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.622776275 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.310674372 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.10799457 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.593155629 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.65886136 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.814911652 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.406322113 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.184526997 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.319442289 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.481830178 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.460426257 seconds)
    (144/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.707388253 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.610355732 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.03103241 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.324499388 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.287990398 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.970588959 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.467404803 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4546156 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.118149354 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.247103139 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.350458167 seconds)
    (155/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.116552782 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.461743942 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.340689986 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.919646059 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.78047264 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.388479552 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.3530503 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.727410854 seconds)
    (163/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.959028951 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.353579438 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.356958456 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.169465641 seconds)
    (167/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.410862658 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.337156441 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.422004437 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.697167053 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.439859113 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.45301119 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.744842021 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.564027621 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.997647055 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.460608253 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.316394249 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.706492307 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.428717849 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.4031939 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.326081364 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.342067538 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.526171556 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.351243129 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.377093572 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.936526475 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.731008757 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375966933 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.953042021 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.777031229 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.308859075 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.750591049 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.387580202 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.717925192 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.362488965 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.339614379 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.731085803 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.255529393 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.34274931 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.164577332 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.201849098 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.723715625 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402418545 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.063041056 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.33400696 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.844516522 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.354209693 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.210867547 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.349080523 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.002366301 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.403718491 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.312198278 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.034301892 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.544846112 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.439033156 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.857047791 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.930675209 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.390633535 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.368477031 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.677607131 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.743540687 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.391586215 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.338634003 seconds)
    (224/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435874812 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.343143551 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.358503848 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.195138374 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.71018294 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.394003511 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.409498022 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.60801881 seconds)
    (232/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.382281108 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.367760294 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.340884849 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346252302 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.334615586 seconds)
    (237/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.364045602 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.730653998 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.978753989 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.761404189 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.406438201 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.355716385 seconds)
    (243/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.714777659 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.429706146 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.829639377 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.799159227 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.843695096 seconds)
    (248/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.262445432 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337807984 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.4454447 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.323670314 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.115846002 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.357335705 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.353229016 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.365120791 seconds)
    (256/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.421383648 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.566041403 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.575670857 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.982815547 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403081116 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.336419873 seconds)
    (262/309) benchmarking ("sort", BigInt, false)...
    done (took 6.349407401 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.32699184 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.531721966 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.380551641 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448783341 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.33932377 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.716133672 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.723251355 seconds)
    (270/309) benchmarking ("sort", Float32, false)...
    done (took 5.363326484 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192868839 seconds)
    (272/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.974630067 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.673424856 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.31756941 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.476238681 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.117328097 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.43163594 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337717972 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.787066249 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.39835173 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.845985924 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.583338886 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.423383438 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.642029379 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.103406221 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.417037279 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.278054209 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.202572634 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.443556598 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.271291409 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456928277 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.168727404 seconds)
    (293/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.049328562 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.78169297 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.009085983 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.341984516 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369402044 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.34188442 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.362367499 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.523818004 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.392653822 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.364271296 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.217030252 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758978529 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.980158342 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.369189817 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.527305888 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.35862168 seconds)
    (309/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.423164783 seconds)
  done (took 925.272977398 seconds)
done (took 926.508301945 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369542292 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368025374 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347309208 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369245793 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.463629911 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.376932165 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.366035437 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353594511 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399531244 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.399353366 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.349621416 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.374041373 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353326797 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351362842 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.348508394 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365330605 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.404835956 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.347363147 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.36731702 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.360576547 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.367469003 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.348702987 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402690392 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.376819157 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.355954164 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.354735958 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.356869106 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372095553 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.467243225 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35625916 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355617245 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365978203 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.408922527 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.347929964 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350093349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.374721271 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.363632369 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366397189 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35495576 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386842376 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.815368535 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363944207 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.356143924 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.353021245 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353731687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356384571 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355960474 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.361060404 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369272255 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371415949 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.80815899 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.380687043 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.358880605 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.35221576 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365793385 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356420327 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.357980247 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374919472 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.373644744 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374271609 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.437184868 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359326537 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.35977847 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.372985148 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.360344983 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.844563362 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.359950639 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.361986839 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.819496075 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.370777791 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.848170382 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.374525894 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.359061892 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.371520177 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.389115166 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.411375589 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.345563495 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357902944 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.3645651 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.353127915 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.36788175 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371394719 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362087695 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.357429182 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370217053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.381629874 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.368342623 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358487594 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367691055 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.3757433 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.364281538 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.369806249 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.358958836 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.352537112 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.367210677 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360180057 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362476452 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360462851 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.363519411 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.369148263 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.820346229 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389332104 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.353648886 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.353390231 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.357670039 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371722896 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.819987683 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.370164041 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.379627171 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404709779 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.362568245 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.442463707 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.362827364 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37879162 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.367485776 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.361937528 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.353934827 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.440964337 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.812571008 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.388505186 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.36039575 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357893076 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379640632 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.361818512 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353472443 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.418337956 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35432299 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376726417 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.482092655 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.37068837 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.393054056 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.357857225 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.363729031 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.384810695 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379131506 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.393919677 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.362100272 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37794543 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.374288078 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.355822084 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.370002903 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.373558304 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.362196151 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.367593025 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354107087 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384409186 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376285102 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37430297 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.376436861 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.48148518 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358948613 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.448970215 seconds)
done (took 229.496411646 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.418102272 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.352437138 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441003068 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.354716975 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.459198748 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.459853816 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.355896141 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.355962505 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355609164 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.733987076 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355560973 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.356886964 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.351046752 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358203636 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.439583964 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.358396528 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.35864886 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694844337 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.359188552 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.429289303 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.355833977 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.357286392 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.360487111 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.738962037 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.352124243 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.350591732 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.42993448 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359107743 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.705015661 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.351764372 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.353196798 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.702336184 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.446403062 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37620536 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369370228 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.366388834 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.4613347 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.378991584 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.440798107 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.439057337 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445168503 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.399640066 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350849228 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.354148363 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362744663 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.360504762 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356428199 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.388971429 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.355011218 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.360358785 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697820082 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.36929445 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.370848336 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360967617 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360908276 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381965221 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359526698 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361586234 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.450555212 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.363367083 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.424170714 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.74023901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.734769394 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360335009 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.362973434 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.359294497 seconds)
  done (took 150.101902508 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.428542734 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4340645 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.476883373 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.380550968 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.409919257 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.480626189 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.379621529 seconds)
  done (took 11.252799833 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.36515894 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364304726 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411474806 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41091123 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.360156775 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.504638992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361657713 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374582631 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35729333 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.412142952 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.364584915 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363301911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.37099625 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.364944596 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408710091 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374149348 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478011644 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362536123 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363073537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512249215 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358462937 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.3730646 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.415670232 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.374283292 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.366777366 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371060701 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.927968937 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365730458 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362386889 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364067603 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361178204 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.401973301 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363299333 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.364811367 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362712132 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478926329 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.364894389 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361489397 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.363464117 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.361948527 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.364641591 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365099986 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.362899101 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361583332 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365886 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386998312 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.367380696 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.367600184 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366042299 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.366619976 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415011293 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364603842 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363748139 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36337623 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.424977011 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371303433 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.366742245 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.360457324 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.36499863 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363960494 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.516333357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.411816766 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.364700243 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414496995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360765839 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362875537 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366521545 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.364240856 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41728688 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362640099 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41432475 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.361375148 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.518676333 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.388810866 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365526801 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.367847167 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.36811091 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361922607 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360227619 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369491316 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.365151865 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369256045 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.371991964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363796451 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36334049 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468813747 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475833916 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.363994477 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38011929 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371869593 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.362330378 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420731656 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.366511759 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.365662433 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418661528 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.479362344 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41957951 seconds)
  done (took 156.195900655 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.370257219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.375448486 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.368795207 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381276479 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.366024254 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367943799 seconds)
  done (took 9.50011737 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.370275303 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.370819204 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.368192671 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369320172 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.367618889 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.368767199 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371047262 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369216076 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37072347 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369265483 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370046808 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370752563 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.368298299 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.367061796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369136338 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.367599305 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369645916 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366499127 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36796087 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370412992 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.470761867 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.368052796 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364334058 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.367659524 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375017208 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370418199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378352483 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.365895054 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371152229 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.377039442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.389358916 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.369133535 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37093888 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.37688877 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374298165 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3676721 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374406428 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.37193597 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370341126 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369789146 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372469333 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370139307 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.369206524 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372547746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.366932046 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37710148 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.376501979 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378593071 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367402831 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.370052839 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371427633 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373284169 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.37313551 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.373370731 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370130441 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39497726 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376800001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373991551 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.369328968 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.373092729 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.371554313 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.372721717 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375799238 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.378292675 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370503897 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376279373 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374578714 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377356254 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372630549 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.372028389 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.376332567 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.368947296 seconds)
  done (took 101.157921069 seconds)
done (took 429.469563589 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.36691152 seconds)
  done (took 7.642012239 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.535847511 seconds)
  done (took 7.815863532 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.230796898 seconds)
  done (took 23.517455409 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.38707099 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.47312204 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.397547058 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.378755342 seconds)
  done (took 26.914813867 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.908368607 seconds)
  done (took 8.18526252 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.367522369 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.367348509 seconds)
  done (took 14.016790461 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.421093692 seconds)
  done (took 7.699520229 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.430190469 seconds)
  done (took 7.717493835 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.366298151 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.37943813 seconds)
  done (took 14.04139343 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.344367193 seconds)
  done (took 7.62214197 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.350204441 seconds)
  done (took 8.629564583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.380675148 seconds)
  done (took 7.657725411 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.393394424 seconds)
  done (took 7.671871853 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.645408159 seconds)
  done (took 9.92434976 seconds)
done (took 160.331341043 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.365934646 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36351699 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361102227 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361418062 seconds)
  done (took 26.728775325 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401751267 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.408424266 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.409996905 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418990814 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408427037 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.408871987 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.400160954 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.39780988 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.420355163 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.860179767 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.410239782 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.412314522 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.405450479 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.402249614 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409728356 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40681234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421964095 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.409541442 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.40308133 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.412807001 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376429189 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417792077 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.410981776 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.374683203 seconds)
  done (took 35.486641792 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.893188728 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.44158942 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527607452 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427887456 seconds)
  done (took 7.56701645 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.428302744 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.430123069 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.44129089 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.481310707 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.515447037 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.435631915 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39906517 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.396628629 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383166008 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430893491 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504848093 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.446586172 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525070465 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.376492029 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.56870977 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.377157396 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.374751316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.430429446 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480458116 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492030272 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372049899 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427992154 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.434638186 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.445643788 seconds)
  done (took 35.878024645 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.385322939 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.385330749 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374884241 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.375448675 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396617221 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.376761431 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.378554586 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.377278011 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.378210948 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.38588396 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.375047874 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387669223 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.375898131 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.37758674 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385209364 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.378890507 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.383248692 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.373840325 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.377300016 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.377888738 seconds)
  done (took 28.886582148 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.366317458 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.226106697 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.719329356 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621645055 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.370808832 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.37262091 seconds)
  done (took 27.956215064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446287973 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612224484 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.373544884 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.749594171 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.84583428 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.396180864 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.37766929 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.634224272 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.964813028 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.950487224 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.439517213 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.449261156 seconds)
  done (took 20.522119449 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.374514373 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.372951328 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.382041429 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.389996028 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434006314 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.399524004 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382364327 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370458819 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437559756 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.456243242 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401470689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437462418 seconds)
  done (took 38.12128689 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456502564 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418217495 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.415871499 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.121582261 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092064728 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579851596 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.134693302 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.811652505 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381984656 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647045056 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389884144 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466855252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62972869 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370328093 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377276126 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381142766 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620639229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890401789 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3791027 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439527416 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402946545 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373794761 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.550619976 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406382625 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588684619 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354819224 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633236985 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.152847864 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675807308 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38763909 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387868708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380053639 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650188716 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076136901 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493646655 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387215826 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082433542 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92638873 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.363967182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.528973688 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385988616 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382049393 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387892102 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376292635 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313258407 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391388387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819908236 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.384767031 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085447842 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377640667 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385540828 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471817005 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.381647304 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.362820565 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405966777 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378689127 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.374389343 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387239789 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952466548 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.982090467 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387763887 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.315655005 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.761719947 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.545856043 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050128917 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.49846627 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380480969 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37958745 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313075862 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.446252485 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39729566 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527475389 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.397747945 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021872096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121307643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407892901 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312246427 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965533922 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389412349 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.315758297 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606144278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156801895 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315693242 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.317093878 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314189302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146824021 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388420944 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.81553791 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389748986 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.812540162 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393737676 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394907439 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401184823 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601848555 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.254098811 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383038158 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386558741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513088005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396757635 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817408284 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319289082 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.377025333 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637846044 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.586919696 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376125842 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.406303108 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610521921 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397422553 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398917092 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383769014 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411932155 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.979779416 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411820145 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991190055 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40111302 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155623319 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172635206 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394322348 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.484323709 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382195107 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63983998 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19266746 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535473516 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449008822 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384020137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384570957 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.570647373 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235750529 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.279696713 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.380375439 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388424464 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394430824 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.385689874 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334232044 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.372806014 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385204644 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.164619942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60486968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384020272 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659161124 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315872881 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529531124 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38537975 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.600488685 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.648786609 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.403165946 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642280222 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387969445 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396304984 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395742544 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401052314 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481496287 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403915199 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.379382749 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643558849 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388316446 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389981706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.588907497 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164834574 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388965606 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385849805 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.231248636 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983729497 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383220261 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388168751 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275286127 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397278885 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454091004 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392225172 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392975085 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.28420734 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209582363 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39355689 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.391201166 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601267881 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391618799 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.575852285 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469595438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.591712781 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990256396 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418103994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.31961295 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.098469715 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.081305523 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387140184 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578472901 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387987192 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397035438 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396811863 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.922690813 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990103207 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405510743 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.497571519 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.395629933 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398106208 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39422 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387714119 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.261581579 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035676692 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399409577 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.400040513 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53321015 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401260645 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322366113 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902820492 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393823311 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38904035 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.164999964 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422632551 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.48125457 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872612424 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643329581 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.082420172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402598252 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.693850658 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.423416098 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397969065 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400953816 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404659547 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.414470538 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398544835 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.401184615 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.601117278 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.828917186 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953018639 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148435224 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972986071 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386812013 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.3928454 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.297992737 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.832710535 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327322222 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04247053 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590438683 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850077551 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338950697 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591349502 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.665712634 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212160549 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400700781 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619148727 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363882732 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.395079824 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422788367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602147471 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424056859 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399109481 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318609079 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.666402879 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63012625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386042626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472299078 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839625852 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395956016 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.170357636 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.391668962 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.81394406 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590915038 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.023462462 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.778641791 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385917889 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409570168 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880038674 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395196911 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916115312 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047094936 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426944427 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.600483859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330160403 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.400395705 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.400750962 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.386360927 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.797847586 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.416228031 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.651509582 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397089557 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327827614 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407041725 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949037795 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.267450356 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399781104 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394039186 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203629244 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405348055 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69515082 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403941054 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.270194188 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413868394 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325241599 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323981729 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085422491 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397110993 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370342928 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92767927 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.763037872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.410912475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416542773 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242340087 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648385145 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407408078 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.004501166 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639876265 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.193096669 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417809238 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.491825592 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394168599 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.376865241 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276917055 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628275315 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241557157 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614665049 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.493916902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.363102886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394307736 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609770111 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309130237 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40768174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650400261 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.127144143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.411342164 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139746106 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439418614 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4079134 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409833035 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.776161162 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405312973 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466672077 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405117364 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.410443015 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406701871 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574343728 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405563811 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399949243 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.411074818 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489537768 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049550024 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.279286972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.186883516 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012742707 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190989653 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.024985164 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428950975 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397519413 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3957191 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331851372 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541031369 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922068568 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671795849 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530589036 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.846837865 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420210201 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409411638 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411302531 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610536044 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668526264 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26761606 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411188772 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058308141 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.286609145 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407684146 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609245323 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936935463 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013842943 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519840965 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408303601 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.837165511 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674621266 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492092142 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399734529 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98692765 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.40185296 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.832431039 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.427176833 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408776071 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544595041 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411443839 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0871317 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429148914 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.559470157 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.169412347 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.63635912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657529996 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.910757733 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412551783 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015147478 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.157341758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664148156 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468257496 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41052576 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.517452697 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545522399 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.406979997 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301563848 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40060885 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246898142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.106909928 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.4120445 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014643207 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683366574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.399808904 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.408155255 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426351975 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411843529 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623538716 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160351311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628272517 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409707369 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403961517 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.968971671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017125403 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433386359 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33807027 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.401999271 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65732131 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658068321 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423014661 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.854925396 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.114513448 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000803289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.376791385 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420552033 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404003768 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15649628 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016783157 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.315509955 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94873482 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062931862 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413006985 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677803092 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407225473 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403941197 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679860352 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404734499 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410559524 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417104812 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.017505568 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233486093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.428132762 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.585191694 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.342789925 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625383123 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047291662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342417392 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398235416 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.588390165 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407081709 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534557258 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409832567 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.413069213 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413125716 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.159019801 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687341142 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401922463 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.382339569 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.389086901 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414817349 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411742813 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647421366 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405987366 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079306763 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.748660527 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66057777 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410289873 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.3851356 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410838196 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404595675 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.118334846 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368560055 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.937805347 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028033883 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.417834075 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416783091 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409882608 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.620260443 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615923256 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405658969 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419625359 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421438908 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423020937 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.304363128 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172455441 seconds)
  done (took 1618.499622117 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402644703 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.417232032 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.430572534 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.439713848 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43951684 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.545790404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.470461152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414580097 seconds)
  done (took 52.87348542 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.412193754 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.559864916 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.439075689 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.412975057 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.418355641 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.40836777 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.899482032 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.430068016 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.409398413 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.416447794 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.415275565 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.416012187 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103151582 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.417899689 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.407080531 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.397831057 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.416992997 seconds)
  done (took 66.69967478 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.403587327 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.577280687 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.520371929 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.408645738 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.749142149 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.425088095 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.57609047 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.462648417 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.405697948 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.549246321 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.078322384 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.414240186 seconds)
  done (took 80.887144867 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.413202419 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416783301 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418021842 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417126433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.417386407 seconds)
  done (took 8.39629191 seconds)
done (took 2049.781471607 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.711175466 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.143815872 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072988133 seconds)
  done (took 5.533668312 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.554127735 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.605952556 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.727902289 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.750503109 seconds)
  done (took 7.953767156 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.700448957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787420802 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.600823539 seconds)
  done (took 6.407717916 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.889641889 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.419728733 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.540377591 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.405970947 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.409250572 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.407161441 seconds)
  done (took 20.540804744 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.408592 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.418721705 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415034956 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.418954125 seconds)
  done (took 6.97839622 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.387060611 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.109093606 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.394343167 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.409447887 seconds)
  done (took 18.616411989 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159191745 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.183495638 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160903704 seconds)
  done (took 7.820481189 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.406951347 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.272310013 seconds)
  done (took 9.997146509 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711455128 seconds)
  done (took 3.02891175 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.542485974 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.745260448 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.505116005 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.458485306 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.547501128 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.496555667 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.14559827 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.690283212 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.424465626 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.695567875 seconds)
  done (took 29.568509575 seconds)
done (took 130.320167826 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.372003593 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.780248962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.60659472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.335480754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.637227997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605519254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.828403399 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.309373978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.847855575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.83486667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.380717619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.638867556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.564810223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.788394993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.568186581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.657204014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.644000078 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.422197708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.066214147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.223230918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.831348411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.9822831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.21180018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.002999588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.636182184 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.560021556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.557354162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.654855822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.239716261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.583056119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.559702014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.399301849 seconds)
  done (took 197.650319364 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.42875032 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.419784954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408365796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.407538679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.429687696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.408158748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.408637368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.415582619 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.406319007 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426081228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.423846658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405781372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.428234546 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.430713137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410283326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409627547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.408498821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.439277646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412447023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40815869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42827134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410961927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417864028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409747741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415093027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.418329738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.426151113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409666795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.42506356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42498764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.42071374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.438613735 seconds)
  done (took 206.704308719 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.412521394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426568646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.412203158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.410798685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.412190153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420836664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425839532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.417939474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411972751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424180373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.414876197 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407353914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.428446236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.428708005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.429119143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.42726667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.440507027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427414912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420986236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.422631882 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412668791 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.43876721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417640454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.411900826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.417927309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.429795276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.43928698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412969394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.42715598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410114274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.41023969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.4275596 seconds)
  done (took 206.800149324 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612856079 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42910194 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428585983 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.360964353 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.422334025 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.426630286 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.421821579 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.626635226 seconds)
  done (took 15.053578963 seconds)
done (took 627.525834045 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.828508188 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.533101986 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.634336004 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449199371 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.290671089 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.465935078 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.447542497 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.626387716 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.369530367 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.638310508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.792061465 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463107323 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.902712394 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439997696 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.710218138 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.541149511 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.366201376 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.496671013 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.772083558 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.041069566 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.717466405 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.998611562 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642159343 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.369011015 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.909315667 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.993952769 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.219785083 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.362697111 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.464900826 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.776454767 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.117466099 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.464332749 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.514902014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511058769 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570032763 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.547849145 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.440012194 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.510989964 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.655932864 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.774130085 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.060174365 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.189009279 seconds)
  done (took 96.943503683 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.40723418 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.41045232 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.410831036 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.411212609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.411940949 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.41363743 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.412324318 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408672412 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.411699419 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.413013211 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.410179602 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.413445373 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.412257857 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.41424721 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.411611088 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.412030342 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.410112524 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.417167638 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.412303331 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.412800744 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.411399392 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.412293963 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.413190835 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.412334036 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.41500269 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.412573449 seconds)
  done (took 38.04262636 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.431544851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.690060472 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.848326498 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428733532 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433045576 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436118586 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.515282427 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434756504 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.430818148 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436752705 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.61069797 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.438296214 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471318298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.88591882 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428734015 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433620767 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432344597 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432539568 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.699096678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436128636 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.537626371 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.434286664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.516358871 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.443245259 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451929703 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435302891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.43896716 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.961808904 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.455278643 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.612016264 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.269859464 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.512900457 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.922675165 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.872642446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.262890463 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.436689537 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.433389558 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.615063798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426573314 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434048905 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516758396 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435523437 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.86480021 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.055696329 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444337079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.433758684 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.980625922 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623863993 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.696617025 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441970231 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887834637 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429881916 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438083854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435705547 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.69864031 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44467164 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434075787 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.99107105 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449973876 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.518299154 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.437797221 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433897362 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.707793566 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431743122 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.696997759 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429569843 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.442986437 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.449450176 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.865416673 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431780178 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.083109852 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.44691396 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436583557 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.615685239 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.695507537 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.014415084 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.458290326 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710404549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923410082 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.534320138 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.44055312 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.94818178 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.530595081 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440713796 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439162228 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.434467557 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.435548862 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484211749 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.517183577 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.009501958 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.083207501 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.993509409 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.534300514 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.448886943 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.436974159 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.980252373 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.45077363 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.436888677 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.863945514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072670109 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448761287 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445009019 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.081610675 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.450316507 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.520799494 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.439160025 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.869829139 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.431437322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484481981 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438244028 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44174206 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455109142 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.521205243 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.44194666 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.439697031 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.058798942 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.630784321 seconds)
  done (took 188.209817873 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.434270585 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.424140456 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.432719097 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.426415871 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.432608252 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.439438589 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434094326 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.430649849 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.438856218 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.435782277 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.433968343 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.435047076 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.430361973 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.433355651 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442096941 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445254359 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.046038612 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.435094592 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.435201028 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.427844873 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.241752569 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.436086049 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.431052726 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.424035253 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.435025048 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.429925889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.4289304 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429179316 seconds)
  done (took 154.88575233 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.440778553 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.053694506 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.460490444 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.579152513 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.463960469 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.441327705 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.578669191 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.50246874 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.460911841 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440727044 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439594873 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.770382563 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444380606 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.003623996 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.645062108 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.598684085 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000496468 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.4603142 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439861155 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.441041284 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.581299339 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.438927795 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.772248221 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.059778194 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.463189499 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.057053976 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42699046 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443581464 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43862891 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.055020452 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.458751863 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.77280513 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.52615044 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.510093879 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.076569877 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.021425728 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.021806714 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.602915549 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.445602085 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442742259 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.439782977 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.427451126 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.060620025 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.464957428 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.442852235 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046883285 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.463727652 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.443301093 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.451337121 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441005932 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.507302363 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.527639857 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.795416056 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065922166 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.545214619 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465963738 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.583805958 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.838263348 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.448427264 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.004631788 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.426275015 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067175458 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.465682328 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428473695 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.444700932 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.4496697 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.603761255 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.587624264 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.008455167 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.462658048 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.005356897 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.620174446 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.443369207 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.443068815 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.445137102 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063366269 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.023993288 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.621831583 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.588636651 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.651159599 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431238835 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445332793 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.430263434 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.527077881 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.445400266 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066889087 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.0261502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461421526 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446546943 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44825174 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.447327221 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629960043 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.081346196 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.54640506 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.998204175 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.795645712 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.777600313 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.448447877 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.510966855 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.462365113 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.766741492 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440770893 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508181084 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.903333417 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.769670597 seconds)
  done (took 172.755176859 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.701589859 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.740586454 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543038689 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.581378962 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.074133646 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.026328246 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.759564124 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.598388079 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.555644001 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.710453201 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.668331967 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.542308698 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.647498582 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.529016843 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.189563867 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529778314 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.557671099 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.591026822 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.559407633 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.513289869 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.095057531 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.736637512 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.632533996 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.464058768 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.545883726 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.276565664 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.03256329 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.006834058 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.634561946 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.866316783 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.006471664 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.62227278 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.432864313 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.159122345 seconds)
  done (took 69.476145925 seconds)
done (took 721.63630556 seconds)
SAVING RESULT...
DONE!
