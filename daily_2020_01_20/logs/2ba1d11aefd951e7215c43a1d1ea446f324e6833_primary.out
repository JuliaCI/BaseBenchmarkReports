cset: moving following pidspec: 24001
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328421013 seconds)
loading group "string"... done (took 0.63019221 seconds)
loading group "linalg"... done (took 7.178591375 seconds)
loading group "parallel"... done (took 0.160339606 seconds)
loading group "find"... done (took 1.14136613 seconds)
loading group "tuple"... done (took 1.769154503 seconds)
loading group "dates"... done (took 1.427797411 seconds)
loading group "micro"... done (took 0.227099624 seconds)
loading group "io"... done (took 1.041921008 seconds)
loading group "scalar"... done (took 39.004826129 seconds)
loading group "sparse"... done (took 11.876140469 seconds)
loading group "broadcast"... done (took 0.952033349 seconds)
loading group "union"... done (took 12.623118564 seconds)
loading group "simd"... done (took 4.493675828 seconds)
loading group "random"... done (took 9.308573221 seconds)
loading group "problem"... done (took 1.827382097 seconds)
loading group "array"... done (took 20.908940217 seconds)
loading group "misc"... done (took 1.686852176 seconds)
loading group "sort"... done (took 3.398807714 seconds)
loading group "collection"... done (took 17.434333942 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523091042 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126351061 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119877015 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121100322 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152456559 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116478962 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129801316 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088930914 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.7831382 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14961816 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118971523 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439090739 seconds)
done (took 5.173022358 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177634155 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084434529 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084664689 seconds)
  done (took 1.290760803 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067813073 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123505367 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068657916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06991945 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070637036 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069623582 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069441791 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06979441 seconds)
  done (took 1.664321638 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075272009 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07270907 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069170495 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071965214 seconds)
  done (took 1.412392744 seconds)
done (took 5.748015351 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802472785 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209231774 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189184828 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416187411 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13584215 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164246596 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648987742 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322905789 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19238863 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082496976 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110420198 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.334223508 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112894019 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649331444 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075916634 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092285626 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139928363 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450199627 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068846979 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083544379 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090296607 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132406126 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089761608 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078547962 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150065946 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069479547 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137805038 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081734053 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068070497 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.215169176 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173724363 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656162064 seconds)
  done (took 10.38580059 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098902106 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100745332 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072624989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12622271 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098749007 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072929202 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075033765 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07086418 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091309422 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132961545 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092663559 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105786383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069063122 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072460176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089139528 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209896535 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084036039 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085189828 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073988759 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079186132 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109282539 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081161112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080693148 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080833519 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132325314 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182101084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101334674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098664899 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07045551 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083629355 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117459294 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1286858 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06692341 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067422827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128113487 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096660892 seconds)
  done (took 4.686512776 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.010638909 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150128415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094598724 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140428359 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115655261 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067989133 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114493757 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068540683 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08544242 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217440902 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.488048146 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.602551829 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112350596 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105370016 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071687454 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069621657 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068623835 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.521018935 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097003244 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108581499 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083230467 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074126506 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070424791 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360316996 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071661552 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067542132 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072030572 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060661695 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067395313 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130701239 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071161027 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.970562136 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.132791465 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070907017 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104787359 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172196214 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.22447506 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151245769 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073181776 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06886434 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15905012 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074760864 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069394198 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088662254 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.0685617 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11767976 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069506231 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071244841 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170919053 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107612891 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066499698 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080695975 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.676430165 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155394133 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078854207 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067493511 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264280229 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092102177 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073817648 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067526681 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.205232741 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136802663 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071092526 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070177952 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072209353 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073181269 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38887183 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069851977 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.205818809 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068789308 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078806812 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070781057 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070969842 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074501925 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074069416 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088921439 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067961482 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076121461 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067448892 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067981078 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068180184 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085779429 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380467775 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069466617 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072249621 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068095399 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092660163 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100266542 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070375332 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068759643 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103619981 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069423131 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067358258 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.111085174 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069903121 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066992389 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.190676889 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073580031 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115876047 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068235277 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101749131 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069106917 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098988389 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07316303 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099656477 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081867897 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069775816 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.421536948 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067096553 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067989215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07182189 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068628564 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071044384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070814274 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084488759 seconds)
  done (took 21.957188153 seconds)
done (took 39.162359616 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241438237 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084227094 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080238413 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081293038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078462972 seconds)
  done (took 1.781170376 seconds)
done (took 2.977089238 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123915902 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104404682 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067998035 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101565707 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067938798 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106635774 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10635619 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086046653 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105408615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068143802 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101737215 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06763432 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067591038 seconds)
  done (took 2.389347652 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084328452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088377559 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073434691 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087243744 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067568285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087197375 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08514163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093188693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084558732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076354976 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066867448 seconds)
  done (took 2.082588414 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083552399 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087955805 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073588184 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085800039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067026748 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086351712 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085482293 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090099151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085676674 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0775581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066517997 seconds)
  done (took 2.072614122 seconds)
done (took 7.727950007 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080414997 seconds)
  done (took 1.256226525 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.60064374 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.132292685 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083359058 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113249266 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193408036 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123811881 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278101679 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090518046 seconds)
  done (took 8.974324293 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090208574 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070078513 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069746956 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07033323 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071240516 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069479395 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070333923 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08377399 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073621286 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071845835 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073452559 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07459969 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074979987 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076300319 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075142459 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072689532 seconds)
  done (took 2.439067808 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094323566 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093754519 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075866248 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07596902 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074072652 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075287189 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07819253 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077521444 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074202999 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075514276 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07822689 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077217311 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075331282 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068057727 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077355598 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079449357 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074174419 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077303851 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07829681 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078267104 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078032295 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067473126 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075433385 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078313049 seconds)
  done (took 3.144688066 seconds)
done (took 16.99901063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116201762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073235091 seconds)
  done (took 1.373956877 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082804099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086671856 seconds)
  done (took 1.360256637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08517901 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06619701 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091968398 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081844989 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068247002 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06679037 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090274151 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066943933 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067012335 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067028816 seconds)
  done (took 1.943266319 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069182411 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078840715 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071267731 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084455909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077463629 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067233137 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076110569 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071493127 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082617286 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065879387 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074768453 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086126363 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074832873 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087606099 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076462757 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072252267 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074893828 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070762327 seconds)
  done (took 2.556485105 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066805664 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068078046 seconds)
  done (took 1.332416535 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067885129 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065396723 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070047342 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069944568 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066510219 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066073981 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066760089 seconds)
  done (took 1.66648148 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385954606 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117558053 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324270678 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074504225 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086078936 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.265260764 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069442618 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074409843 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074762442 seconds)
  done (took 2.715317392 seconds)
done (took 14.14940044 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082250066 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088049822 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100557973 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.384046443 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095692295 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069117201 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117475554 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.198064062 seconds)
done (took 2.344261682 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213855989 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637947382 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.415707967 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213904562 seconds)
  done (took 2.467080556 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345694835 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092101552 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061927599 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070446309 seconds)
  done (took 1.778770598 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067725597 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070192146 seconds)
  done (took 1.342657195 seconds)
done (took 7.009297791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067315901 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088648932 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069375871 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06678636 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069059192 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066606113 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066970087 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069942805 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069310959 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069173688 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07165795 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069046733 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069163596 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066892767 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066918537 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069918558 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066935884 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067161366 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066576697 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06657306 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069758121 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067315868 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066844888 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066889283 seconds)
  done (took 2.896288581 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085936488 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06704208 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072905402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072855839 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070637572 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072350292 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072198023 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069180326 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07486458 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071683354 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072550975 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073375972 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071730541 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073344441 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071442069 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072770795 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074710496 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069270058 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07156842 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072630355 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074408813 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069257214 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072792102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074331844 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072474482 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074486991 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071897278 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069666562 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074597679 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072843037 seconds)
  done (took 3.394161359 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071118619 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064815957 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06770971 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07486837 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067619501 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067861562 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066581119 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067429253 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06748477 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067085335 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06793392 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066886006 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066664067 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067766921 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067543565 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07071466 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082750434 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067457338 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066535486 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066550897 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069331715 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065214858 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065145943 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064774069 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066175228 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066590567 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067179568 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066611032 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067549179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06649785 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070653527 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070444406 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066577629 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073785321 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070524546 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.175865183 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068533125 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0643684 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066785729 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06662927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066535914 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066808077 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066589124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073928914 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066845966 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068849325 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066749497 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068079968 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06779684 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069490594 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065963073 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066767582 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069514999 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0677987 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070967279 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066526062 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067483384 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067483141 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067557312 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067362459 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066932426 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067064334 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069927033 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067284764 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082520289 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074250124 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067016273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068609063 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067837576 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069657444 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068437241 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080936164 seconds)
  done (took 6.257231607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092091373 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089919637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066828594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0683208 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064959386 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067568006 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073437449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067618363 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068649382 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085351784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067752418 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068409552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06883452 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070939664 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067853687 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068841763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076290427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065258335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067503381 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070666909 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067738594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073930719 seconds)
  done (took 2.805829037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154500542 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071906703 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107033179 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077372651 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071482721 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076929335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073156036 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073274607 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073278822 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071294518 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07100674 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073519967 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073145041 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070723012 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071325791 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07127502 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073278213 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070778529 seconds)
  done (took 2.643082374 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077899412 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067940373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090176134 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068126664 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06905365 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072321863 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073734744 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078533384 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071361956 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069555294 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077754975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072211427 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071854911 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06944802 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071621684 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069584102 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072077883 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069087588 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077801589 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073712545 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074372768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077498104 seconds)
  done (took 2.833743361 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081061286 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069644929 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082962929 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069989839 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063311394 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065838624 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071313442 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067150444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072580182 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069871389 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068113374 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066732963 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071631099 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06932092 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072270319 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069388241 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07120742 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069209559 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071193277 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06495366 seconds)
  done (took 2.627898909 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087772132 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069146805 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070767914 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077533268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069361052 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069991801 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079148244 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071414159 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0710922 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092005547 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072101822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071717278 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079690125 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075869195 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071414288 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079186769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07884626 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079023501 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071295773 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071395877 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092143396 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071334076 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078686962 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071087029 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071362871 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071026214 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071380211 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076125514 seconds)
  done (took 3.333529442 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068364251 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06733377 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066598013 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066837826 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067136037 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066893698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066590164 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06697335 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069649601 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066980157 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069430482 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069276641 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069503618 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069468797 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069502631 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069616936 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069156834 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06655463 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06670879 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066881425 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069546289 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06924274 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069570771 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066563916 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066653203 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069000339 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066672752 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066704249 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069215529 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067171611 seconds)
  done (took 3.265630571 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076326186 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075910455 seconds)
  done (took 1.377899904 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064440639 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082383197 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066606767 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073985721 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073481406 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070717535 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077676703 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073090236 seconds)
  done (took 1.804514277 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083607919 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081821745 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071341898 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084180644 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081086528 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087333806 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139923286 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070448524 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076501822 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067888894 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084259639 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069209741 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077102171 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071749444 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076909288 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077340005 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067147237 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076310386 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072713697 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068296792 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07106014 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078611426 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07275471 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06473924 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071206074 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093245254 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081698517 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06984948 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073000367 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077471449 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075795002 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063461971 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070001441 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070749012 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067840662 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080479499 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085397505 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072468723 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078726555 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070789074 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080771684 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064836723 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074953929 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076774856 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080227237 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070363002 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070871943 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064713385 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067877286 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072666668 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064928601 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072569244 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064689817 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077746003 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073711796 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080975466 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069158101 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07165785 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073455559 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073258543 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07734942 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072609748 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072367682 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070178078 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080179373 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074812409 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079072215 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065001238 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063527215 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06795825 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080197807 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093592461 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07655895 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070515569 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070629714 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067631643 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07339161 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071187722 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076448826 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076516233 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070185124 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076109915 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077460445 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070956492 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07305945 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078291793 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068251429 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073068764 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067880517 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087443809 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069062921 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068141476 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067617485 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080546109 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073274162 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069815456 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067730095 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077416768 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063736308 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069661342 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071047373 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070225214 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079393945 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072806322 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072354262 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076283283 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07458909 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067566524 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071114361 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065017763 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069869987 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068523876 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076534843 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06320376 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071851998 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.195385252 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071998813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080778237 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069604107 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070219982 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079687469 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076804325 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069610124 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067524194 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074520177 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070605377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073362625 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079913991 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06948617 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064667519 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064818019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074197531 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069255843 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074468627 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075468605 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073583904 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064619972 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068447072 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076107823 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080008852 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070606446 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071453657 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076742144 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071407229 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069701636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077261733 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07312687 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069394581 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076401357 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07163989 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06455715 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07339127 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073786087 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069100621 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073398472 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073028914 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073201458 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070661537 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068574528 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077192246 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070973652 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069139855 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070408493 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068607484 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080513064 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071803556 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064442162 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067189434 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079698917 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068168574 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069825472 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068933042 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0728633 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070705358 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067407944 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06926931 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072017829 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080301014 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074117814 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071300151 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075654243 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081273088 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069557244 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072728733 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06909609 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070800229 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070589303 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079200455 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075696213 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074819804 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072663216 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065944171 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076071138 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077564566 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069202612 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067090265 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069132568 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074338662 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07614401 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074729016 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070771838 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068265192 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070874516 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073862751 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073259746 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069923696 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069326999 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076559927 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068014423 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077311621 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070847644 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080670674 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073935231 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064421091 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072274224 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068207622 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075761562 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064310635 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067377845 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068474849 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070991737 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068610793 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071826449 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062771955 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075851476 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076641018 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069431588 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06825734 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068912987 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075838523 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070411627 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072536676 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072496052 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07490761 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.208878121 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070078856 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074065202 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081837091 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070589661 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064414958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076509039 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069529556 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069935328 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069770783 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068597232 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07377856 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078890739 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077724931 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064315071 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072962756 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068818672 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06970652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066019564 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075319239 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074128921 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069946112 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074824843 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069211692 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069376671 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07199417 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067775772 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070019789 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07077944 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072156369 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068996938 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070657465 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069320265 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073045519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069217426 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067767697 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071868847 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070230145 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071107566 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075994297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069870586 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070791704 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073161646 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070445516 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071143123 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069899414 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069240437 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072867922 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070556571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070873634 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072644306 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064269994 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077223046 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069527661 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077731162 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070874825 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066534066 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077241932 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072382616 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075726323 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070473592 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070390765 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071748692 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06949222 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072201499 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077341451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067818448 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080834153 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077552447 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070783751 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073718447 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070515567 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071623109 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068827735 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071329687 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071040199 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070017041 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070016314 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074636947 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072913879 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070234484 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071989484 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071143273 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070406636 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071593243 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064462938 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069599408 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069606821 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070218628 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080363607 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071087224 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07066327 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069613006 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071503276 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069572163 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066932427 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078193441 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079460813 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070967447 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077548401 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069594909 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071649185 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080678353 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064103519 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068125414 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06721668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067827742 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076667841 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070463857 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078820748 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069212794 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067201275 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064724191 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06956358 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067700752 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063240315 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066990961 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072815223 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068549636 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068347643 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069755314 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071889711 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.203560119 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08190829 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070692756 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070317305 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069213901 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06580417 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067499843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068810624 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070874967 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070992248 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067788623 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068115356 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069772943 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071510376 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071497875 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073045761 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072209699 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076508506 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071113235 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074017352 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073044063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065161537 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073622371 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071582786 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07017539 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069700473 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074305763 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073885797 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070953732 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07885575 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070320517 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071365906 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06813184 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069946225 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070815282 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070484461 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069503232 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071706357 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078501206 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067820995 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073682077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071400158 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070722517 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077173781 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071399028 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073008321 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077257652 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070530092 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072266705 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079073913 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074134973 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073819631 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071940265 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072224547 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076575356 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070094063 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077064265 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071193991 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071179166 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071644231 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068005916 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069745044 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070168582 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070153535 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076614972 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071353711 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069277264 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069430148 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06729911 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071244416 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073092708 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07840947 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072701613 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072913179 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064788041 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066772662 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070768492 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068222489 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071938253 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072732299 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07586019 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072128299 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071065144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069312563 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07958628 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075846609 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074099872 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068396297 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073972821 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071131302 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073182756 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07158738 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070579122 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071715222 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074557983 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072445013 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069634511 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077836478 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07451362 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071304569 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071287734 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07114147 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070324281 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064867709 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070249907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07135927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074770575 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072340734 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070246091 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080617014 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067130787 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070134802 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072635192 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068142558 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073702886 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064026252 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070758254 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07056825 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069930994 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064394224 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068339187 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.198612645 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073919403 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070494947 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0660737 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082260939 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081316208 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074282259 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070378615 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069172999 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065923164 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065904233 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070209846 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071191838 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07306208 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081398509 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070353434 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070020866 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064572372 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070953837 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072910871 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073797172 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067376611 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065519597 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069423528 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073886245 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076428374 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068962327 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071299635 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074378411 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072390055 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068208659 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073865026 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066669348 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074972471 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083328326 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070483886 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071345002 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076634243 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078442668 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070277737 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064951997 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070505059 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073497839 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071034727 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071607469 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071522586 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086905687 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07375107 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069189706 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068702566 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072711684 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070449169 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07853338 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071603841 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070945305 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07488828 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072629951 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079548128 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073585326 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078396825 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072986512 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074043086 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069190813 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070880989 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067943607 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068958099 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071105241 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070341813 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075892051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078677225 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069194948 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080913215 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079794299 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07199612 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067088386 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069282374 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069370318 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06492545 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071139252 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068002806 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068674614 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068362771 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069512366 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071977678 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076158615 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071553183 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070776824 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.07056267 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064573282 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072721902 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073383355 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071619827 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067124055 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070793302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071071137 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074946093 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073870312 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067851228 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072078618 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072621502 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071610056 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065210296 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076771567 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069112968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071998687 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069135525 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070047153 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070340723 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073803689 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074725677 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07143932 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072238947 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074010259 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071607169 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065813631 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064983017 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072391971 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065195227 seconds)
  done (took 44.770948202 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104142444 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06506849 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063918745 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064076682 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076031964 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064590529 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063987166 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064980183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065489184 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066886674 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063381927 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063576358 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07239387 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080382362 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075515234 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068018585 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063939981 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065471302 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065392409 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067558148 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074879098 seconds)
  done (took 2.802735599 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07573818 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078781887 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077175502 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085531941 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072844607 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072344161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07714503 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074205224 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080304911 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074483754 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079968973 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072739378 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074136788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074207055 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074352319 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072645556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08074865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072549456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072286156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076998364 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072436303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077350322 seconds)
  done (took 2.971433533 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069464364 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067386838 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069870083 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062775927 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067885181 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06314718 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071227702 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065826229 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071087987 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066985953 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067419411 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066755437 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069709682 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063304944 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067914235 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065859423 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108971844 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070791667 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067728773 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068954911 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063516544 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069727649 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063036724 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063936274 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067637717 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072091276 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070389252 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068776017 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070116627 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069361617 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07045163 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068099958 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071994412 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070586354 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069245345 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069669794 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070101762 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070443656 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065460894 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068767692 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07082043 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066095436 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070494272 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071655666 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06774705 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067225253 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071821125 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070252116 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064640797 seconds)
  done (took 4.692430876 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080888441 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112817915 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069946714 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091528588 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085419224 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076684167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07167226 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09183204 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066569452 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068769902 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083465547 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080396772 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06751617 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071465449 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074026199 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068207577 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069912285 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066863691 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073268231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068758783 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073393293 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076737427 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084205398 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082682732 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073306244 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068583789 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0686428 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074146179 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081960572 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073713515 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074322645 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075290827 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084293826 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074589279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068188291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07214119 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085395473 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069164721 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07188424 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067088076 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071525892 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07390731 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076830567 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085871725 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069099536 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07433701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069235813 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06687782 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082029603 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072832479 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077355968 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08419631 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073629703 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070136246 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074355844 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084915664 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069613624 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067968373 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072919977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081784954 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067148423 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073301557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082526296 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07042885 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075857946 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082811347 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073599045 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073001338 seconds)
  done (took 6.585051348 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077605412 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097152952 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085731584 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08566418 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077315812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077473131 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077317583 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077409789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077201178 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081934825 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077156667 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117440278 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072556674 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079869074 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077192487 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077229613 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07741195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077430251 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077607074 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077306305 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077287044 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084552942 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078230525 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085120556 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080652095 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072617897 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077039747 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076845367 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085282679 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077161381 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089721129 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079020365 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079797967 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088009829 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083038668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079812925 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069261947 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079651143 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079668952 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079534606 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074897415 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086681128 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078260411 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072660816 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077743198 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078536759 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087410278 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083697896 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082228942 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084013721 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079996362 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087279166 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079521884 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080689083 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087601099 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090450789 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087392627 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087707428 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079957891 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087320022 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087637926 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090215956 seconds)
  done (took 6.387411587 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084979105 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076548166 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08340473 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062828354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065425166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073707122 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065947429 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065625161 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076359808 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075994441 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07781011 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073584307 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076482119 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078136792 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073284639 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075820873 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073369526 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073651662 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076012085 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073360607 seconds)
  done (took 2.811104806 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076583901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084325936 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068542983 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07355069 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070766225 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073388446 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070126644 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070800609 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06880227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071124792 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077902679 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079629899 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070902986 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075527804 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079688351 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075196698 seconds)
  done (took 2.50626777 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08569658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074251379 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082451126 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068175195 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068532387 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065322144 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069279668 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065073652 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065732551 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081727971 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069086596 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079832486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070135822 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068320969 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065996861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075404321 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065691515 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066838508 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069235702 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082603327 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073335444 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068386494 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073395518 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06969035 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072382162 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074586653 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068448231 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069723723 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066718016 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069780627 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072678095 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073348188 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06675783 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067947393 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068411644 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066585154 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069192079 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07156059 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074753043 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069480679 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067551545 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07282645 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06920428 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069823267 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065822279 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070357192 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065724675 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07197886 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067122608 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072448263 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069695956 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072369881 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071084267 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076708005 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072786378 seconds)
  done (took 5.224301317 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081009248 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071030549 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064841229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068046999 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073310582 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070884576 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0734653 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070869311 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07127366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067932355 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071522407 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073073727 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071124912 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073260441 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071204739 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073476313 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065260979 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070738455 seconds)
  done (took 2.614495919 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07257385 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068651734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076597924 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070506234 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069551292 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071799944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065536853 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068490783 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068692869 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070073017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06924526 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071901843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068431295 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072082616 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0693918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069619759 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071941632 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068300389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069745079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065439477 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07221929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068281365 seconds)
  done (took 2.866536209 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096137396 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084635263 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142781021 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080507663 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086020735 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073480346 seconds)
  done (took 1.892036741 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093649524 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101886058 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067979395 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070236089 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077385285 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071279922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071816911 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071582855 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081476611 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078673626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073637713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083092471 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083049175 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081981047 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080090647 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079612063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073817413 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07363148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070049686 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088619053 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073883273 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082522119 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074461573 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073823767 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073559099 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081980889 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082319215 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079441723 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073624392 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082603009 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079803175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074103163 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082846575 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079326579 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073238085 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083131177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07421585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088876989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079884789 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081985217 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072755319 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080090673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08216124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078645196 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08277553 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074378669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079024395 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073963627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074865237 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090674262 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080276832 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082230154 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08251441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083046748 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083162842 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090037968 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080109641 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082411431 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080474773 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08036999 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081923184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080040548 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081884219 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079978628 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080629462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081966501 seconds)
  done (took 6.585508259 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105228241 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06822166 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072410916 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079319509 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081986807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074617763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075049523 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07479594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074425488 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071156771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113923484 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074337775 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082338753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081976841 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074230322 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073914481 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074426855 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082157471 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070721198 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090045493 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073847531 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082777609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082232433 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082166336 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079934112 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080795951 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073422799 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073631177 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072772677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071948358 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078559199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074414316 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081408897 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070508253 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081539634 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073131964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072591576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077292661 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071663533 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077257299 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07960919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085416467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071987928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072120597 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077935623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071964667 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071559116 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068271186 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071767086 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068179566 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076916136 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076896812 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077209213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079379029 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072202366 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071841632 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071393022 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072251168 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072345196 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077798828 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079735898 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072163117 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087984838 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072116705 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072604707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081834085 seconds)
  done (took 6.430004738 seconds)
done (took 133.583824237 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193083371 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166351456 seconds)
  done (took 1.685000089 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069934117 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10109059 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080214955 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130285366 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.0682102 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101796519 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101004137 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079549725 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068022245 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067779939 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067903724 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070418468 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132761265 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067879104 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067521033 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070458596 seconds)
  done (took 2.682515493 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09985164 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163642527 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103947188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066679826 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101451535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074349615 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066724493 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076709124 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072462339 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066867768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074680318 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071961622 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0663147 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072022187 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072561505 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076176185 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066452179 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074166936 seconds)
  done (took 2.807053393 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100818432 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093532744 seconds)
  done (took 1.530954572 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163344521 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136790959 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206489481 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354929083 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165750158 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151806699 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148078834 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14703759 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123203021 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142163967 seconds)
  done (took 3.07283468 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101502125 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156656299 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270037259 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119161213 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074219607 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095116553 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120623651 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079880292 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082453028 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08195288 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081854443 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078289309 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101226037 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074628452 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075375044 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078075739 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105449211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074699119 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076280528 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077196344 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103402697 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068411706 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075881681 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075073477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080311245 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079100556 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068148481 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067501597 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078674881 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076810047 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077752546 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094369158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079110778 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107497113 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072734084 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109067362 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078434776 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075086065 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.0766151 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074957316 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079659897 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079656095 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074497087 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080473393 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067434079 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07861413 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067948782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067395115 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079502471 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068450134 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079242225 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078209886 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107979994 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069931955 seconds)
  done (took 6.065203964 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104927728 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10758127 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073546668 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113829566 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103954658 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074147719 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104599532 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097564917 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106076103 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072088158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07049046 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071761183 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084115769 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08500193 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11658672 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108257875 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075173481 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073132331 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107768718 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106686927 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07034496 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09842705 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092922475 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106330341 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069814083 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071679646 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070572683 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074212766 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081032464 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082755806 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073360495 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083714014 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086745529 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079968525 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068958559 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070328957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071988683 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08136952 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08136829 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080422206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079194408 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069727355 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069881199 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071403707 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071866876 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070052227 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080674408 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084390702 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080838376 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071442113 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071945361 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069853079 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07154933 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082313708 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080855609 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083043816 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081571442 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070506633 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070595121 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075848617 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085023494 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083751608 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084467359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073161623 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084063552 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073227993 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085192241 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089274615 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073349819 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074289933 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073057816 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073832388 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074123089 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08123918 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080681542 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071676697 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07277286 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07034418 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082282559 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080298171 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070716365 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079000638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069183721 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0703421 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071944359 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071829156 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079318483 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081818322 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071395643 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07002084 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070441281 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068665093 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078154917 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080726768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079832401 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079433833 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071960204 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079631467 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07973799 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070992696 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079919197 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069520859 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071125184 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202632607 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084611213 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084374676 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082977541 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072500412 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071223459 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080794342 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083034303 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071834015 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081266587 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081851312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081426919 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069675338 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083284871 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070881477 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081485914 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071665917 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081791437 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070593675 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081181634 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071103071 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07061419 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071228752 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081522206 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074560583 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070569396 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071952363 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071826282 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081117729 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08386704 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07268783 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082024619 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080767724 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072692666 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080853368 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071063366 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081092361 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071268471 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073241737 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07167744 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086045354 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072725757 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073407046 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074461359 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085939588 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072315715 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082273607 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080434402 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070569137 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082584847 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081514714 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079615169 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081708051 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07212424 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070122691 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069515338 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072066907 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080096757 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081027147 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072020094 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070850113 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080107086 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080783978 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068637551 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079902714 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081384106 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083649653 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07201227 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071189113 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08309387 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081907333 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080200907 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080246688 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080297328 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070170957 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079570038 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080077121 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07003046 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085933051 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070167409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084988145 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080827824 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07880017 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080827727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082416684 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082191346 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082841824 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084908164 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070159555 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069230072 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081165252 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069479999 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070817154 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079633887 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070905271 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070799998 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083419343 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070198656 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080007368 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0690082 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079573158 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067854977 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07052797 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083764388 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069206224 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203580551 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084956967 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073509226 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080145422 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082673397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080512875 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070875032 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072381744 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081620831 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081672246 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070919153 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070487319 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072560623 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082866745 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082682838 seconds)
  done (took 19.164536005 seconds)
done (took 38.357260113 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212774077 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154590563 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176366546 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120872422 seconds)
  done (took 2.10221803 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118616854 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1031686 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095343031 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066535184 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101511448 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066825615 seconds)
  done (took 1.923261322 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313951354 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213933453 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190394691 seconds)
  done (took 2.090692542 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205082471 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191835841 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423667922 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264748674 seconds)
  done (took 2.568528946 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147339204 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090715863 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06900905 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085601307 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136238657 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163167442 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102526765 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127499817 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080233629 seconds)
  done (took 2.427737191 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151407579 seconds)
done (took 12.634310284 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.26138258 seconds)
    (2/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.213972944 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.210069158 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 0.173258413 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.14514861 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063523452 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.175721072 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078342626 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074081259 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08164291 seconds)
    (11/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146075263 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079368602 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080511976 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195591501 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.19517134 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076151604 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075870153 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116878757 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071361098 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105038732 seconds)
    (21/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.143942655 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077320892 seconds)
    (23/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.161144689 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.200594315 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111132601 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.146705042 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078292541 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137476538 seconds)
    (29/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112501269 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.163051627 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.223505871 seconds)
    (32/309) benchmarking ("sort", Float64, false)...
    done (took 0.132908812 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053626352 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084045639 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108535425 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070579634 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142434335 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069497193 seconds)
    (39/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053906595 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091390275 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090206087 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07397876 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.11251467 seconds)
    (44/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094205098 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103597327 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080211979 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08395674 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067568107 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092372241 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134972329 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146692704 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077073459 seconds)
    (53/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.230836537 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068272347 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074899516 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062646982 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087749955 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075594735 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219577325 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143458602 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.197751103 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111555569 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069459761 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067456642 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096705141 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078422054 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076209027 seconds)
    (68/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.115190622 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093071145 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185885515 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07114122 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092165546 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186509686 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092192124 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095916802 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091195057 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15684547 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077595997 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065244388 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096942488 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068452719 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090226184 seconds)
    (83/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09111855 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074208165 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066217134 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.066944999 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.32282858 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113075285 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167066845 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076374823 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185599408 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.166213229 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073773802 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.130003869 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06895057 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075380162 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074146684 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071197852 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065918814 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.218215902 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07551542 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092500618 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072342122 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139020681 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07354186 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078133147 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052450792 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073994284 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.292967756 seconds)
    (110/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053245059 seconds)
    (111/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166089667 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052547101 seconds)
    (113/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053522595 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0876099 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08062469 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128219312 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17993399 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05215996 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114114194 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19576414 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147441621 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084909999 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070187017 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095105697 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054409094 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157869349 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.139285852 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075242963 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118263973 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076571121 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074127572 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07190791 seconds)
    (133/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067137958 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066737643 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079670433 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110128283 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070108707 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073103395 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076772906 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073635594 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073850919 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052312262 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089178362 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073634792 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148926512 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066399455 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072788896 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06695536 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093591188 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.197123621 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070893743 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068025696 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111193157 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052679069 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073349154 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066402067 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074728302 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078337379 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077829109 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185140139 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068928248 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098063333 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094033892 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11164605 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075260403 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075725193 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136170633 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075101939 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075016718 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156173254 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.142132826 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111796704 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094757322 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074801283 seconds)
    (175/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113429416 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073471837 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074330023 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081765556 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.177211304 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067589965 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053119896 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142457239 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067047177 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077715281 seconds)
    (185/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053178518 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089328472 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0524731 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053589367 seconds)
    (189/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05368848 seconds)
    (190/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053030694 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073606641 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089877582 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062052053 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075179812 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051986658 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052037125 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.251544811 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078687316 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056675154 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053687339 seconds)
    (201/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192692363 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094758817 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070407984 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053568457 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066185753 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080802722 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078276013 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067154292 seconds)
    (209/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183706504 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067510004 seconds)
    (211/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075804329 seconds)
    (212/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112422345 seconds)
    (213/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053081266 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067520917 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074091108 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15212982 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053035059 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076049676 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074634917 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156954664 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067358252 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164707126 seconds)
    (223/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053229237 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091472678 seconds)
    (225/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055910726 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175413471 seconds)
    (227/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100483854 seconds)
    (228/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053980361 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06753347 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149649071 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128589192 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184551256 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066917292 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073388241 seconds)
    (235/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063676302 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0541139 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065985441 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164395824 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181224112 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070341961 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141477889 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157153559 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066095248 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067035468 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074829007 seconds)
    (246/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05307194 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052655886 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052029952 seconds)
    (249/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069631149 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052398368 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070843821 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070474538 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051966196 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08254039 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054434301 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051978553 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067082137 seconds)
    (258/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062649664 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066444904 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078997219 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074087242 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067203163 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067625399 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053765662 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06783874 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129998739 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053377945 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054602036 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073946524 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053644474 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052617196 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074896017 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090903099 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053609834 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196702186 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073454897 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067037282 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052009099 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052314265 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066740221 seconds)
    (281/309) benchmarking ("sort", Float32, false)...
    done (took 0.133137411 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066888609 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053003966 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074972673 seconds)
    (285/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063346401 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065292414 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143093435 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052291627 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06607627 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052738852 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074640381 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068878377 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066875849 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067679249 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072969659 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073545951 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052186049 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052255642 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052464215 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116351642 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05394294 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07273375 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067932491 seconds)
    (304/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080285719 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068417936 seconds)
    (306/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052088358 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110341238 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08797833 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075628089 seconds)
  done (took 31.505236704 seconds)
done (took 32.890587207 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086676272 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095791449 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077315385 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09565562 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082487686 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078485105 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074393753 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080567307 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08179561 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083585166 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080112561 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056004685 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07650857 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076208353 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077001639 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09278234 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080276854 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074770969 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075028005 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06622685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07444567 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06680312 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068907761 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055238436 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080260309 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07272875 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074195417 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075350973 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066746811 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066866304 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070753875 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075463064 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066665855 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079911076 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073755212 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074362788 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076751883 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077969389 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068811087 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067512967 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076132847 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066529673 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074429263 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075054592 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073825829 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073381039 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073982693 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07922925 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092752999 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068955654 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076017287 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077290746 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078036625 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074498653 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071105043 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074754601 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07232393 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092809042 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074983417 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069219643 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075498519 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076153887 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072607764 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075146183 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07425963 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076718721 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076930095 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07275382 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076203739 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073078121 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067577362 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074363198 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070310146 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067279228 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077899611 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079505547 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066184624 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073404966 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074498562 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072774893 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066277445 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069440391 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068417391 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073833222 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068518786 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055282216 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071035036 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073395086 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066025294 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075070261 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074015383 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074347152 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068666781 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077499609 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066468358 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072630643 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067020209 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067309882 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068905189 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071435389 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066941383 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068779173 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076550847 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068439085 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073589254 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081199474 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067283809 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073807226 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066065467 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065685884 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081310928 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076257128 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066275015 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069051842 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065984474 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074422383 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065422029 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066166853 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066275691 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066394603 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072716802 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065873408 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067726161 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074123647 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079273071 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065713257 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069871841 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067521272 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065930332 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072168103 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066333466 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.203109289 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070929055 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06363336 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070233139 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068079957 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075095873 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069926341 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075024974 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069055569 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075844666 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072464119 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073192769 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072190544 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066033865 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060938551 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070080317 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068784101 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069202336 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06700235 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068421532 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066912754 seconds)
done (took 12.68669472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067018516 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141840476 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098980556 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097046891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087101211 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067829298 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077145821 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101205334 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068945202 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103133944 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089561414 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087388899 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115979291 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065843461 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067307003 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071064385 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068651144 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082592144 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101080221 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088213851 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117288809 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067071341 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094359576 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090314202 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090606516 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09595729 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070184399 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070883636 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070866446 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103476229 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089614352 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071390305 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068110619 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100537345 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095366628 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085542958 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067635902 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085027131 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067933978 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06727683 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069222686 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100257926 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082155047 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082963303 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071164396 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077761595 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06807017 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085465418 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091724061 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080761793 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087899716 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104120423 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07026287 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085674288 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066325761 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088181404 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078602781 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070223675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067817195 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075217994 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067207761 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071083677 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082072569 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082042507 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071557394 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086597447 seconds)
  done (took 6.928092872 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085470262 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092694881 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084975148 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085414411 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067835792 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067789939 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067981648 seconds)
  done (took 2.034357112 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068291161 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089803061 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090963963 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091680952 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083354441 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089047516 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076892667 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068059155 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089061348 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06879712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088532961 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1025599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070862107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075611428 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09221662 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067869684 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092043882 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067963426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070980556 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092282098 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070501597 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09684082 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07142756 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068241401 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081944747 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068041954 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116106778 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072155222 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06933869 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070936453 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06653048 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10891395 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08183429 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075877752 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068543649 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08272136 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082643409 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066389641 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084466854 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077338752 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082826857 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068671096 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069114409 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066429857 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07229 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078852391 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068654416 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068910888 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070958963 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088541726 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069183455 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081679654 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070666239 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073514639 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069417447 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075125847 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078171033 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068785569 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088073002 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069699628 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084850008 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084625144 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.0819919 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084472658 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069827237 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081722477 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082114842 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070849028 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070346737 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071817087 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085078242 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066712699 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069536391 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079752872 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070735537 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091080285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091538713 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069867909 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081407563 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068434355 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068148545 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067956064 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091144698 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073555711 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068004166 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072229239 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071263693 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066445121 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067006864 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072003022 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066144001 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070019655 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071087112 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071583657 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071259518 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085169939 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071005749 seconds)
  done (took 8.949397447 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07005368 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069782048 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070976266 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068695157 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069387987 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068939341 seconds)
  done (took 1.919939901 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094960468 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070808879 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081520093 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07418278 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106041785 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088252594 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088487551 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079782405 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085291245 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079803378 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088336168 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089505213 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093785309 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073941029 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088002886 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07293994 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088351138 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076314796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079786838 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073597396 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087890439 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07358703 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073717192 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083327509 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076946631 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072760416 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079292242 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079837879 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079232829 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079785618 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073594212 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077389337 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071379148 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079546386 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088496003 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072307902 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072589973 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077902726 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073493203 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076356591 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089395628 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07365414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075479251 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07818381 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079526809 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072054617 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078099985 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080324081 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08791358 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078103105 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078014993 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072267031 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076654199 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077841554 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072268087 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079484071 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077815306 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088592722 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073116483 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071848477 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069920482 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076776721 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079720868 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077431367 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079972125 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078328507 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072063808 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073884482 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073875553 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072691756 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078208745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069896329 seconds)
  done (took 7.16926488 seconds)
done (took 28.46835958 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541575063 seconds)
  done (took 2.014974399 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614019326 seconds)
  done (took 2.108228409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.451691672 seconds)
  done (took 7.945482857 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403030242 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.528194274 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.7258552 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134030887 seconds)
  done (took 3.323313959 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711330579 seconds)
  done (took 2.212278448 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216527484 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.204659391 seconds)
  done (took 1.934368488 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377024246 seconds)
  done (took 1.871125151 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.138987397 seconds)
  done (took 2.635475093 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259379632 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177168706 seconds)
  done (took 1.936828919 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475130114 seconds)
  done (took 1.972812504 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.861004102 seconds)
  done (took 6.359945311 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212264645 seconds)
  done (took 1.755245276 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234203978 seconds)
  done (took 1.733914691 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.73076488 seconds)
  done (took 3.228979255 seconds)
done (took 42.533097616 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082037808 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082526275 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082806182 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079768778 seconds)
  done (took 1.814420782 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078482159 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074335923 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078394463 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074879131 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078064697 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075231009 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076031928 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077468377 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074171651 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074902547 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074346544 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074900906 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077071099 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076176511 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072686256 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076839889 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07799372 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074285412 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077241253 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074304076 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071986895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076389153 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076604636 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073647927 seconds)
  done (took 3.317125446 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079738216 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074635136 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076758356 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073494875 seconds)
  done (took 1.812334142 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079622856 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093908817 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093609645 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079285981 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094403824 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08853136 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070777243 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070612698 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072315062 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08036165 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069530368 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098097753 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089797328 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079633811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081446314 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067644787 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069741024 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089521808 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079657181 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080017247 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072365699 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07930128 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070109678 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090612247 seconds)
  done (took 3.444779784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087600906 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107041923 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082917331 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089803851 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092218699 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066748342 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089434092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092206433 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128771233 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067134766 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072987581 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067463433 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074738603 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066832162 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083158048 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109892701 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113127755 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070783976 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098836348 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067071712 seconds)
  done (took 3.242094202 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074476282 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070899299 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067063534 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070524999 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079021393 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074187797 seconds)
  done (took 1.951230942 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070383868 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069480226 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069195079 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069133865 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073744699 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068709378 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067844572 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070336834 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069860757 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068872702 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068471775 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067899985 seconds)
  done (took 2.345040279 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20353857 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069414093 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070559852 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0679484 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07247584 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068179082 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082802987 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069709069 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094109907 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068097981 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068812296 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070912063 seconds)
  done (took 2.520108415 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211834477 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078129242 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242204108 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153459901 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113336951 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118327348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114660753 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115673035 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1447198 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102973468 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170702652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170209821 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11038177 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140044742 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091206036 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103019496 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157794255 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166806403 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108180643 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169463002 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148392994 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128473158 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153422622 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104818396 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108691897 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124423025 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073186793 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082498899 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173910768 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135721941 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147406298 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114077214 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094904932 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178741345 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175134249 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143733913 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149612214 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086572381 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107726208 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136893491 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20287029 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090036162 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1638508 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2515676 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083679153 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136709555 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121544945 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121340544 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108043086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091824996 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147933094 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188538981 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140721186 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091643601 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126372468 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116069594 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11571258 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116071106 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185351288 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164306093 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129741123 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074061263 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10959578 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15555884 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135804939 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.11100625 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127519129 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093989211 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138203507 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156855029 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122859396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147488814 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118732622 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09081059 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120819945 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142671409 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130213899 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163916922 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126877784 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074684062 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126078607 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103972521 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082764392 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148643421 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076834839 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178276285 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100626953 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110773451 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127050179 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110784465 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110955277 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16176729 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146731009 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104547443 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.210458674 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112171537 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123809932 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14851411 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089392064 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110894161 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120714011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079101809 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139245236 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077482252 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125462101 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078834607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126783546 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133533107 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078945334 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125347553 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105936891 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102023555 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134898649 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163324675 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08976348 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084180299 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171769622 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12327162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105931043 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146867452 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158323304 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102035636 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103260878 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152783632 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182632211 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091537314 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16604844 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109061049 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085789311 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08991458 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126103808 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114205701 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126067525 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083917674 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120447841 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174938314 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077107272 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097988452 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137259301 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080696915 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082397185 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107651684 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107027716 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097659271 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102181104 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105588002 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138656314 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125153289 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107088258 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124330093 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246163582 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175003606 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089809963 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103839176 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106761579 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071377128 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138147705 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158916828 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081351145 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167019506 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125008924 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119240352 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120018232 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08504253 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142178985 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081150594 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072696823 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146813705 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111415573 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112826476 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153244421 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117990295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12794826 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120594541 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135163571 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133452172 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131330876 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107159951 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089101709 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112572286 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128554018 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074949536 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093232868 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081755137 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106568117 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098104902 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084866 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143957846 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127119543 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112147421 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11319163 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098663855 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149863161 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078156143 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131204963 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120766987 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098279341 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154608165 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155227963 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133983413 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101254948 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139009099 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071718469 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07538016 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089792911 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122238349 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22871412 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087700882 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118277995 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149769702 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130915926 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138315142 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12574899 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12319551 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157358083 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072175185 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118841801 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149451259 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122784521 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10666552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093665332 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100718492 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14470996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109310205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185873128 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117331515 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124777931 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153875053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103186567 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081057283 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104572795 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137305893 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105722551 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145756168 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100813104 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08987011 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110382386 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076394863 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100833368 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128937433 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120741055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135596992 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117704296 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135456301 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079478102 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118377162 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124130977 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124508665 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065715077 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121005565 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163315517 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096189456 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119315122 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155102692 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080264287 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136094477 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176515231 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292298178 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088829176 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111087938 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121203865 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130378891 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121250199 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142406093 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109348898 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138873356 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111702457 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087173826 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089792078 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100078292 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107254032 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097342755 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109294103 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115358316 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096611816 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133611232 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104943976 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111644966 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118502069 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100185742 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092712583 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098623846 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178781762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120939478 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173990971 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101684258 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14735935 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166819758 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076274998 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080402847 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079891726 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142356403 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086073567 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132782861 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10912658 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119432504 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125942507 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145517015 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097374064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070000405 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110393604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135479814 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127377344 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100662236 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109460596 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166118078 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102648683 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083259158 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1150351 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118530595 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104586012 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173860098 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062480501 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106543582 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076647617 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080619453 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276513987 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155492915 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.0817982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105824503 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120315966 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11433539 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130182662 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102232187 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110799074 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128367277 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152526154 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131114371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091483603 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114096786 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128885743 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158793254 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107021138 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098347464 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174127038 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15368725 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16214077 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090072428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114975274 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114743469 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109608005 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140866891 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085129562 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165759053 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083231052 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138072244 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105230658 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091095171 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131410181 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110371492 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089891691 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151097597 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120104712 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084599442 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079359662 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120479754 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12226129 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108210836 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077144832 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14081085 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074859031 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133786206 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162376107 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082521892 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106506472 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096638134 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080479285 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108445848 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252242288 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091476336 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100918786 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174774893 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088245816 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152618802 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136407248 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114784941 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138094432 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10395496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64170903 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078896611 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154599831 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118259165 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176851563 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10284821 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119465501 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110301423 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124415412 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146739114 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105768459 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181824181 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134082873 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117314087 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08119854 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104555576 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106559447 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089542576 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109510286 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114138439 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117317411 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094856347 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117233739 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126776701 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083585806 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097588497 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158872321 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119258802 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146765801 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143418667 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087333547 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119356274 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140881985 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081796728 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122416516 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154213605 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107743858 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101141068 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082549568 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10212698 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159491167 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.219950968 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167401169 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123055375 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110990951 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114569877 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115394996 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133075602 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108852313 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12299616 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093951168 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110979093 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11602442 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083332933 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079116739 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107540115 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112545653 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099672553 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09945795 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100752525 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153906579 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074505249 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101343188 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117698175 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147221243 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177711366 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090033427 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084418313 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120377163 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116207448 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11495434 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122981354 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080335289 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083051374 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08156325 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079316004 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11047606 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114822396 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116406194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112046197 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166499413 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084776187 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231185342 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097231629 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107099355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071180567 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.0807001 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098623877 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100093895 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109535335 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112177717 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16366229 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097114125 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091506237 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092434336 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074714004 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084444029 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128845232 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110492253 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119309997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247862837 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066191835 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110016461 seconds)
  done (took 60.061022854 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10926931 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083911488 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096205555 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145974128 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124687164 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20440149 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15578448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190566854 seconds)
  done (took 2.726771906 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069467974 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096794229 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104731708 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085046838 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067940409 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070768861 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233427323 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084734404 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067652406 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100048991 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082282348 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071692792 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428926834 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067865006 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070047556 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064303506 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068425026 seconds)
  done (took 3.444666719 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389552914 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615994387 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352566036 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073631027 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.430877552 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090005072 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.118617837 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131371357 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075046895 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536434838 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410823232 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125790472 seconds)
  done (took 17.970131436 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077082236 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070773834 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086079134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084862717 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073752803 seconds)
  done (took 2.014693309 seconds)
done (took 108.220248229 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083016908 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.606968332 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054313126 seconds)
  done (took 2.307801316 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084345071 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085883979 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086686276 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084686968 seconds)
  done (took 1.966356783 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075589842 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077719632 seconds)
  done (took 1.771832082 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233737081 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163672496 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098177897 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084536757 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080677333 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080802093 seconds)
  done (took 1.872452355 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074202666 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076228753 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074439205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078063098 seconds)
  done (took 1.92475536 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078063212 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053990817 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056326421 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059213126 seconds)
  done (took 1.871040161 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088454651 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080642593 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080509329 seconds)
  done (took 1.873374762 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103334099 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087657379 seconds)
  done (took 1.814495371 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083626835 seconds)
  done (took 1.708898058 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096083182 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102510206 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133176227 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112817079 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141406955 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111224171 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086376286 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087507879 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078261756 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087890015 seconds)
  done (took 2.661784503 seconds)
done (took 21.97055477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08002654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.454498802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36207041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091489845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670163638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35773693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003300115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093741613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116400049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069093836 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085878444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649226925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994226913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.412532411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980210312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.316747027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651609095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069437297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069057517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069610546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.990336386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069639065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069688337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06978675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650090359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374226146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069640337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318342004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069562048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07163246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357167291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070117316 seconds)
  done (took 16.387731855 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071202424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120980386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074426499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085413806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07189957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070355752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07263249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070106324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122141925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069299322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086612988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070663085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072788291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085026782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089074452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069675775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070078804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069697349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069734182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069996248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088472055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069220441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070039057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0697923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069855292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081935269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070176877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069882428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069956408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071654873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072498776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070382557 seconds)
  done (took 4.087408379 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116066915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125908014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075114002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104456448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112009933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07129437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144055354 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095177478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128011838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06978894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086629503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069067232 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103763255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070427434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089626592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069765578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070778883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070320937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069537414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069669201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089634598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069948383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070002968 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069952711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069979834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083372181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070326119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069883504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07006042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071628453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07311051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070158945 seconds)
  done (took 4.324265764 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073775907 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077633802 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084563862 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085473064 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070806698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07287187 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074803082 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071092028 seconds)
  done (took 2.24910186 seconds)
done (took 28.679601131 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080459099 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070660676 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074116404 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084686173 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074327215 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080003541 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068622891 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077146589 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073892231 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074724707 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076171616 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069454535 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073193841 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069155291 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075110103 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069010092 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080814848 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073034435 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080863106 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080766155 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071296459 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074504141 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07593755 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079863253 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080329074 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079979825 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078451581 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074570291 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070556364 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071239775 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077997585 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085381119 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069273411 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080113666 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069026621 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068878811 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072915584 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068927618 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080707551 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078125892 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070792798 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078105703 seconds)
  done (took 4.782428747 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089288392 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09383244 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085974765 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062885212 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068028238 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066790035 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090327427 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061477661 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060390398 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089907239 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056976987 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060868981 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064672095 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055228415 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061299186 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057734499 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063142642 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05713859 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061139932 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061859901 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092790587 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054878879 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078833093 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06519914 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057268179 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062832316 seconds)
  done (took 3.428120799 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07576245 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.0864901 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090864029 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131924469 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109720916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080244604 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080403318 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096644324 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089959359 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068671392 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072413149 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093953504 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09139346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075382324 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069118321 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087950418 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085112668 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070257817 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075011162 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095643873 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088246588 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087156852 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097018956 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085117536 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068337268 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070817403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072865461 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082521566 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073135686 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078022861 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072624381 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072506707 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070826509 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080631427 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07248428 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070506113 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093714992 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078941668 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080199975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069365488 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076719366 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069803691 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093467743 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126382718 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068295569 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075823585 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072911359 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078466509 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068879925 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089965345 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080349976 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06878566 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071843741 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068042242 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068918869 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082591732 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07115324 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071473238 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078370136 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074687015 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093256306 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073663332 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085120362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068453081 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076717727 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067834259 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069365373 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068214923 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097298058 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070384148 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112213617 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069902523 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069758928 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078373054 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076814421 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074975479 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069337799 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085029188 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079588427 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072755423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078145253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072117696 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071868303 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093155607 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071226027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070487646 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069959654 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074988564 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071927704 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071910738 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082196402 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068226991 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071821243 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086671011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068736451 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070830564 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07510115 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073534687 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068816473 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080023151 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074440163 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069804462 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078760535 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069086221 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071815661 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082119278 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075640592 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068129083 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073000032 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074549699 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069741394 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070574135 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071615571 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070674401 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077773473 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075899238 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073326929 seconds)
  done (took 10.799852809 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166243767 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158964572 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072178829 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151575067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078172014 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080885187 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154834652 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096481407 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.080308648 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.0705304 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069865153 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111988024 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1076096 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117327243 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080728206 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069178381 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086435487 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116391767 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154007471 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14917029 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086833647 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078483953 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071223312 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070410056 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07223411 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079866189 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086960637 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07843274 seconds)
  done (took 4.474459491 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082418102 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107214303 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076247191 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092655459 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092106239 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069459655 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072212219 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071068498 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082809549 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079801351 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068781334 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074823605 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075550603 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072575075 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070640518 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076126703 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076552691 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070540617 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073342201 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074618754 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079969114 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094140898 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072881175 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06865835 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074482771 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068589398 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065497037 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086392843 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069976849 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097231573 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067399691 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074122562 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083833424 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070209499 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069593237 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069691296 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06902719 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06958991 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070877637 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067526972 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068030664 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058785424 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068004721 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080827228 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076511253 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057479 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074256952 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074738161 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074153905 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06647832 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072444058 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071927122 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071732634 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076536172 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072862007 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074194111 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070415644 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075726294 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078252514 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068755935 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066447529 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067491763 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073821407 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066835861 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077781391 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073881266 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067638617 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069155963 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071071926 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079769359 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069566428 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073815658 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066987437 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071064445 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073965979 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071114522 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070448186 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068278513 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068903423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069346188 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056904343 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068893082 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054449037 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072050159 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067344472 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067973239 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069108704 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074058143 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081893852 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070184882 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075302553 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069994875 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068288624 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071989934 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062125802 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071904881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085017172 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084770065 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069088388 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067757705 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08336868 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073980348 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068193083 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057081684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074212619 seconds)
  done (took 9.328059839 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092328874 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070917334 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085912694 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092589333 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088735269 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077082161 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079224837 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070595441 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084844211 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075450902 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078632279 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069743703 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079507716 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07916221 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071185064 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079561936 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073468949 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086214883 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083908048 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069565111 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077405591 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082684147 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092338031 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083821713 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082861719 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083719026 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092537468 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079180079 seconds)
  done (took 3.939536659 seconds)
done (took 38.387372194 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.727040409 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.890125535 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.712387361 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.078631975 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.979856991 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.738233415 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.898746631 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.70593813 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.820800975 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.754122064 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.915844941 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.877550107 seconds)
done (took 64.745598373 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.775701615 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.844658891 seconds)
    (2/2) benchmarking "String"...
    done (took 1.951129153 seconds)
  done (took 5.44154856 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.932107843 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.26653568 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.956134267 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.707687957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.714754508 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.048870421 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.524692175 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.228680727 seconds)
  done (took 30.095788135 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.833877174 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.932200202 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.380659861 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.411448308 seconds)
  done (took 15.259734831 seconds)
done (took 62.239874029 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.71321416 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.763673746 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.726469726 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.693818525 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769927635 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.722407498 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.146830681 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.781569855 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.705445596 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.696320265 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.707907877 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.131223058 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.725331786 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.060260724 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.708637422 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.713645344 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.758084356 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.173144946 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.865706179 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.729009104 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.725008596 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.77305146 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.709979162 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.722089639 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.744929629 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.711239571 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.09263856 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.72502517 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.539389999 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.71540635 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.767613836 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.765010703 seconds)
  done (took 201.929628935 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.711286418 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.554528696 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.628687756 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.740105299 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.068271954 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.893787171 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.834633683 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.148935045 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.717600767 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.738550428 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.90106227 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.712902333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.923695205 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.658625836 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.742113783 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.719098207 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.874797187 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.930862161 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.747311555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.885124234 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.716065655 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.715000069 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.659034657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.883457454 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.749938503 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.716046137 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.73023161 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.746819465 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.906155016 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.841483054 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.749675269 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.744860291 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908579879 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.589094436 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.720747211 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.73943612 seconds)
  done (took 166.900146822 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.097519532 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.714513606 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.711367524 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.713099428 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.712683364 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.719363497 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.713381398 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.84160526 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836039278 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.314360201 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.530615849 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.768894557 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513674029 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.712373479 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781531549 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.727007976 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.717592666 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.729117502 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.742070709 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712916177 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714111235 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839215536 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.725954296 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.825449198 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.723321889 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.715493125 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72070199 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.091190652 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.714227796 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.713368109 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720387356 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.953937419 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.715968404 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.715259604 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.558783254 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.914123873 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80107029 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.718981484 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720226786 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.71557472 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.932399762 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714519104 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.717077875 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.719105288 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.715541993 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.715208137 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.841620257 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715857093 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19823576 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.85546706 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.718569765 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717273003 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.372387129 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.314609116 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.71476897 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.715608295 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.718645025 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.716028006 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.714217063 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.721626213 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.413020888 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.788176495 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.719853332 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.720006558 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722671146 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.718124996 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.81808214 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.716681161 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.292688219 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.773225061 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.945072917 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835857297 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.719122997 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782941137 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808617684 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.716519046 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.717464024 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.716870255 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.717809261 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.795625344 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.716334244 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.841483188 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724682869 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.718332941 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.767521803 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.786351258 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.71607106 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56994754 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.717960474 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.71743192 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.983804054 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784482901 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.716925692 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.717407385 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717379984 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.715418993 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.841905237 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837725166 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.446939385 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.718976568 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.585723965 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.721438649 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.859684195 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.720857944 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861152229 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.721979782 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799973638 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724192191 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.719582125 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.718824433 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751137745 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.720819693 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.779554364 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.723854795 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.092877135 seconds)
  done (took 396.442332067 seconds)
done (took 769.069894754 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.397557895 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.348221146 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.457118983 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.378277209 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.345477623 seconds)
  done (took 13.584247215 seconds)
done (took 15.239360828 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.807542348 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.812526787 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.74259444 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.808459631 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740267273 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808801109 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.793157359 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.745413134 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.777042014 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.746130042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.778741958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.74501479 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730914257 seconds)
  done (took 24.693132026 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.948376365 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.951086519 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.790951545 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95626045 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.767441222 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.948241681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891037448 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.870116847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.870910727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736712671 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734034963 seconds)
  done (took 22.123641737 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.955194374 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.961123232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.79857333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.969289274 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771265014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.953054979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.886563603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871763056 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873568694 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735684937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.735522144 seconds)
  done (took 22.169982886 seconds)
done (took 70.64407002 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.730362005 seconds)
  done (took 3.388425138 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.754662993 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.908646577 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.736714374 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.732899965 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.728584814 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.729515481 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.733210855 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.72804093 seconds)
  done (took 15.711444295 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.725410168 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.72604707 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.725856062 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.725488978 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.726249776 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.7259322 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.725440614 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.729235945 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.72927761 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.729883235 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.731018813 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.729243272 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.728816245 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.731021796 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.727731071 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.726827225 seconds)
  done (took 29.301431076 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.72814162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.726825595 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.726445493 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.72662143 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.727812749 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.727336705 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.727451599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.726089737 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.726279692 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.72680839 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.728810076 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.727053104 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.726874303 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.726067912 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.726974647 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.727898366 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.727911931 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.727180433 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.730687054 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.727431181 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.729602742 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.728344447 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.730876177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.732213265 seconds)
  done (took 43.130413421 seconds)
done (took 93.190729688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.627113531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.122114444 seconds)
  done (took 8.409646609 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.733474282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.730560011 seconds)
  done (took 5.164437245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.730790015 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.730970861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.730070217 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.729091348 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.730463535 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.731983104 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.731287751 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.730784488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.730234726 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.73030188 seconds)
  done (took 18.968164829 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.732261294 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.732061929 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.729377164 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.732076213 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.730588504 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.729101282 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.733255706 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.730142701 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.731951726 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.729100244 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.731667953 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.729435942 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.731623434 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.729155875 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.732167924 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.728580051 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.729277503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.729548664 seconds)
  done (took 32.811951778 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.732046655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.731545883 seconds)
  done (took 5.124664979 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.729646123 seconds)
    (2/7) benchmarking "second"...
    done (took 1.730811016 seconds)
    (3/7) benchmarking "month"...
    done (took 1.728539777 seconds)
    (4/7) benchmarking "year"...
    done (took 1.728908587 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.728254913 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.730309811 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.73059274 seconds)
  done (took 13.769114647 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.734995337 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.889876074 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.961454349 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.369377918 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.734408192 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.7361736 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.68880824 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.736123673 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.737783749 seconds)
  done (took 19.251678907 seconds)
done (took 105.159180271 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.523291644 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.727606156 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.068287299 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.780163073 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.749234671 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.068064554 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.760341284 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.037591772 seconds)
done (took 42.377164439 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.812430614 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.284853612 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.546626395 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.298871493 seconds)
  done (took 12.793227194 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.715996843 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.285211167 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.775198716 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388383581 seconds)
  done (took 19.85195297 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.09900787 seconds)
    (2/2) benchmarking "read"...
    done (took 2.085788142 seconds)
  done (took 5.855064492 seconds)
done (took 46.978031316 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73506278 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.736175247 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.734945202 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.733122449 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.734255157 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.733441499 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.732155036 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.734515025 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.735365853 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.734085507 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.734825568 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.735084452 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736730074 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732626757 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731875487 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735350125 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.73397542 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734737582 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733111423 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.732748237 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735450585 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.733795146 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.733198123 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.733335841 seconds)
  done (took 43.28585305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.736413494 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.733259141 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.736232172 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.736284153 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.734204851 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.736227096 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.736817489 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.733909147 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.737353412 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.735767303 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733476435 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.734551372 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.735895303 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.735407527 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738149533 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.732621316 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.739097975 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734976847 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73709752 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.735483477 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.738600552 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734282503 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.735258088 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737926233 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.73514184 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7373375 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.736826071 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.738130483 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738415274 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.736074435 seconds)
  done (took 53.749887047 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.744439531 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.745632714 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.73811151 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.738525306 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.739481719 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.739558218 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.739727788 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.738334476 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.738542767 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.74111397 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.738607497 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.738772743 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.74036077 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.738579854 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.738807284 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.739059996 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.738600808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.737684833 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.740216248 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.740266447 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.741022911 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.738082516 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.739279764 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.739805771 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.739056009 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.739468702 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.740463588 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.739252058 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.739448288 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.741156968 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.73952837 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.739560064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.740706353 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.739373798 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.739762226 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.74002081 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.744057204 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.748608073 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.740560985 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.741213493 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.740048173 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.740586872 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.740537264 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.741855518 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.74089533 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.740050202 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.741075036 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.741397998 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.74109483 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.740883698 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.740723507 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.740562992 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.741521506 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.740768125 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.740104716 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.741679058 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.741285918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.740801927 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.742033748 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.740875218 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.740502209 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.740193575 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.742051432 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.742753704 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.742147326 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.74229621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.743577433 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.741289239 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.7411679 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.743366584 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.741593919 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.742946628 seconds)
  done (took 126.997849445 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.740649122 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.740277004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.739643454 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.740112964 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739653453 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742176398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.739293787 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742291745 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739257751 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.741098648 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741769275 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.739714554 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739450267 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.742226647 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741886183 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.73847178 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.743547973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738718231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.740636538 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.743506171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7424231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.741680685 seconds)
  done (took 39.974541631 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743652524 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742369437 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.739508558 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741822782 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740833762 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743639295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.741988276 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742630531 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743878758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740043996 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741161515 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742932252 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740872095 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740206066 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740154612 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740874991 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743667419 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.741233377 seconds)
  done (took 33.024190934 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.740452879 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.741258392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.743727024 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.741325112 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.742395721 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.743617081 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740967815 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.74425987 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.744737869 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.742296432 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.743623189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744838895 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.74544917 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742448269 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744843302 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.741572646 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.743520463 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741284313 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744881327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741754357 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.741919538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744627737 seconds)
  done (took 40.019209748 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744911736 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744479693 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.74225626 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.743772581 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.742245776 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.743657842 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.74479117 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.741609417 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.744273194 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.745196212 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74177183 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.744270771 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.742757439 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743603025 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.741642927 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742087959 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.745224463 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.741672503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746012403 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.741773703 seconds)
  done (took 36.542677661 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747012472 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74532173 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746142942 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746312018 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746706752 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.746706579 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74695387 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.745947854 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.748166025 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.748550691 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747467524 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.747453755 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747582169 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746578577 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748615296 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747941514 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748041346 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748444519 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749353313 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747489616 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74805058 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747992101 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.748190742 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.748252914 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.748662996 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748850915 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748504854 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749332725 seconds)
  done (took 50.611550916 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748000964 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745889616 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.744566135 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.745029337 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.745383843 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.744897889 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.744816983 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.744023105 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.747894755 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.743412057 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.749098035 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.74762421 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.747373989 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.748092858 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748335165 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.748340501 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747231828 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.744193463 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745683507 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746120728 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.74739088 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748763551 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.748428576 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743827307 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74581416 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.750261907 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745709296 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.74604438 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749074949 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745993394 seconds)
  done (took 54.075986447 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.76660016 seconds)
    (2/2) benchmarking "in"...
    done (took 1.766594485 seconds)
  done (took 5.211643368 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.746418446 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747989209 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.748314675 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747334041 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.745687105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.749638452 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.750004203 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747030538 seconds)
  done (took 15.661451078 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.749462381 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.749386583 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.748881439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.748728503 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.749508314 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.749414149 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754475117 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.749727196 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.750426586 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.749115562 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.756757916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.757840795 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.752196758 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75017328 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.750607804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750898083 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.7494397 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.750750991 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.751315714 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.750113281 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.751630009 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751569995 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751948064 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.748284737 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.75086664 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.760076807 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.753902266 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.750052335 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.750423488 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.75497988 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.751518219 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.748245266 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.751470269 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.751747176 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.75144252 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.750658973 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75916758 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751956618 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.755759517 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753306185 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750808404 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.747342153 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.752324824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.752887223 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751557999 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.753849617 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.751232767 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.748097078 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.751802204 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.755700013 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.756911644 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751314212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.749254812 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755678549 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.753170231 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758156533 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.753556629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.755598163 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.761323842 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.761993331 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.763194516 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.758943264 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754509317 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.754229541 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759636676 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.776722823 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.756521565 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.75045849 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.750298416 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.752477346 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.759383319 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764881449 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.762464474 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.754132037 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754900062 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.753776493 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754133943 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752122395 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758163902 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.755744507 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.754536874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753551684 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762215875 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77338487 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.75336062 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.75456084 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.753363256 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.753820004 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.753571059 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763176806 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.754724879 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.755106968 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.754003516 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.753433666 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.755471547 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.755900365 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.754582083 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755544164 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.751284521 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.755479769 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754072004 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755696259 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.763220023 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.754174343 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755259802 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.760845914 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.754238451 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754127779 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.762358076 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.754666604 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75545673 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.755948768 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.761073352 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.753011553 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.757352566 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.762793043 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.756346984 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.757062439 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.756367588 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.756855991 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766445501 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.779644106 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.75521349 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.75638355 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.758795841 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.766949461 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757288149 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.758657225 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.755313538 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.752707096 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.752613676 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.756428744 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.75441395 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.757677045 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75746374 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.756405979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.755459146 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.755788993 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.757145249 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.757636643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.756195892 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.755938636 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.758460317 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.758445068 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.757878435 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.757448049 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.762372244 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.756377338 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.757265112 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.757746211 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.754654464 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75856695 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.758112611 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.758759104 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.757762095 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.757940672 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.757231529 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.757089861 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.755663452 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.757114961 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.756725191 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.757781464 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.760167056 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.759123291 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.761561894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.757045915 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.754148271 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.757340236 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.758157103 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.756860799 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.757995646 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.757575564 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.761620845 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.766035428 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.758518199 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.760116645 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.762400228 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758552124 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.759857106 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760092753 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.760553895 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.766042482 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.760075842 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.763671168 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.759218672 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75904886 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.758701401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.758949397 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.758049963 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759245668 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.76224289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.768531407 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770789342 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.766122163 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.759685561 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.761056256 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.759764288 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.762889438 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.762964854 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.760821281 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.759884251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.75910152 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759248159 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759950798 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.760524596 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.761187936 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.759511491 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.759539842 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.760954653 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.760745117 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759958722 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.760480936 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.760418085 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.756810495 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.76103312 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.760962716 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.759525669 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.757275946 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.759320482 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.761315178 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.760439622 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.762000084 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.768016161 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.757263493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762546265 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761629205 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.761649333 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.76068488 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.760306649 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76341649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.759980859 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767429244 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.760689262 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.762387602 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767596692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.760587547 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.761724553 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.764644084 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.761276687 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.760348681 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.76490453 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.768657522 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.760791868 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.763534971 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.762677318 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.760580413 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761300132 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.766968009 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.758981699 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.760185038 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.762956641 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.763675015 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.758273838 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.764177012 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.762862824 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.761503363 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.76423767 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.76311188 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.762480635 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.763142134 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.76404052 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.762593722 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.763983819 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764978105 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.770531638 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.76700556 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.763164212 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.766643361 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.76466187 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.765469021 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.764700642 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.763283011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.762513438 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.774031933 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.771981915 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769709724 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.764838846 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.763862942 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767961499 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.763530026 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.767379198 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764319004 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76407514 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.764209186 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.765049773 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.760921946 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76455215 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.765051315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764033861 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.76522167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.76754894 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.764257459 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.764544098 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.766452866 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.765769496 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.766051061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.765005235 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.76583243 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.76575575 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766955832 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.763453469 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.763764595 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.7698095 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764409052 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.767528367 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.764542373 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.767060551 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.764224305 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.766514773 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.765651774 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.767903084 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.773296476 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.767854652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.773177443 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.767226421 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.773065561 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.767577736 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.768501194 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.773747355 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.763217526 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.76546426 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.765736039 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.76753298 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771800613 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.765844903 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.766830468 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.770342539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766398818 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.767353096 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.766981978 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.767576963 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766123372 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.766658302 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.773958961 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.768424038 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.77133888 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768165997 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.76405191 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.76802768 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.767020486 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.766014582 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769743035 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.767454022 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.76703714 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.767543067 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.767739586 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.767328435 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.767238293 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.768635713 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.764923615 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.767772296 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.773633876 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.768854111 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772675519 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.769047915 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.776257968 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76847305 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773992722 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.76893252 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.768131502 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.769355509 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.767923481 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.769784108 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.766604951 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.76933913 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.767872516 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.769029335 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.772128551 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.768893713 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.770663936 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.771312934 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.769705188 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.768702833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777222391 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791532413 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.770175478 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772238881 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.766162121 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.770227043 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.773514526 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.770406681 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.76678354 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.770814652 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778064971 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.775959153 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.769301065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.77120606 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770936047 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769498646 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.768743795 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.769913482 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.770199759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.770646277 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.770418889 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.770161021 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.773460213 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7703358 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.770204812 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770087091 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.771086569 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.780143893 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.770670018 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.770785186 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770910319 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.770739285 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.77006136 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.769841321 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.772181343 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.772818437 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770968473 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.771456511 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776919324 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.777012255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.773160186 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.770809061 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.771220086 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.770197843 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.77120343 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.771840049 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.771568858 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.773059289 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.772618759 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.771954571 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.772589893 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.770814692 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.772046403 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.772141226 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.77107788 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775171269 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.777901819 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770661413 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.769799489 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.77096231 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771624802 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.770860793 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.772516207 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.780532691 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.77444674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.782420184 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.779983259 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.776864922 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.774307061 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.776094505 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.780019249 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.772414211 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.773004235 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.772678119 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.774084214 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.77275145 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.775414888 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772295397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.779010456 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.772711133 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.773679985 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779469107 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.77449206 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773495932 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.774580349 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.77676466 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.773468953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.769725093 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.772827501 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.772229443 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.779174297 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.774797547 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774400274 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77501344 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.771836664 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.775838604 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778235622 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774525359 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.774860649 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.771418033 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.773923226 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775697771 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774416314 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.773593877 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.773200774 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.774364965 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.776187934 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.780006942 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.77027912 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775427553 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.773785029 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.774987009 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776252786 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774047936 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.772053682 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.771695646 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.773467326 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775878055 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.775436563 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.776906228 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.773382821 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.774848635 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.775482854 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.77564118 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776973456 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.785567124 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.78277125 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.772044618 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.774655302 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.776162488 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.777240747 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.775739487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.776089054 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775788784 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.776094584 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.777090772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776936613 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.776197545 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.778248873 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790657071 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.775928267 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77592442 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.777045595 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.781322952 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.77460405 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.772757094 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.774916655 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.777807109 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.778991781 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.78426094 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.778384754 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782286699 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777152147 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.77710561 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.779739347 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.77905112 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.784702832 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.778526369 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777024522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.776709444 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.780323763 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.791797589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777010755 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787157827 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804272973 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.778449565 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.777062372 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.778292834 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775822688 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.777540126 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.77829908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.777109587 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.777248596 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.776518805 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.778018052 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.77788479 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783659843 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.778205625 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.77677438 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.776504682 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.776422165 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.779472253 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.774779965 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.778085618 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.777589334 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.777159869 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.779328825 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.779730501 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.777361676 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791732329 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.787821548 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.779050197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.778517511 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.774564752 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.782035829 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.781772184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786653312 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.786298829 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.780078345 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.779609022 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.781339401 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780133229 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.776086747 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.780468612 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.779840614 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.77894355 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.776613499 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.792349908 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78752501 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.783119166 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.77917432 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781324236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.779287123 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780369457 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779895655 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780526452 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.781332369 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.778900172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784390046 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.77942631 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.779398936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.782939736 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.787075453 seconds)
  done (took 1054.511211208 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.777642356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777775908 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77795883 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.776320902 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777392333 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778716079 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776950839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.776411876 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.777369598 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776247967 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.776938215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777940004 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.777046053 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.778803943 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777632184 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776521088 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777340837 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.778404927 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.778253053 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778395909 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77792617 seconds)
  done (took 39.037188535 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.781379651 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.777704178 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.778151511 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.783002239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777228272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.78258016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.778952827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781003367 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.782949073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779677339 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.781899535 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782633474 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.779975874 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.778542689 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779905531 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780816053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782551415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77932157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.781987926 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779087357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781743748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.7795735 seconds)
  done (took 40.881124024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.783462557 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.783008807 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.782487945 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.78035064 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.781870413 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.778254156 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.783046367 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.782167456 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.783572893 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.783397766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.782004818 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.783641009 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.788214155 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.787818328 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.782758981 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.782618654 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.926154683 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.782247002 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.783189891 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.78490782 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.778374168 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.787475573 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.779341426 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.778914995 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.781169956 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.784007805 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.78334309 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.783366818 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.784005693 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.784674011 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.788972552 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.784364212 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.783540019 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.786411096 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.782927395 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.78515391 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.790038911 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.784986028 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.781320652 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.784667256 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.794236191 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.804159914 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.786611481 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.790666717 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.782993271 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.783675069 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.786624109 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.794607202 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.782241038 seconds)
  done (took 89.300341614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.784144108 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.784901899 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.780764278 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.784462234 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.784833217 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.784062893 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.784717808 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784580571 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.78304693 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.782055092 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.7848977 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.779271731 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.779850608 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.783204424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.784416315 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77935381 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.780501837 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.780692144 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.780351567 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781703561 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.782126099 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.783082557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.783677384 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.780649659 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78347184 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.781213568 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.78143045 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.783983509 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.780334444 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.780486197 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.782115239 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784017797 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.784771271 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.781317804 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782468262 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.784021611 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.785142513 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.781650449 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785016502 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.7807923 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.783987171 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.785165282 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.784123178 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.784785366 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782623545 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.782186603 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.781661393 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.78236351 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.782803575 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.784050968 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.78426086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.782648513 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.785829657 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.782995946 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.783972461 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.784304286 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.783869681 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.781530465 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.785188022 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.784585759 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.782991379 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.7865761 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.783067883 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.784076257 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.785315889 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.782186728 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.782843922 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.78569334 seconds)
  done (took 122.963995474 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786740933 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.787802683 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78650474 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786756464 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787067046 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.785988094 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.786918118 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.788387309 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.785807868 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787262505 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787365898 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.787006755 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.788812312 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.786059605 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78670156 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787795616 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.788431455 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788595056 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.789249279 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787377458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.788210217 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.787920809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787357894 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788211865 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788227225 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.78823615 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788441745 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.786787831 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788564038 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788953068 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788020815 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.789480017 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.790118288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.788433557 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.790263836 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.789484353 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788109042 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788184291 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.788609091 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788437112 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.7886895 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788916152 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788872169 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.790252229 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788867993 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.788803651 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.788952604 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.789241275 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.787640054 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787198205 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.788102223 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788599969 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791522403 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788696407 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.789730253 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.788276784 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787605319 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789224347 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789473669 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.789117234 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788729362 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.78908402 seconds)
  done (took 112.588322121 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790562712 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789747908 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.785844114 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.786809503 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789058818 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786953298 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789662301 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.78661568 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.789964531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.788139391 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789353671 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787750358 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787984702 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788277977 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.787983827 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786736833 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787468104 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787471085 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788127512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786734502 seconds)
  done (took 37.478126535 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.786076627 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.791252756 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.786367283 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.787316735 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.789580001 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.786483889 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.789894527 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789500904 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786896551 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790110623 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789968526 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790362557 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788054461 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786700064 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.790853575 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.787324029 seconds)
  done (took 30.33344158 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.788464465 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.790921513 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.791765951 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.791202287 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.787925181 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.789422828 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.78947306 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.787644536 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.788260033 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.791359806 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.790381141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.789925166 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.792227174 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.792028221 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.788155493 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.790458252 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.788443444 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.789364961 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.791947974 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.792637089 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.787900644 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.788056476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.791743855 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792239919 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.788240786 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.789539614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.788323213 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.789701428 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.788712107 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.791481062 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.789362901 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.789380333 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.789160902 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.789263331 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.793568328 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.78975932 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.791225361 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.791812441 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.791920218 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.792900865 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.793221252 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.789626633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.792829878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.793212758 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.791326137 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.793144396 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.790110972 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.788663689 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.789672091 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.789902024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.793950731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.79605352 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.794009963 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.794448491 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.79318428 seconds)
  done (took 100.210118362 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792723682 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.793725823 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790050541 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.792848718 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793242975 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.791903455 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793164585 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.790720197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791968032 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.792850452 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.790756737 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.792262339 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791893698 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.795374576 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.791401684 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794217394 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.791163908 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.791404527 seconds)
  done (took 33.983637427 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.792263921 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792750558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.793589193 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790615737 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.793002543 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794762881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790631354 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.793805053 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793951622 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.792237319 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791210299 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.795537978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794241754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.794399387 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792888183 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79258082 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.794097624 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795593699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.792050348 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792838594 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.795405917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795297927 seconds)
  done (took 41.177016577 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.792846194 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.795751009 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.809896555 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.816645223 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.817664043 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.831209258 seconds)
  done (took 12.586387505 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792876577 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794689717 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793298079 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794590181 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796308877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794265241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794274206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794103997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795618441 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793841996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793655275 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796103765 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797652843 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794083564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797423472 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795010364 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79362713 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794120837 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793143236 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797865081 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794528285 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796277896 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792800175 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794314814 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793221644 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794528317 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797043652 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794969057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793258955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7970878 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797619857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794965651 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797713633 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794153126 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797089694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796742534 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793706503 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79713067 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797437694 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794424511 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797730938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797913788 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794897764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79591627 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798078107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795278908 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794639929 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795773995 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796044252 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797092565 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797737058 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79427829 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797718001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797902163 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799561165 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799268292 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795939394 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795865839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79791547 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795190657 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796147268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798736086 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795895052 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796903489 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799452957 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795963886 seconds)
  done (took 120.249581907 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795734394 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795317653 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797895457 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796844178 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79618556 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797230683 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79662076 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796493718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79665453 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796882549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801059885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796870847 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796910454 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798684213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796411683 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797471305 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795922112 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795451283 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797610258 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800009959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79653868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797385511 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79705441 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79743138 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798870302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800815336 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797300653 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799031211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796703085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799699734 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79952403 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798170039 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798050642 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797244205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798745231 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798351726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797917949 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798426364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798667366 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80192073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798780125 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801550991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798807363 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799894227 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798567494 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798278054 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799479205 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799009903 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800091042 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798729145 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797582542 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80014832 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799368833 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798862081 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799591011 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799294558 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800164029 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800558358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800044709 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801379347 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799206492 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800019223 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803477503 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798555447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800507613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801212457 seconds)
  done (took 120.432867797 seconds)
done (took 2456.551997067 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.855659387 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.839455325 seconds)
  done (took 15.424862994 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.964612003 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.91591141 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.801645487 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.840552201 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.801148146 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.816223876 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.822775844 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.802220421 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.801320426 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.801843885 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.8013558 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.98726326 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.802905374 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.802078615 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.801173155 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.896527294 seconds)
  done (took 51.195166525 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.806019154 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.80629007 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.817143043 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.808760623 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.806041596 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.818628669 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.840528987 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.806909655 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.847259271 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.820087611 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.879251207 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.816720556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.804601249 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.857930131 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.816964862 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.819711696 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.896617612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.881910522 seconds)
  done (took 34.682201873 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882896048 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.805560515 seconds)
  done (took 10.42923618 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.825819858 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.863699841 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.826393035 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.813586326 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.818734578 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.815072789 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.83467887 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.844980901 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.805242835 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.834099466 seconds)
  done (took 70.018630351 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.809902325 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.806229118 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.804000072 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.804770169 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.797088937 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.801368342 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.803325835 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.79825351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.468392294 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.840427933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.813260292 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.812093834 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.807260524 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.808616649 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.805205763 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.830417042 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.931507471 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.804201473 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.803661137 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.812225259 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.806753526 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.881988376 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.82133751 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.810855315 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.837028534 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.475368223 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.814797459 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.814008458 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.929850592 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806714811 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.808169741 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.808302453 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.810332529 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.189478829 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.087230047 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.807452272 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.820386402 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.816669847 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.806090745 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.938146185 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.809586473 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.81410775 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.735214655 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.065878646 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.918272357 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.856929409 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.163124239 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.825529504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.809124396 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838381428 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.813130742 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.809368813 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.82259727 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.32899398 seconds)
  done (took 129.203076372 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.804293547 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.066303065 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960936274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.806257224 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092576836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014861335 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806466691 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855624868 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805818744 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036214242 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.026277584 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9160636 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.806626399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.803078666 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80507838 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.803288044 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967299365 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.88154294 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80628903 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.804177984 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836874438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051856207 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.934225263 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.807094725 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.829754423 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019442994 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.93309969 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.915768004 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.264048727 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.803963962 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872393607 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.806073773 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.806973411 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.804368196 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963462503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.905721921 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896067194 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.806873138 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806347555 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.806149075 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.482695729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003341372 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90468065 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.949721343 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061539132 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013642631 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.596855862 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.803965977 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.544704075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971829784 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.04231459 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.039582016 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.932564742 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.809521183 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.083323488 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.805130619 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.80658552 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.043839007 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049399536 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.911340874 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808074409 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.80459171 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805824104 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.055380648 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.809091952 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.904148629 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808777269 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806108481 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.903361749 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.911458403 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.056675603 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022424191 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841172573 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.109040445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.273729291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.057371324 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.875623676 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040838428 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.809870423 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805854149 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896099835 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.652004302 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.008745398 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058808243 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063872721 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845753047 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.534217294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.806582602 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.036526095 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032306166 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063557098 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052008053 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.963141394 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.127950441 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.808476731 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.807790073 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.038771055 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948937764 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811234317 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.17048982 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044515711 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.380918233 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840581361 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120534616 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943581875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.810651777 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.452287701 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.807509824 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03661334 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.853804396 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.811074462 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808378677 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030062202 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.786573021 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809523732 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.509682588 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.873599802 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.811638695 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04530879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.811813689 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076866679 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813371312 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052342205 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.865986275 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846059296 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.984534128 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.053649114 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.812646141 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068414933 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058463019 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.930093325 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084165143 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.733622759 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.809514742 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101670908 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.812710521 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.809576782 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.984440528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.811608484 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039589232 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.814173502 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099615197 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837482482 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967748745 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.81379255 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.071335741 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.848845521 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865630948 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.812488977 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946825475 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814865299 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.831102129 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.966367705 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.813261477 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.809553602 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.338787697 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.81120764 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970720283 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04768876 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839160455 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887762561 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.488636112 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.810764463 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898950858 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841268882 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.155064857 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.812044635 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.028285641 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.814629927 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.348263354 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.812591745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055907164 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047813539 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815143706 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.812607851 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.719649134 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.811032869 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811236696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.974621634 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.639029188 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.812467665 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020122611 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816365151 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94608406 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.816332571 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.886336288 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.167908802 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.812352119 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.813594314 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.812480699 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.812508357 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.815413257 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.024914777 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.845962981 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.346036757 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.954780694 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087219115 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.134376602 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.065449927 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.862120672 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817941149 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063715321 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.817377375 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.880250311 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.814708587 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838608584 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053162567 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815458944 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.03066549 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098709205 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.745657775 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865718088 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.815288096 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.813208266 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.730654278 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.96857453 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910128307 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.818475003 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.815397766 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934066402 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944712141 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032241511 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.815553489 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.043802751 seconds)
  done (took 890.162468081 seconds)
done (took 1202.845177192 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.814635652 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.814330581 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.805204733 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.816809978 seconds)
  done (took 28.999807953 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.823106389 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.820024028 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.823358121 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.821496957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.823138558 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.821294476 seconds)
  done (took 12.680929488 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.859020214 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.81403469 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.817916442 seconds)
  done (took 21.23945218 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.89043037 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206824364 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.947526416 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.248560765 seconds)
  done (took 10.042869505 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.824233388 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.823445447 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.823934679 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.824982197 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.823979263 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.826517557 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.823634032 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.825580537 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.826649962 seconds)
  done (took 18.17324064 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.209041164 seconds)
done (took 97.095067499 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.113059871 seconds)
    (2/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.055275458 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.000403461 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 4.774930611 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.813696681 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.92272936 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.006692737 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.860352632 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.244029087 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.821364813 seconds)
    (11/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.93786964 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.931710817 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.859040841 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.815981245 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.278932235 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.847228854 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.842003099 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.458342936 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.891454848 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.701777232 seconds)
    (21/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.987159978 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.844436243 seconds)
    (23/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.946659584 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.085295467 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.120453228 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.273098784 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.821518059 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.007884673 seconds)
    (29/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.876367264 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.294998253 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.809161195 seconds)
    (32/309) benchmarking ("sort", Float64, false)...
    done (took 5.690538858 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.145569128 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.639134014 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.822808091 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.985694414 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.109178406 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.820400358 seconds)
    (39/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.377152999 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.84356034 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.922159695 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.948968671 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.946989859 seconds)
    (44/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.823076088 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.319755365 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.840852968 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.384545006 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.156809922 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.801131622 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.080047014 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.810630787 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.042316346 seconds)
    (53/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.303897746 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.825546957 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.126873179 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.986520772 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.093142896 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.902329884 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.807180246 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.907668387 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.137508023 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.305806991 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.883271306 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.190891062 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.874270133 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.829592734 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.903148666 seconds)
    (68/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.954931194 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.724919624 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.825486229 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.904166316 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.89755396 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.832199663 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.148566718 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.469097769 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.73527108 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.919214164 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.976741744 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.871446368 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.925883749 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.028093242 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.794922608 seconds)
    (83/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.854093161 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.84742147 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.197061062 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.542576779 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.927558374 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.810372858 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.024839627 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.433051089 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.164259461 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.348755246 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.846866023 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.806394066 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.184256027 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.080408168 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.157051858 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.887742391 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.919801841 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.126568159 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.918028053 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.437164369 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.845788606 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.849737987 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.945716165 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.831688128 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.11061503 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.855398883 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.908049993 seconds)
    (110/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.97673525 seconds)
    (111/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.29213193 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.813407981 seconds)
    (113/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.303827739 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.041562088 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.505356258 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.904880728 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.821275967 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.035595003 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.901878011 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.808147532 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.834115262 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.649898547 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.892843543 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.439595871 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.168143406 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.058741593 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.277393871 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.84552065 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.351815409 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.871613787 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.100097587 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.383223754 seconds)
    (133/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.828987761 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.214502159 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.339642734 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.965304575 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.656863558 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.385437384 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.786060773 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.091807472 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.958832662 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.986424395 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.816574965 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.949478508 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.825326276 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.737676844 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.917418954 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.21693976 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.622716486 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.262907374 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.935569921 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.889959746 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.702609454 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.489126444 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.917222912 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.063700041 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.853896688 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.098495271 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.12294415 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.169341114 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.881210083 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.823123368 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.636227888 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32520253 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.848741435 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.84491574 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.953440042 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.065891785 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.854761099 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.113036544 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.815609191 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.163296495 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.553664355 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.871611335 seconds)
    (175/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.132069681 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.974471075 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.861004998 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.965684251 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.172956123 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.128275144 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.814990784 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.910977198 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.072165286 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.82969301 seconds)
    (185/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.083119778 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.846485636 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.011272584 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.815463258 seconds)
    (189/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.970529754 seconds)
    (190/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.979276346 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.857086261 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.020738462 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.006087743 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.915692546 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.772131985 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.741959835 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.195865931 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.868686516 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.812590328 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.387687686 seconds)
    (201/309) benchmarking ("sort", BigInt, false)...
    done (took 6.835671444 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.932893497 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.994351689 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.971481113 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.890368993 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.913324659 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.911986849 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103726195 seconds)
    (209/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.137602213 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.17150018 seconds)
    (211/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.846363921 seconds)
    (212/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.035404868 seconds)
    (213/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.190146643 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.050810708 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.215360792 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.85668438 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.966947488 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.632544078 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.044153822 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.02998775 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.833343297 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.315574214 seconds)
    (223/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.189230801 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.030688857 seconds)
    (225/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.818983198 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.128954889 seconds)
    (227/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.963807999 seconds)
    (228/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.370826105 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.835775707 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.921736123 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.937877937 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.829630483 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.989328373 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.8576511 seconds)
    (235/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.07845936 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.322308848 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.8798337 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.023124513 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.831706575 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.939370261 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.821703626 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.935765873 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.917883059 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.832598959 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.947209694 seconds)
    (246/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.009842928 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.197126556 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.09874177 seconds)
    (249/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.959986355 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.13426483 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.903803119 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.815840758 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.204498806 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.538777895 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.204757616 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.125139767 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.135939368 seconds)
    (258/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.007589124 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.927511997 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.835485563 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.906260037 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.155262608 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.838235965 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.86187446 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.90684575 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.032660857 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.809255304 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.818897744 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.946589147 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.243647601 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.050254345 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.202605448 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.915525767 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.314459045 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.422077196 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.093656405 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.514256777 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.913950964 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.024055155 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.219679454 seconds)
    (281/309) benchmarking ("sort", Float32, false)...
    done (took 5.553890093 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.517116434 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.027878186 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.916993079 seconds)
    (285/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.119464646 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.92272065 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851391616 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.003131359 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.979146393 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.019162278 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.592610191 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.939464565 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.165688599 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.969159317 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.855351376 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.865790791 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.932910824 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.906542485 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.199616853 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.95113095 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.173108761 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.858114549 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.832858299 seconds)
    (304/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.580159537 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.947478805 seconds)
    (306/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.259098418 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.822325477 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.919307007 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.851206384 seconds)
  done (took 995.569057882 seconds)
done (took 997.371302595 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.86629383 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860015009 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.844433608 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.866207176 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.955747384 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.877639582 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.854323636 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.84613966 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.89301575 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.894740591 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.844650372 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.875027978 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.847197271 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.847337245 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.844942117 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860289096 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.157162845 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.875364077 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.862996409 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.854830853 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.862674042 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.844779094 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.895393924 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.87592976 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.849658419 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.847776597 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.850474072 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.865355672 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.958094092 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.849966699 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.848034717 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.857830023 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.157791021 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.873272139 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.840855835 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.86607963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.857822302 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.856049171 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.850622776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.87886556 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.25392263 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.885584354 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.85088545 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.84719851 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.849265105 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.850491383 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.848515355 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.854607419 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860682159 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862141994 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.247611703 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.900536866 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.850931309 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.84828372 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.858557777 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.848266401 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.852327371 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863442615 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.868359555 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86388768 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.148930169 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.88188645 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.849770725 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86457905 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.855986344 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.283770504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.880452854 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.853183673 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.254079928 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.892032367 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.284907436 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.893836354 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.848150991 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.864944281 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.881518344 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.160166488 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.871870972 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.848074849 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.858017451 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.848323907 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.858470834 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861883376 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.854079084 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.850543279 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862477129 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.88103031 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.859707319 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.850713282 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.858662551 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.870287261 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.857826098 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.861700164 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.851944357 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.845530657 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.860306899 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.852840391 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.852885313 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.852816053 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.854276824 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.860433242 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.254438985 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903199986 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.846635142 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.84929941 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.848946206 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.865356757 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.25352737 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.886871253 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.872159264 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.897930161 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.851186802 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.155320801 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.881728127 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866555356 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.859711487 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.853008769 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.845383453 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.153194293 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.281232239 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.904933958 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.852399731 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.849942666 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867964917 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.852078876 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.848400763 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.613846973 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.880942538 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.867821356 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.972815726 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.86253886 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.884193386 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.850483019 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.854682691 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.895092138 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868892179 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.882735524 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.855981641 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867593925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.86813736 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.84797256 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.862740174 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.862905174 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.853480296 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.858750494 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.845791395 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.887144161 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866144264 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866722086 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.874202107 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.974472363 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.851132376 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.154729435 seconds)
done (took 291.271356374 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.922532868 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.843205277 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.94895106 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.848612345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.932058711 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.937096447 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.847569666 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.847074152 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.847039186 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2224388 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.848398424 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.848595104 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.8498128 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.846490627 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.933178347 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.850879395 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.847337135 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.185234552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.849816149 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.922747091 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.851494373 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.847390416 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.851733496 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.222991609 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.842052703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.842504655 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.922834576 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.851093838 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.189595764 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.849300396 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.849631973 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.188278414 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.942869469 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.869523408 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.860940613 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.858310655 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.934525926 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.855165917 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.934363688 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.933249062 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.951449285 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.891947488 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.842591009 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.848866863 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.855143896 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.85351521 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.848310496 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.880014688 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.85247953 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.848276365 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.18817204 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.862524017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.84920703 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.850238764 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.848820197 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.884779738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.849888557 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.852869168 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.943472666 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.854309281 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.914812323 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.227157835 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.225859537 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.851779299 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.843936541 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.850361822 seconds)
  done (took 183.024780114 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.919453679 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.927673665 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.92025371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.855850993 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.902247515 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.921528199 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.856472779 seconds)
  done (took 15.07982829 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.860831007 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.853181132 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906861069 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907261766 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.853000672 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.004526168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8550696 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.863575314 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.851015752 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.919491268 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.855238199 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.853036764 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.859926997 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.847162596 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.907575377 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.866281973 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.96914413 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.853671092 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.854728397 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.003810151 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.85138289 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.860256033 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.908319519 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.866118624 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.854558794 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.860185513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.439121156 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.856735885 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850836683 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.853796672 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.851443293 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.897088808 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.855185568 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.846677221 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.851531776 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.968463259 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.855669144 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.853408777 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.855161866 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.848363585 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.855542869 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.854865431 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.855540333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.85170879 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.8561077 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.880000004 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.854856556 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.855734116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.855498999 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.856237291 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.916236702 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.855679416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.853486089 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.852926818 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.924223828 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.862767409 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.857959428 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.852337374 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.85593116 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852675847 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.007385581 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.910658829 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.855651391 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.911920789 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857852478 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.857248572 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.85755311 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.857210552 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.952199257 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.862339381 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.910681217 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.853563894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.04162902 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.879461798 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.857491986 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.858207859 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.859666059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.860942746 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.854544086 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.863101004 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.854327582 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.858318844 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.862392878 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.854872751 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.854452367 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.968242357 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.965344482 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.854987824 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.868625377 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.863700157 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.855860885 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.92003735 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.858001434 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.855340828 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.922056255 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.973278124 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.912578864 seconds)
  done (took 204.543296182 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.860820219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.864664645 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.859096917 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.875830949 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.856647729 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.859122524 seconds)
  done (took 12.958566762 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.859442274 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.859289323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.860828241 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.859637896 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.858223715 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.859828388 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.859136686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.860291136 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.86266149 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.857391107 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.858637624 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.857968804 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.85767722 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.856890603 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.858701366 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.857490047 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.858113141 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.85407607 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.855901227 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857726769 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.006588747 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.857247678 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857502164 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.858974076 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.862128997 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.85685343 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864993782 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.857847756 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.857525203 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.865790461 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.862054136 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.858384551 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.858163771 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.863580636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.861924436 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.85790678 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862575512 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.858592763 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.856259542 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.859448466 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.860149163 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858483659 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.857590937 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.858621577 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.860690543 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.864896245 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.863220822 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.866539564 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.861123772 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.860547536 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.859728817 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.858371252 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.860507156 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.860587781 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.860962985 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865519716 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.865154912 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.858281825 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.859025813 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.861128118 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.860655134 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.860291553 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860901381 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.863069038 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.865941504 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.860321789 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.860660972 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863551963 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858763137 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.860251897 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.859698891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.857013974 seconds)
  done (took 136.851513117 seconds)
done (took 554.250108701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.059959902 seconds)
  done (took 8.843312524 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.858299838 seconds)
  done (took 8.684444796 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.186452892 seconds)
  done (took 9.989364308 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.885516533 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.86216803 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.864877741 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.855084543 seconds)
  done (took 29.274009942 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.036978806 seconds)
  done (took 8.823508635 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.875866509 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.854683514 seconds)
  done (took 15.550632338 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.941345433 seconds)
  done (took 8.727108706 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.130430282 seconds)
  done (took 8.972179038 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.877525819 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.888325847 seconds)
  done (took 15.564753725 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.837304671 seconds)
  done (took 8.623143247 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.53495967 seconds)
  done (took 11.420305944 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.880052203 seconds)
  done (took 8.773899333 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.918190213 seconds)
  done (took 8.703954917 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.875890675 seconds)
  done (took 8.662981702 seconds)
done (took 162.39666482 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.857396399 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.856982747 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.859587129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.857140336 seconds)
  done (took 29.216194975 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.893849747 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.893688503 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.89657142 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.906384436 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.898931036 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.91081358 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.887879444 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.887911393 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.904170605 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.896366957 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.895845912 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.896425105 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.894180082 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.887733967 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.897047625 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.89574507 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.905543057 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.896972617 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.888127356 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.897932306 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.862104642 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.907231267 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.898610398 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.861646051 seconds)
  done (took 47.249433779 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.060174317 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.934525343 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.016800403 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.913748087 seconds)
  done (took 9.714497902 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.915656781 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.917687419 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.92728874 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.967014413 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.988963729 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.924849247 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.889729227 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.883488724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.869972449 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.916293136 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.991565041 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.91182935 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.00692236 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.863576237 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.048434868 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.862468139 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.86315187 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.914149316 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.966983015 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.98039461 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.86398337 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.913972902 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.91971689 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.912441391 seconds)
  done (took 48.008952832 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.861341992 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.870518908 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.868007116 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.862286608 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.862040108 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.86273803 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.87072672 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864204262 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.883886155 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.863214822 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.861812011 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864289242 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.862226339 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.864374832 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.862267062 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.875147919 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.87520579 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.862863959 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.866267042 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.868301721 seconds)
  done (took 39.120840727 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.857416742 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.711752997 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.210995743 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.113408598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.859397553 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.860039335 seconds)
  done (took 31.403514622 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.879002106 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.871116227 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.864063426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.92133297 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.001836024 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.87307393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.865019051 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.875837684 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.911981872 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929118881 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.888388241 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.893959773 seconds)
  done (took 24.565937135 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.862242814 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.870260259 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.86232579 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.884540415 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876504382 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.873108201 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.872964348 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.857783278 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.880246869 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.884376929 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.873353487 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.880094509 seconds)
  done (took 44.271763719 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951856505 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.752243705 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.930212664 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590534216 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335351267 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074384978 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393389819 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.206514154 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.864985277 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135193369 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841890644 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10668817 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115995124 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862289579 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.952442704 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.360984407 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162934709 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099555843 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894364526 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599721089 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987864813 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358166472 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.643412202 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994335636 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075968784 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.996037656 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.123921483 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.821447982 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002507101 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903700789 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872846465 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86376371 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138666847 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243450625 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965343029 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875312373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.520465113 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.588994384 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.853730818 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.606541554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82709353 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.996887953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872736111 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864964678 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799432533 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356416129 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204294201 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.869780876 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.575791211 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865414944 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876041057 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952824273 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.868852472 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.685800936 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818558139 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144315263 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.861665269 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869945771 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438325801 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946622015 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475338407 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.802752028 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.060505445 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703976211 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.346459308 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.018229985 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.869698794 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869221842 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800138292 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.606981632 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991922487 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011566849 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.885380091 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514536662 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197295636 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.904720682 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949447132 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165006013 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.644681264 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.802327156 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095408926 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822843252 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80339395 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.726104093 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802709252 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144019813 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908100605 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.517573544 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911656771 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.208169627 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878807875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882827696 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873795479 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09148617 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.749538953 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868062058 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.626007559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159789803 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888739793 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20440272 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800525872 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.869920215 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123896563 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.077735674 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.965631578 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.462175948 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027753482 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86787455 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.959023383 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.650249679 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98033926 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.150482552 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929211928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94695354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002107409 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.816463597 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179911855 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897143546 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.046535879 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.859263401 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133396908 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205961354 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164008236 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933418739 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877719953 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86860764 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.61447705 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497016477 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.13641308 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.871668814 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.239062422 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982391059 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.869408219 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804836834 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.466625741 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873570243 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.987709739 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099099671 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.671844073 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247781638 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80508988 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016863402 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.986066165 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.094686492 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.5327012 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.955946364 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128901046 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21938932 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.072934103 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984348348 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88904326 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96108789 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891854211 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.147188081 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227391512 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.874532145 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.874745287 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615390567 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946183509 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872296387 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.875396439 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672737242 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166485507 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899428532 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874990273 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.760033332 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.88544866 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938256106 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877047765 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883531517 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.436397811 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641641745 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.883078987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.470308781 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098627991 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880859472 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.611684791 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060214247 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.954622626 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158862209 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935519705 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.807124553 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.583659499 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.565740952 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873157534 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808468224 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.871043363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88237694 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885150595 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.255220067 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162030516 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918747783 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.645769649 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.991017479 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885009549 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.878606793 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87310763 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.397547603 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.96770341 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366453528 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.986328707 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010666145 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.887341719 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808718172 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877422274 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877901325 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.873923682 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.830744588 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927089128 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.614496028 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331093697 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129618278 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.566501179 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892290095 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.631387466 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.005491794 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.915882153 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618064349 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811759542 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.973405663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95566211 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.885408031 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.618260173 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.660455669 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442803993 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203072778 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199082727 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331982015 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.208132859 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.244726271 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215152023 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110774685 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.405309775 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935520925 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222044992 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818836298 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969468315 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.532346827 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234526108 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89159156 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10495243 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27091776 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.702920799 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036723319 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087283655 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910859885 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.649510563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906020433 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.080320892 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017254002 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.697951134 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096176966 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215207854 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.638479229 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.983914399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.87396456 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.592998353 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963290558 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.586785559 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.237913997 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38065019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864600414 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368616412 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880850941 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322144261 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240251854 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.173850531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.959183447 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813269743 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887261059 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888723356 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.876982106 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.853096739 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.738983647 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.140626697 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888183493 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113879383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.007605794 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26375366 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.784334356 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.88454649 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878422239 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185240393 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.539195243 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115449869 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.190866409 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.449704476 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883504335 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.813489869 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81417732 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.576504313 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887780168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.853541737 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111111734 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.065610862 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832340854 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252523818 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189386066 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132868623 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.89377066 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162509496 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15551347 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619755417 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90773181 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.979828886 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.617762277 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.996933027 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.148311017 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115749682 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679533422 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111082108 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.944587697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.700675311 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878108769 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094297226 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.148988166 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.854102964 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133011906 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.60439885 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.886736626 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556700394 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945320756 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.068064336 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.063010962 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.07489351 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891618799 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965646587 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890892825 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.88948311 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.891097242 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927806901 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047565678 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.027130597 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.896401427 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970087996 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.047428176 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.755167392 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.894246456 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161104394 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260876618 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212347373 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950038625 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883825677 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880924377 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815297668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018807433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.33073607 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156141521 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.013523698 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.192372922 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909235925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.641297472 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.552946059 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207566632 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158191909 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.776432321 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884187928 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994150497 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.151293798 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894656289 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.094245322 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115804327 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203272915 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356758298 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.103453432 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332458765 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158012372 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.251884587 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883906743 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476705265 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.889925356 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.654723587 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925659145 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959837577 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160358407 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894177703 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262952667 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907090131 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.081662661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.400939059 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700608901 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243426285 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86979344 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943380292 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16146295 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270187774 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194403367 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957235763 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895073567 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.601210126 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022784068 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.831559831 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171140731 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885993322 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098001014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.595694274 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894691432 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162040212 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190869472 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.882883683 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.804746488 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920010882 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.895121242 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109679707 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154424696 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138233988 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895950579 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896308744 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.704948502 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162350826 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943148232 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819009154 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.890275722 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982358378 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133314466 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905443623 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.573276422 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.597968994 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183909235 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.806087794 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90779357 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34352823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33220182 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208779845 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.407963052 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122691087 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444892819 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.777643307 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269613729 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.891838476 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349662235 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275074052 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.89042674 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.465888971 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010156076 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.160528733 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242108099 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.897870969 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700720968 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.921033538 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11171829 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551767429 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828986224 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895738187 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.947385206 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88954125 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.017931519 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898728277 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.832051852 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80934747 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.715811614 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382978528 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.893466714 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.882316404 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.609325033 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.514967527 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006074139 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03153274 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896621115 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.610290039 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.183122758 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143547235 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.468761739 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.965506681 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.892888538 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888271091 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817205693 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.088760499 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.268925098 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190571099 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.309340414 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.008860455 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893580147 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.1054541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102735697 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.778773972 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034407073 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354990047 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011478941 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.659388284 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.575704681 seconds)
  done (took 1692.589349145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894706196 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.910224878 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.904334018 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.005704842 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953943299 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993509835 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.020666229 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918197016 seconds)
  done (took 57.422715845 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.889374096 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.147361278 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.898326102 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.889656316 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.956251656 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.890161708 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.08284072 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.902287847 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.9329814 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.898249449 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.892127773 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.902101994 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.255757484 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.917460543 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.890529579 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.925562845 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.92422338 seconds)
  done (took 75.083671243 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.889723234 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.099584008 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.929919368 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.915928302 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.86489882 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.906143515 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.946877865 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.947606943 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.895936149 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.124771691 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.235368107 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.902670753 seconds)
  done (took 90.482107572 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.907102538 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.896752203 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.897532683 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.89906975 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.898726232 seconds)
  done (took 11.32870524 seconds)
done (took 2202.256667759 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.140250948 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.118381657 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.134631523 seconds)
  done (took 6.076326614 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.045353765 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.092569902 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.214273689 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.217693268 seconds)
  done (took 10.399878046 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.189400214 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.266395431 seconds)
  done (took 6.281064979 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.268732273 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.916990616 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.296311273 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.895689188 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.899512328 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.89821279 seconds)
  done (took 22.524162206 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.900598218 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.904829685 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.901573063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.903103776 seconds)
  done (took 9.436524831 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.880937453 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.633438932 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.883340424 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.8960179 seconds)
  done (took 21.120360161 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.653257009 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.300510731 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.644012894 seconds)
  done (took 9.424830431 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.382755728 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.742715903 seconds)
  done (took 8.952574219 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.157896918 seconds)
  done (took 3.984939673 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.92896871 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.171515205 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.420764289 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.42244036 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.503334606 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.735046458 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.209261338 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.137921619 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.349063723 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.360032017 seconds)
  done (took 25.064564638 seconds)
done (took 138.708978433 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.279171819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.291260111 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.13198599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.244628066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.172368083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.13561546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.246741914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.227808799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.751368935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.741276523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.292601144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.164409368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.203859335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.28383626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.207553223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.145898346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.16233628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.305285655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.984565411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.183064598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.2720788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.87176562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.124731158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.891978291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.177727786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.088617838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.449675542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.902310537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.129737782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.464873643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.090626808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.336204011 seconds)
  done (took 171.785719135 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.647414399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.901500278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901922849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.900314513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.269937503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.901747879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.901634218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.900625065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.201871942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.187565834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.908949359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.293486792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912454582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.901227313 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.914058752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.901168788 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.409217478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.739190336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.918888168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.918219327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919158139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.149088454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.922011474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.201803263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.423026575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.923153121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887202089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.922758921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.924968295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.923517964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.923787763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.901797884 seconds)
  done (took 209.387252952 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879065966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.902295176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901328581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.902621598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.908226989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.909819518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.910955861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.901706351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.522779312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.561180154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.921989836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.907747174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.908827462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.902708349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.911575429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.901581556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.916311955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.918027024 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.91904077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92090845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.922295164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.581177735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.921641853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.539484576 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.90713766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.908389172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.903225077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.911690879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914138667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.917396796 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.920762656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.904550824 seconds)
  done (took 221.537059965 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.107123889 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.909463532 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.911779741 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.843498976 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.912249534 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90974402 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.849757232 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.100037226 seconds)
  done (took 19.400981235 seconds)
done (took 623.945219801 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.407816307 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.254147911 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.086062561 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.936937831 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.162472186 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.967978625 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.930797741 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.997382042 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.666244192 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.002956079 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.581687916 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.951131149 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.6654858 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.959165113 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.050835542 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.987447155 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.523074124 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.619463484 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.108056079 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.98939048 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.104769687 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.866127869 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.011165658 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.692727495 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.686325879 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.915621526 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104133469 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.53090544 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.940247864 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.095240194 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.729975943 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.332352342 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.946719381 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.931858313 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.98606049 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.965910883 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.271899855 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.945268088 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052300617 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668303395 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.990204678 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.543736108 seconds)
  done (took 104.995049811 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.902238863 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.899469588 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.899508755 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.900567486 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.901152971 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.900438177 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.898838689 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.899428641 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.901118125 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.899484383 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.899226551 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.901612133 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.898012741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.901995741 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.898532252 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.899934394 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.900970236 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.902162557 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.900543476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.901837711 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.900149347 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.900492645 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.914696862 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.900652453 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.901665035 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.901056072 seconds)
  done (took 51.272716833 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.914602448 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.063378919 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.176905857 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.934909843 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.913274902 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.917598086 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.93423117 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.919587279 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.916721141 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.916315397 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.00835288 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.919483414 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.930254616 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.175823379 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.930041633 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.912985919 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.912251521 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.912118383 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.070281127 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92961272 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.932547318 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.917830935 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.933517498 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.927583527 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.913967922 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913329486 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.916082294 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.386048488 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.922935317 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.005514919 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.957683174 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.938192684 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.330222196 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.187835866 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.969935148 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.924479458 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.914721911 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007480612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.919949152 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.91547206 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.932971915 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.91859942 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.173322793 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.415548454 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.931213848 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.914048351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.398251043 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.019176273 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.956740707 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93006013 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.177163197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.934477374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.916124746 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.916530761 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.951657887 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.928610775 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.914859548 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.241575962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.928548771 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.933860757 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.920393729 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.91529893 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.076030877 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.924712592 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.066133231 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.92536972 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.921489772 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.915957537 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.177177738 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.933920249 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.419543658 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.931024354 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.915660677 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.009684114 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.070263163 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.426452079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.929483212 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077978875 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349823358 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.941652074 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.924060882 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.380071517 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.945554017 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.924739437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.917648325 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.918872199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.915544254 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.961681835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.933020343 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.348151779 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.426982176 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260652786 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.945374988 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.932243549 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916581209 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.240608591 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.925563218 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.918667793 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.171702619 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.431204972 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.932168715 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.92533698 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.407630495 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.933827972 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.936332051 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.927077994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.183243225 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.936085981 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.962756475 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.918145018 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.924840482 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.920758558 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.936506642 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.926638139 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.91799839 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.396406866 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.030040303 seconds)
  done (took 237.720884452 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.911908243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.914269799 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.911877188 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.915951581 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.910634206 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.916136212 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.910550577 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.912521265 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.926949137 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.911516975 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.911580722 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.913739443 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.915538321 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.911265598 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.529355872 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.918707449 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.567394173 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.912271708 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.912167759 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.932030639 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.594782871 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.919115052 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.913122944 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.912041818 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.915862921 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.91672341 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.051413657 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.928755635 seconds)
  done (took 169.56454877 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.920126127 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.09899767 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.939992583 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.960075502 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.927505726 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.917573221 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.942863664 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.941436212 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.923983026 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.916817159 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.916055926 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.981197238 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.93197733 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.05778608 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.952454099 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.952739129 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.023411359 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.928638491 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.918388561 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.919079189 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949524083 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.914964161 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.98141994 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047666241 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.939946091 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.037824412 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.926526503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.92097536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.918744205 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.039799191 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.936570846 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.980489387 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.950371519 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.938454508 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.041480138 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.039303237 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.026121037 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.950150766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.925358909 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.919205429 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.918029582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.908070569 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.038269388 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.940658934 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.922093044 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027801964 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.94115473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.922706794 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.93217404 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.919275013 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.934665817 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.939294785 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.988157731 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.055053901 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.956129657 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.95505761 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.946259369 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.20592484 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.929489234 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.021157285 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.915581935 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.039937341 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.942560901 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.909149779 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.920296995 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.928122474 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.95106081 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.953273007 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.025379009 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.92983667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.020719474 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.957951599 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.927182046 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.921579313 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.924215235 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039673376 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.040859277 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.957767722 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.961119307 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.953280443 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.918863771 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.921236306 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.911637499 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.941291368 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.926070167 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.0390349 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041594641 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.931360604 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.924876739 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.924858974 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.923473705 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.947795797 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.049433059 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.96278704 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.018186405 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.992256916 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.000818884 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.941893966 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.937023341 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.926707268 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.98786095 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.942140333 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.934172387 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.254362504 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.994988001 seconds)
  done (took 208.218149871 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.404064768 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.976972533 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.981830486 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.233236685 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.354889336 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.836361233 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.972742724 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.972897406 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.997237594 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.162551694 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.043453688 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.992180095 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.960449038 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946470924 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.975207661 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.993145655 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.982591834 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.313106768 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.105010555 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.088264613 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.957312959 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.28748943 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.296830491 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.416966676 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.008214102 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.317908437 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.648077158 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.115791623 seconds)
  done (took 63.197181435 seconds)
done (took 836.800421214 seconds)
SAVING RESULT...
DONE!
