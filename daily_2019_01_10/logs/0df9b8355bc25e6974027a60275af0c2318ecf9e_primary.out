cset: moving following pidspec: 6065
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.332788878 seconds)
loading group "string"... done (took 0.545900655 seconds)
loading group "linalg"... done (took 7.520425027 seconds)
loading group "parallel"... done (took 0.172851769 seconds)
loading group "find"... done (took 1.182408196 seconds)
loading group "tuple"... done (took 2.113532837 seconds)
loading group "dates"... done (took 1.335162764 seconds)
loading group "micro"... done (took 0.247882489 seconds)
loading group "io"... done (took 0.981208854 seconds)
loading group "scalar"... done (took 41.117444811 seconds)
loading group "sparse"... done (took 13.167176019 seconds)
loading group "broadcast"... done (took 1.063499055 seconds)
loading group "union"... done (took 14.13201946 seconds)
loading group "simd"... done (took 4.768165362 seconds)
loading group "random"... done (took 9.638471167 seconds)
loading group "problem"... done (took 1.996242814 seconds)
loading group "array"... done (took 22.591497095 seconds)
loading group "misc"... done (took 2.034582926 seconds)
loading group "sort"... done (took 3.448562237 seconds)
loading group "collection"... done (took 19.717310069 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574922955 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156714467 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152062225 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148445363 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196562271 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143084807 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1584103 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097406276 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.96139119 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173480761 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151946108 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524726438 seconds)
done (took 5.169480117 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.214978388 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095348822 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103923863 seconds)
  done (took 0.871083164 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077025165 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145468602 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094438726 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078202762 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094750156 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077769098 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0948192 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077644443 seconds)
  done (took 1.340820475 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086647667 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096807519 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082067606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096139739 seconds)
  done (took 1.039118511 seconds)
done (took 4.227450842 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.725106527 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271325279 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20496017 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462781154 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195587599 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216300206 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679288329 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355009181 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252008877 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099712058 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134949144 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392293782 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137073083 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683307871 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089739176 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124576101 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176632794 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455634699 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082893699 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109593927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116560957 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140728435 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128195274 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090946073 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186720692 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081754623 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193052237 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107636993 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080511358 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274781342 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201004817 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685901571 seconds)
  done (took 10.852121771 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11162065 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134446973 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098129407 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137505966 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136463414 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098751907 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084292867 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096350684 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121840257 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175520446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131121815 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12171766 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094214016 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082295514 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115051176 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244871689 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119146165 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099698998 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099982537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089050878 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137595038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111584544 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108984243 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094306128 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165964017 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22204709 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111727305 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12557682 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09631463 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111957832 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143230504 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143533762 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094281526 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080473472 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1719469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123678495 seconds)
  done (took 5.129298762 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.093447658 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188570084 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121048401 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169128694 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079673619 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142045121 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094353557 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112740818 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256091448 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.178841852 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488711545 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14152529 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098978919 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098178604 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082167369 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096474484 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.651479519 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157256276 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117298719 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115822612 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102751325 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089468955 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365300671 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095653231 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080572854 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098575149 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066278931 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16164937 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098262084 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146562206 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120943655 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081783925 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134359091 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204062443 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10880722 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134935208 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096160952 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.1111476 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097420812 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176648226 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104856277 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079471715 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120036816 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13302698 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117258867 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099077162 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096316833 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195846579 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07961384 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114089044 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.940645894 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079318964 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18151868 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102430571 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07893556 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303799714 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119708019 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079120434 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095623772 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279524043 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188834187 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098408067 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079515024 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09694105 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080714576 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396845264 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08095556 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739741445 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083702495 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107582492 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082258847 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096478878 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103205036 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087178527 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117837971 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104306065 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09701352 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098206409 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08058363 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096143818 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082077565 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10710445 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215763353 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097420629 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077708059 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096733299 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078205351 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11613886 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12653649 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082522804 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095866529 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113777902 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098237111 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096523001 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115835014 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099589633 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106273987 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082713531 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142826982 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096001543 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.142270765 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094119329 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123060919 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09890174 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112941828 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110253783 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098722637 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.16863768 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078275349 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094945942 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079144096 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09572314 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081423489 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099757674 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108814236 seconds)
  done (took 22.828967491 seconds)
done (took 40.579820925 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324771538 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102656122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101960335 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102077277 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100190702 seconds)
  done (took 1.490029059 seconds)
done (took 2.221306742 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283695428 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172523118 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095209952 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164305509 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092373617 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.161914839 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158042892 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093574057 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216968256 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093770504 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158956692 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076459986 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092910434 seconds)
  done (took 2.619572211 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093976463 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116092194 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082680691 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109205616 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07645815 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109928422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092751623 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11470482 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108798769 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085120845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092246966 seconds)
  done (took 1.812062623 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093837769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112082732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082555262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109535347 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076117007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108956861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092922719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116046515 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108724622 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085786664 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093071048 seconds)
  done (took 1.806210097 seconds)
done (took 6.960029004 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090993508 seconds)
  done (took 0.813677095 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920898563 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.607254449 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113944795 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150925807 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31565806 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.173033661 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470913348 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125104926 seconds)
  done (took 10.810342604 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.142591932 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085696975 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100519702 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085883164 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101809787 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082841184 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098133691 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097437396 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085645615 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097267875 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08234718 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099512911 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097891123 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085500772 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100411321 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083914457 seconds)
  done (took 2.323781403 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117935885 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117246399 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104794989 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106967205 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086891772 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103255728 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104888416 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089174491 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100592175 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102228771 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089852923 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10437184 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102829606 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078707136 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104559073 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106494238 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08551471 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10389553 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105419384 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089584075 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105765641 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094728435 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087456895 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105247614 seconds)
  done (took 3.238239728 seconds)
done (took 17.91342578 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157567412 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107595614 seconds)
  done (took 1.000685006 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093962135 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112513046 seconds)
  done (took 0.945657701 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096103661 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094897504 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121151627 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108532782 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079807167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095971066 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117520524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079829126 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095431417 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079999076 seconds)
  done (took 1.711611679 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082194346 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108488611 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100563561 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094339398 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10426394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09364321 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087075321 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098088505 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109220303 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076417136 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.1020249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112346114 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085432359 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114720414 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103335476 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082278377 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101038946 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097924889 seconds)
  done (took 2.496365917 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079169057 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095790372 seconds)
  done (took 0.915992006 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080441694 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09336888 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080869608 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096355803 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093860193 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076779485 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093361111 seconds)
  done (took 1.355765216 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.434367713 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134973447 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258627683 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084447613 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118497196 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300266179 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096704888 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084141962 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102334041 seconds)
  done (took 2.412480367 seconds)
done (took 11.578443144 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093154027 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114338431 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112367108 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.453276933 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10704919 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097284542 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146393114 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248282925 seconds)
done (took 2.120159498 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142936988 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.590458032 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421873758 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229910499 seconds)
  done (took 1.989720888 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40095533 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097913425 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082164189 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080520987 seconds)
  done (took 1.411145627 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078944577 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098823749 seconds)
  done (took 0.930319095 seconds)
done (took 5.226401864 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.11391895 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098124384 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078918688 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095334008 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079762729 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094990029 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077559423 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093936987 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079301925 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096178236 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096088781 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079765856 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095692018 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077087295 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093085089 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079902477 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093475574 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077253351 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093058995 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079974386 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093085637 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080495026 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093633591 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077626869 seconds)
  done (took 2.904544016 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099802785 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097011001 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103143559 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085212394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101420629 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085115763 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101864275 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096474099 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08626328 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098794237 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100188701 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084066663 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099446683 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08440747 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099230076 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100719943 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086235494 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097110624 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082676156 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10000709 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102570666 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080232054 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101041081 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086307194 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100546987 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100301371 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082351638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097579373 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102379484 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084890161 seconds)
  done (took 3.581868081 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084905797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09348791 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077836358 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101660267 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077307248 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095748211 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077118931 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094978572 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078743018 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094679767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078796922 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094457252 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078017827 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096468794 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078434887 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098498243 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111034426 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07827423 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094368104 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07915781 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097775763 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077357037 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094681367 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077330842 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093556401 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077146703 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094743134 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077343467 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095536043 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07768989 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097682228 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081276546 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094554808 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084629293 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097348488 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077619229 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097778221 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077048616 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094963241 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093641494 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077276437 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094176335 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077593054 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100964531 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078024399 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096561167 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077712547 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096336688 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078535009 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097855226 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077539428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094278728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079154011 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095514589 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08137385 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09440568 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094890593 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077307633 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095999025 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077194223 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093708785 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077744758 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097230029 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078154869 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110030037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084510889 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094732292 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079972441 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096207054 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081411845 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096082177 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.1089283 seconds)
  done (took 7.125049241 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.12985792 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125499188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079875673 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097946005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076352409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09528036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08222433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094776247 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096988262 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084338063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095068565 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079151062 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096745127 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093485331 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095614421 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096598891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084028176 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093461276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078695399 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098764406 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078568179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099356466 seconds)
  done (took 2.811762638 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20659846 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104270074 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141063206 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10599666 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082808315 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105653982 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101296999 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086792847 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10205587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082273588 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099384894 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10187068 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08298002 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099981859 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100198896 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.194505056 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101813648 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084230023 seconds)
  done (took 2.745378776 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092488001 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097842179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09778378 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097874657 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099108143 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083049992 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103570412 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106785158 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083437357 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098253292 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090558538 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099697372 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099891499 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08060942 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099613626 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080877138 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100307507 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081499115 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106688279 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103548887 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085987891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107858164 seconds)
  done (took 2.862005684 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09657606 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100248104 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116487164 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083714054 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095341902 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079039814 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105583431 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08107786 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106296481 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100163464 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08116304 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098474018 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087099372 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098028069 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103299373 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081348793 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099822803 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081979189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100894365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077365406 seconds)
  done (took 2.642242131 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101445751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099538837 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09942806 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091341193 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100082389 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081782436 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107668627 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099520413 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081813603 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124075038 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099099093 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082124789 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1093023 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104644994 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09886089 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091204293 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108081932 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107706762 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08215588 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098655027 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123979592 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082089801 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107451403 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099470368 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082377291 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099219092 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099377074 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088117198 seconds)
  done (took 3.521334035 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080467183 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098148939 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078201432 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095715576 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078140506 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095715345 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078142624 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09783589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080577558 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095213596 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080410237 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09754342 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080147025 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097964604 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080714405 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097720698 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081025619 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095709437 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078876284 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094963875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080225133 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098561959 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080883965 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095333204 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07784301 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09822422 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078018566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09624391 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080311807 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095711391 seconds)
  done (took 3.417449151 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091107963 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106249538 seconds)
  done (took 0.968682575 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077906427 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114021876 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07832154 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102274578 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085754424 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099322169 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106726175 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085766627 seconds)
  done (took 1.522214238 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095277432 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109453135 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08276506 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111838479 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.1101819 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097697815 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170033848 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10110778 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105555318 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079052684 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112731967 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081334737 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105342055 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08187819 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105204091 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087511167 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096476439 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104425634 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084597028 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097221089 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083471501 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107922299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083816205 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095214919 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100653485 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09364882 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111328908 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083000696 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102170903 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105521582 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087226844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093454895 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081338873 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100581094 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079616616 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108383346 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115562636 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084442339 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10895363 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099777327 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093066606 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093988538 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086090073 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104514696 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109186044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081746273 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100370657 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076885757 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096466014 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084525424 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093980102 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081974717 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093645714 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088306765 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102957639 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11035893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080417997 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100504432 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085541145 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102443614 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088081585 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100675146 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101274334 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081301468 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109390076 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085541867 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109115763 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093749474 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075160115 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097170006 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092120055 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123290049 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105804108 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081718496 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100565074 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080090719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102316335 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083030449 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105215786 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105022563 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081633569 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10650605 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088980083 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098810376 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101916379 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090281243 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097837401 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083039728 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096482984 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115640507 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080196855 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097713301 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079599447 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109652953 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084468164 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098701893 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079546886 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106869075 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093191127 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081984366 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101457905 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082015505 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110668375 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104784362 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087599721 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108721702 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106605575 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081306209 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102564613 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078569045 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101086792 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084005359 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107233783 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075535586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102318035 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08256377 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101254484 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108156899 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08023381 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099671145 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088740798 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105705567 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097393853 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077843055 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102357049 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082420297 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103112814 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090132517 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097991764 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076867417 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094448709 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102553504 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083043857 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103522649 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087699822 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102289645 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076208935 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098313905 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105185565 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091320431 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099295713 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082607473 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10553714 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100486839 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080926972 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105841569 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084189453 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099465329 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087447096 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100477621 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077614414 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103173379 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102972129 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081042594 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10316188 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086276891 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102475737 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099833975 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080651255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10560932 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083383992 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098490863 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082562318 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09839645 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111160678 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083894967 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094946363 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079692463 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108048494 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079746035 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100109796 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080425764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103246359 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100751476 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080279236 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098968067 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083512257 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112058428 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105284508 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082847306 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105691732 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093158641 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099483673 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084598205 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099768968 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100902704 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083407956 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109550797 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087662353 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105077901 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102652716 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078656819 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106443203 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090066079 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100087956 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079675235 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099116024 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103214008 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087072799 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104067301 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083312846 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098159293 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082448865 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103948035 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103101655 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081720816 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098347113 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087660639 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.09948695 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107272861 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08350663 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110551488 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085951303 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095285066 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086184228 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098401668 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105879378 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077326803 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097681006 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080659513 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101794481 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081349958 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102747163 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076446257 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107735862 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107528377 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081790604 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100188426 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083224997 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106771023 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08445651 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105013699 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085928776 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105710647 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110863728 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082436967 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103385745 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092974897 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100745142 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094157131 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087695039 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099166228 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081608755 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100115939 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080647841 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103383811 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109055234 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090055411 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094356995 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08547776 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100850828 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081494798 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095750565 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086978663 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103273615 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10105197 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089464182 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101797929 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084138514 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104689099 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082420269 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102344223 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101377759 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087625198 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101672514 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085465998 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100486815 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085208748 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099647582 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080106377 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102069967 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101548979 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082319933 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106472599 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082596368 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099904024 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08555749 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10137642 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10076424 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08274448 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100306021 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085814197 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101388424 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0829351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102683316 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077306262 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107649429 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081940765 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107932335 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101518146 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079197163 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105503879 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085912212 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106340818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101664402 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08402581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102367397 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082818678 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103635714 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088671058 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098787608 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112246022 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091032416 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102466896 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08507055 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100790784 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083770848 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099497605 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101311095 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083621518 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.1007481 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082946716 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105342953 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08576719 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10099997 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08461895 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102036096 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100780381 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083993185 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094962984 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081456543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100694622 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082961835 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111852182 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101689456 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084832873 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099702334 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08389979 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100212075 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079269239 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109406582 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110201249 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084169594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108538145 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082342638 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103007144 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111571972 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076559881 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09954075 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081011776 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098451347 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090508641 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101204669 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100548841 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100935789 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100675907 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080198713 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10138215 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080978432 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095434076 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08168092 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105262201 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085158188 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099930028 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082566653 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103923438 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102759262 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093393511 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100914286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083942572 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101988918 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080392619 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101242664 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100130064 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08547261 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102492811 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080713807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098038792 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08236 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101915897 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084890441 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101097639 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084485457 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108449352 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100992492 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086948817 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105234028 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078227739 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10465022 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082384699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101247296 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10055926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086555268 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104254385 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084506414 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111259555 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082358388 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102370247 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100860808 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080551793 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100528715 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082278592 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101629561 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082748149 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102562336 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092002116 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099688799 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104936617 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082847182 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100893797 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090045339 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102019077 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086004156 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109582851 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104122468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084690919 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109741582 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08630118 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10458962 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102096964 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083984537 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107072016 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081944008 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107971176 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082989305 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101540653 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102882683 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080589493 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101163301 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082560976 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100349955 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088624641 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102487849 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081677927 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100661427 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08062709 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102700631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104299029 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091278853 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104015845 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085783332 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097125294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080648354 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102672574 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099009377 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085516169 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104214711 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088893542 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103696194 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083316219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100823524 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111103012 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089366723 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105155146 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080714167 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105710322 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083685518 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104312601 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102488977 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083166524 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102664477 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087535826 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103331976 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082227926 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109480224 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085773243 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103575231 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103216641 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08420783 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10201415 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078582969 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102139689 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085019812 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107012576 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084843369 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102133695 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112440453 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083731606 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101827225 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086986101 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10117138 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105958574 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078563925 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103285778 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085260689 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103510397 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079366247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101695956 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080974187 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104761752 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082949153 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098148186 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113109011 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092689369 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104979876 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081937026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101189029 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078978224 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098699727 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100622412 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084998233 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10342291 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093845496 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101127521 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082000796 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09780713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08324178 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104902452 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104578392 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080941664 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097062371 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08191393 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104857399 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089253856 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10141395 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08374567 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105592371 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104440133 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081371562 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105846824 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079687399 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105952812 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115326124 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084297968 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102864008 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088826081 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109908217 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084543133 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097289202 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103610483 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086857958 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101645795 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085172044 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103576817 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118345811 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086288984 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100774194 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082555335 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105160567 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082876117 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111154901 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084260214 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103817442 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106350209 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085873222 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11125639 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085128275 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110585367 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105355328 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086791903 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10100642 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083576265 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100757117 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081946858 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103933552 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102216026 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088456451 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109768835 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082559138 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112863273 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111141043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089630716 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098061578 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08265248 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101304703 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078732787 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103990565 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08200237 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101071973 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099713928 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084261888 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103000046 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089735638 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102953362 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084801928 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102881369 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077064278 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103949476 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085691576 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104115554 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09909355 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083147915 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102938687 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08766819 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105960621 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0836472 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103791053 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084431738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103139138 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097231573 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090182219 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100916634 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086714104 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101367787 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08360599 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102795831 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087204562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108579669 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104068892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08683941 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11487275 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085264751 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100252979 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099662524 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088983249 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100496344 seconds)
  done (took 57.469044893 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144825123 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080772161 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097753337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079272886 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111476703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098438894 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079315819 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099207145 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080657899 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100724407 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079298481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098298321 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107640518 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123499827 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093230169 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103195192 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078760065 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099250361 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097912631 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080774749 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108460405 seconds)
  done (took 2.861423797 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1037715 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119843889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114895231 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117715716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089443376 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113818919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113817979 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114581751 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099519575 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110537291 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117621992 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114114397 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091385617 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110880454 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110201967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09171767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117213675 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108659047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116028874 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094603862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112222518 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113852331 seconds)
  done (took 3.215543098 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083894868 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101116446 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084344947 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096427642 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083276141 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097236963 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08681835 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100301222 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086441707 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101263075 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082064121 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10196097 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10412606 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078865191 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101598265 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080716162 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150840308 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106395673 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082287563 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104327165 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078425713 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104800953 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097617003 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079481822 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10073798 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087421312 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103816403 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082056748 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103005278 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082717179 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102393334 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08124796 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103213629 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102600115 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081611889 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100953961 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083164847 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102385572 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079304192 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099669625 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083449859 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098450335 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083642532 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103635143 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081387379 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10036037 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084688676 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10222804 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096811607 seconds)
  done (took 5.428160738 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10386886 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158811527 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085481681 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141016584 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120153804 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111751215 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087292056 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141494325 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101990638 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082181219 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122319006 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118327604 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10182848 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088699956 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10993808 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102943205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085121955 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1014808 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107062828 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083370674 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106896997 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089372208 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118776375 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117345889 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106822483 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083144912 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102711299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107352804 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098040141 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109513828 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108249683 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089652916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119863596 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108479592 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082653724 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105678571 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120855625 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103271074 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086515425 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10047225 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087167431 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107971585 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109521627 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101172198 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103557594 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109017987 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083791109 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099979995 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117299839 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086270496 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113324133 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119350796 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107966267 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084411079 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108396249 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1198064 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084682043 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101026993 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087002785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118072911 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100221498 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088252606 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118613074 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105104104 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111325066 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099886892 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108951944 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107958104 seconds)
  done (took 8.079361627 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093665773 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110674204 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119578238 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11915411 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090988335 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11064553 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109959661 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090694089 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109675967 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114945708 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109205293 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132897439 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085765776 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113134681 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110819233 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091159794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110848548 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110503807 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090758425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110323522 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110152291 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119443554 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091011262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119340965 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140906716 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10515652 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090130041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11004525 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119651745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110574976 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123842389 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091110394 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110338072 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119197589 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122156914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091274522 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102930047 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110942435 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091599154 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109490144 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105501926 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100328997 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109892257 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105001912 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091327365 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109564581 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119206883 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122826252 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113115644 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096310626 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111360457 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120375338 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110336861 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091086426 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119853632 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146396346 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119494397 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119921182 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111180474 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099120211 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119773042 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12727123 seconds)
  done (took 7.62990689 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106696854 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114296219 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115801299 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100865804 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082110345 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108481575 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082038035 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102577567 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113571046 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093990653 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115564741 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108911878 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091644621 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115711382 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107936743 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111148937 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088711854 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109021714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113125813 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088835247 seconds)
  done (took 2.909427871 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093209258 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122984321 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084608703 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112781664 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107949916 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090612985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106280359 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107721462 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085615845 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107284671 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096355791 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11593093 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105215139 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091171235 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115815442 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11009981 seconds)
  done (took 2.497141263 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097138901 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116777028 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119895948 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086558602 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10355318 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080443333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104368687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101122882 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08094568 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12044988 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085416346 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107855188 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104443077 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083392997 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10049012 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088082966 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100966308 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083176196 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105154638 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118634459 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096669872 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103789745 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104891474 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086520447 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104857182 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090181086 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105311849 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102170882 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082759392 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104340055 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085471841 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112732274 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101954308 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084246375 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102147021 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082011678 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104659621 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084703259 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10817734 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104454727 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082914785 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104274244 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086112564 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105887955 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081085321 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105697971 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101004349 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091461227 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102936202 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085263503 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105213379 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086950328 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106430529 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114910853 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088305665 seconds)
  done (took 6.232159112 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099039984 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108062951 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080590254 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102668358 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08753291 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107147725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108558255 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08850566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105661795 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082944393 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106936716 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089630012 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107167894 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10900999 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086973744 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108767278 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080518827 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106199715 seconds)
  done (took 2.614563459 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090327828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104735895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092226207 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105293266 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08497515 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107423415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080323062 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104411291 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103798598 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08576295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105253986 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088514672 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103623628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087714366 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104718747 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085592767 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107662211 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103010074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085332518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100230214 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087860971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103178081 seconds)
  done (took 2.968645796 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118235018 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124177044 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093277405 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230924598 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103693531 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132837653 seconds)
  done (took 1.650709844 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108738135 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119375001 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106198908 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106617857 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113775318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086317758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107458109 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106905696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116658574 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101121293 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108615276 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116615358 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117505202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097714073 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1141672 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113374511 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106519934 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088040668 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105582059 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126490885 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087502925 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117951254 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107195282 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086462183 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107251677 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116863336 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117681982 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120557659 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087224563 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116166503 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113397746 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087199986 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117229774 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121588932 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108305852 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097311437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106908607 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127942167 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113006952 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095520652 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108832239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113380479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097585441 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112639684 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117398447 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107452886 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092477875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107332663 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107602263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133108451 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093127937 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11701081 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113970186 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117773322 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096889047 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134352063 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121556825 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116432672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114202771 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121574474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117224547 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094260401 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116613866 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121122594 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114180903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096221362 seconds)
  done (took 8.075069244 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101877261 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12503709 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108304083 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122116608 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096696671 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106895413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107552825 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08739566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107601127 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106566213 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151795118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087792677 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116799632 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118054968 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088257203 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107217094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106966542 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116212756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08663973 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134499041 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106995067 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116622162 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117342017 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096387099 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122145695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113758571 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107734587 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088080692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106790708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107608475 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093124416 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107887555 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117385559 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086080746 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116885812 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108139099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087074954 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113330726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107612237 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113955471 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096696488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128212165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108046286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108414612 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100498931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108687567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107203677 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086560163 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107391365 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107040723 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101432307 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123166162 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122017631 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117028657 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10824098 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088730457 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107990299 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107738859 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087492472 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114130704 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116423352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087767011 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135342188 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108249971 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107269998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116142936 seconds)
  done (took 7.985377137 seconds)
done (took 154.469031814 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213076781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198053366 seconds)
  done (took 1.261159697 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087180105 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13582923 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096052546 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168897043 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085017997 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139368853 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137978878 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09865842 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106958642 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086258107 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106697905 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087232158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171186859 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086202031 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106946607 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107701782 seconds)
  done (took 2.665923183 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11317116 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254881444 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121548201 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105185212 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089244597 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109303162 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084419672 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111442958 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089303345 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105243249 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088713608 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106537305 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084063538 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106669589 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089086943 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108769159 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104530215 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088161769 seconds)
  done (took 2.819708461 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112397056 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146853604 seconds)
  done (took 1.1253516 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243839884 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160697442 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232648624 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.466750491 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.270020162 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36557662 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.198177068 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209398047 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16012422 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207828256 seconds)
  done (took 3.373123534 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118737001 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179583739 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316945192 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156487148 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106405552 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127278727 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157005997 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130487749 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123936796 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100485977 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122057633 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117158599 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137580238 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094502312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115145396 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117430195 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12037153 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114046314 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115136239 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095385741 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138414833 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084609667 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115905556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113033766 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096976785 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11893705 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106271135 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085366827 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115838406 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094003576 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113049692 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124549584 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118321821 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154456935 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123634649 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154998859 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117946525 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090508378 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114180982 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090497905 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117624305 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118686325 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124380433 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097018976 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105209591 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096536195 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105364572 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085138328 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114613549 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118232284 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093914463 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113400443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15471837 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119176697 seconds)
  done (took 7.366814739 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.783205176 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156322616 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090193277 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.879375953 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136419633 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102629084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771100996 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112062845 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253316849 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75035792 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133225075 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097670699 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230814626 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258919809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954056052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292540905 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640318249 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12666486 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152393923 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153736653 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118123502 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114575062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131334023 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452125665 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11705858 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090856158 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118565669 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118689072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160448124 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126161218 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092449423 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198612642 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250010065 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204890981 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094350821 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111919682 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089517346 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191191244 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266925904 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193449243 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179272742 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108030401 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089888921 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121664568 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132715367 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086738791 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183840168 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175936709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170024466 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114807951 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119287586 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098552845 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120911974 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165738136 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122059334 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322661423 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30835861 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089483346 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121146508 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125369024 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238401773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123899353 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225928485 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139660216 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189628933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111273325 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771779273 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170924816 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111711744 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096223311 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120180555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117171119 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099605026 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169420786 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390331622 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124030309 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114765751 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089533462 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251297429 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103048365 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111318857 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160101174 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11637933 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119678902 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102181945 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122732863 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167966329 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255005803 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100987739 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119712423 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114944982 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10302191 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116965668 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211627397 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219482525 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162972058 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230782021 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100789947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184225466 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169489055 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11876483 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170967815 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119785571 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101927221 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122452755 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216504346 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145424499 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123123903 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092917515 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117967154 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148468829 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126074169 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0971634 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1922888 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476440897 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167794084 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108555842 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126889142 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098426109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183794175 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095954949 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257934084 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121893502 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169231284 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119398481 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087784847 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121670816 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163763465 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121833871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098560064 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121897964 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11870513 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235710927 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215975842 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12061314 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220600296 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18294609 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118168686 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170954585 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120361293 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167411647 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119559207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097938629 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116512632 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775091431 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12255944 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098503252 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115261662 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193481301 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089703736 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123991523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124484666 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087162748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773891434 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128406531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120915732 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101733645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118114315 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119556276 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096200558 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115617738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160447745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230458466 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11885125 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097080369 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125942967 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161278918 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116889339 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125183563 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124051322 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103927516 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122431204 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114730839 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103556898 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189892432 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162535736 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220396826 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566787282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112440912 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123791045 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203388341 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112113342 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290333249 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11944199 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202625272 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184468771 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099108855 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306461039 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164027177 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19344824 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127773442 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171999237 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109398075 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117465148 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165178715 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111478533 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096431247 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162054451 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125527866 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122341932 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957979566 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091097526 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245401557 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086635781 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170169174 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116938446 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119550688 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295744313 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090017306 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128414797 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163881542 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115349169 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103371177 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722488046 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125388538 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101243834 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118002689 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221402818 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16264798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119054959 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11871613 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096374936 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183009612 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209378531 seconds)
  done (took 43.870509659 seconds)
done (took 63.338841395 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279063042 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21670899 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.27225581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169853602 seconds)
  done (took 1.901270579 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171376164 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149242031 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121852022 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107500882 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150346676 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084616608 seconds)
  done (took 1.67101082 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359678361 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275557097 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24346462 seconds)
  done (took 1.772647128 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289381362 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245394377 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472021043 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324274169 seconds)
  done (took 2.344296705 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208296764 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131938645 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.114109534 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102862362 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198048365 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245715677 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141786418 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201070999 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098522501 seconds)
  done (took 2.376701486 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196838955 seconds)
done (took 11.154457957 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.248105007 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.186237874 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.154595202 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.251383856 seconds)
    (5/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.239968113 seconds)
    (6/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.252569944 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.264621992 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135895718 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123986146 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.245012001 seconds)
    (11/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119171138 seconds)
    (12/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124438906 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091479385 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120653376 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095379087 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119296948 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135137822 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.178241801 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.134279414 seconds)
    (20/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.276605768 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.211958993 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122710369 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.194052177 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131917165 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093603898 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.286947956 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084378648 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.167095755 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.218713737 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116872565 seconds)
    (31/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066744213 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091366679 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11572955 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200971643 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092880979 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117243871 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156042502 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090202476 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.159376969 seconds)
    (40/309) benchmarking ("sort", Int8, false)...
    done (took 0.187492381 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096615075 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.135512948 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.192740934 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10993218 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164264843 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17090511 seconds)
    (47/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.122455239 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.13952963 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.166014609 seconds)
    (50/309) benchmarking ("sort", Float64, false)...
    done (took 0.171196418 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.235354895 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137784922 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.137303932 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131187672 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115593482 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.183881937 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.176017384 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116739992 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.189318011 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085384349 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197609736 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125914831 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214458226 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066119835 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.189029102 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.152112696 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111926325 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.145403476 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089854904 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108855943 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.203135407 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.100724474 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133178249 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218062225 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195777786 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068285639 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.18676984 seconds)
    (78/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086860879 seconds)
    (79/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120385002 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.206629458 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087736 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116707304 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179653957 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08741658 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.171682277 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0765569 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.216289165 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182196215 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067506475 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.2086426 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114776224 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.087032143 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.099514097 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087221902 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136155068 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093830217 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140139257 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091686502 seconds)
    (99/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124550195 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108630786 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086267239 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.137189577 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066792581 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132471143 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109297225 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117756743 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067316922 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191302199 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.134233689 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08624955 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089434824 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223766253 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087205436 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.139227882 seconds)
    (115/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097748596 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191650659 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089800585 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165970271 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.167090635 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123260276 seconds)
    (121/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067495229 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.384655865 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139346683 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094332545 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121985212 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093703474 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.136927553 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065976497 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.1091007 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086029971 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186591314 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108371683 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.117779299 seconds)
    (134/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177365197 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16070427 seconds)
    (136/309) benchmarking ("sort", Float32, false)...
    done (took 0.172878921 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.141407839 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089774902 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133915614 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193693539 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221378111 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097211697 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089562589 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066976653 seconds)
    (145/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129336868 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 0.180233525 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094332649 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.142248709 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11694084 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097112247 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122066298 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139359964 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114601597 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0932154 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120796321 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071545082 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116876879 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065983385 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.148773376 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.11536812 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112713314 seconds)
    (162/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075042495 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107942896 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092796956 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117645493 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067035345 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068575585 seconds)
    (168/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126499833 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.165279774 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068033501 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118347525 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10284098 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137884411 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11772299 seconds)
    (175/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097541337 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119631884 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.125748321 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125433624 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108948843 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075358832 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085644346 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.217365672 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134748988 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09036199 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.100069487 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087226803 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112081147 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154424043 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.1090541 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11710892 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066482562 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134520022 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08824331 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068526031 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214384651 seconds)
    (196/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10011184 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085830251 seconds)
    (198/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090919335 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152786297 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.089866166 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087242738 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072858314 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091716556 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093224587 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.09089083 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094916615 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115914484 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097311662 seconds)
    (209/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121486731 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089734142 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112314907 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179469954 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066800714 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135235962 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067481998 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152198581 seconds)
    (217/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112055283 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115581835 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109959799 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.203754117 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090702374 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072578177 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13049496 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220483219 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095031911 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11786497 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066815536 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113045135 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214419417 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066639533 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.149377893 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077605531 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.136906727 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076903943 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092674581 seconds)
    (236/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092325465 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111570562 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111417813 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136804481 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.161098885 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110506079 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086164169 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109244939 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068338733 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189185596 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111700386 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067654426 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066690568 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197367817 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127531681 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068893083 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110206158 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067824645 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067955568 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111785589 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093273821 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109993661 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111186578 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.108641064 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068017514 seconds)
    (261/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090935732 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086578293 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110124063 seconds)
    (264/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.124486204 seconds)
    (265/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11188075 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092617209 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172797353 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.11908228 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156452989 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13810872 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113605853 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094546336 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069264085 seconds)
    (274/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.101226657 seconds)
    (275/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092559281 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090421233 seconds)
    (277/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066793147 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068270335 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090557622 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112266883 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124663256 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144371332 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068031034 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085993327 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.1195611 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110576126 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084860771 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066920985 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117435469 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084549713 seconds)
    (291/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110128929 seconds)
    (292/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067695629 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111611905 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09418368 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091117982 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066862911 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090356252 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091680911 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114132507 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110840359 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.093115197 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066835409 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066686021 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119165025 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09202476 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117449178 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067164348 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118242629 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093545175 seconds)
  done (took 39.788269121 seconds)
done (took 40.684395617 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099902608 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146230341 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096871467 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135059268 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124351417 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091434025 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119289734 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098093462 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123208251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126536667 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098332651 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093573189 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096635943 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121274532 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096659746 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13939275 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123512115 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093648755 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118404188 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085073008 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118915751 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086544292 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111884377 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0700758 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121778676 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093704562 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116700562 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120519538 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086200297 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110682043 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089340649 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117900219 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085981303 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124461181 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092836581 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118526545 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097185347 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120704856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08836649 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110503365 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118384784 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086452185 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117300792 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094013276 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116298639 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092170978 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119240915 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100121022 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139111297 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115614723 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095229269 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123095666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096207369 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120307312 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089931817 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121883312 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091708584 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139528018 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120243352 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091931955 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118866904 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094711532 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116489272 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095156574 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119030542 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120681099 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097675494 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116067739 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096810985 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116597808 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086885807 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119184099 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090884103 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110083711 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096363425 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120927795 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109059319 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092964436 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117623818 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091746146 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110573228 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089563613 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112901694 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093386824 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112982753 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069356144 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114145607 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092381262 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10989775 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09473554 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116594549 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093838316 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113608932 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098901436 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110725634 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091787179 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11180764 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087279607 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11311675 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090664417 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110289515 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0897394 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119129861 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088999015 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117288722 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123616502 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086820702 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117813578 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086722198 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110499497 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101315943 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12200869 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086726318 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117143399 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085752025 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117991821 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086814967 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109526014 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086596639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111003781 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093104266 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11072949 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11381548 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093832833 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124961994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086574039 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114022931 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089945884 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110862332 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092570388 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111029331 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087162109 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112688854 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077500401 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113314386 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086750855 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118836314 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088822134 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120781014 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08894887 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120502481 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091515121 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117162233 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092329321 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109450393 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074547432 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116592001 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089481805 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11270066 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086816383 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11307405 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086754507 seconds)
done (took 16.931270706 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087060283 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184906955 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151935744 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142654079 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107468904 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112011419 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122315548 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119291674 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113726046 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143685894 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110128264 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131683811 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147894657 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086598832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112031451 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091009547 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11324839 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103531125 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145500042 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133193114 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165633048 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086910892 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146637591 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13558117 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121018859 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105074066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112386624 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090370762 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115108738 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113017615 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132462188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115051461 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087469674 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134484421 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105227301 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120395089 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086802059 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119163036 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088047544 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112204612 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140597232 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13348346 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093269568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117812336 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091307296 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114638284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08827617 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121961397 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098280409 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115423601 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127177945 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156047855 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090584814 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121886725 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086495144 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122698315 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121406964 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09010035 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111885333 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090126661 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110943739 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090479839 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127017038 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141599846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091455956 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122423117 seconds)
  done (took 8.618324761 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105823389 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13991062 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104972284 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131083435 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11283795 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.104947239 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112819194 seconds)
  done (took 1.770517518 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088637042 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133848682 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111333356 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135644606 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131254353 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108374493 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123570285 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089210844 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130625606 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089339682 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134546625 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152162937 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089880713 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120664507 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137551685 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088347565 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137332387 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087727292 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117055817 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111944915 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115271036 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13492028 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089830355 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1141273 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103257503 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114533105 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161673706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093798787 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115227862 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091339727 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112965786 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16572691 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102977798 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126775379 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089116684 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127717913 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127580592 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086634684 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131485543 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093882986 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127437997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114411807 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090126241 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111449552 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124729318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090168429 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115115542 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091950136 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134801265 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089286735 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128452144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089651724 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118505782 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090426304 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11887942 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125766973 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090982116 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134416993 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089932459 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132002303 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131350346 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102792085 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131185234 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091069772 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129203184 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102606948 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116570342 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089802418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118292445 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131083066 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087433213 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115652753 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099249512 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116064134 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112896976 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138514592 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116520458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099829496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114109973 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089002482 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115413185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111590848 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118298434 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089148332 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118958203 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092776379 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112704754 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087909401 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118343725 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087817195 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115177439 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117764511 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090487793 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117035927 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105628021 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115938345 seconds)
  done (took 11.832704581 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090806025 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115209733 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091621266 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115602704 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089636004 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115562656 seconds)
  done (took 1.591118217 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113894253 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118693507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104012866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121435815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157647875 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104792815 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129948242 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124360518 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10827444 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128202084 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130569722 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10457276 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136943808 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121517872 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10380664 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121148281 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130225302 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099993863 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128300013 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096584638 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137111306 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121893112 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096169663 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132038978 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118803429 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096174631 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126529099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103462865 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128142203 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12408788 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096117858 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119768997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097157712 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123070529 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130918122 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095890079 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121414525 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12002687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099969673 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118933735 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105632169 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122037664 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127841229 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09413398 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124189604 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12180265 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093996574 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126242593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104285174 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12008046 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120448218 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094810202 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119561574 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093808341 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121832103 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123177466 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094108463 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131754569 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096322244 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121528737 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119183359 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09280174 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124546413 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118087378 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10452837 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120112416 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096006684 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121649553 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122048048 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095824383 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120249926 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093279418 seconds)
  done (took 9.253188903 seconds)
done (took 34.022721042 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.703313621 seconds)
  done (took 1.673373523 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.705208184 seconds)
  done (took 1.677818482 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.412120667 seconds)
  done (took 17.382943564 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496466169 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584015432 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.81542765 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179904803 seconds)
  done (took 3.046887709 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94775128 seconds)
  done (took 1.938433071 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296539542 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258585036 seconds)
  done (took 1.535688036 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76741885 seconds)
  done (took 1.753161215 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.347542212 seconds)
  done (took 2.324365681 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331199343 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184871299 seconds)
  done (took 1.50281527 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548801814 seconds)
  done (took 1.534547891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.151176447 seconds)
  done (took 8.141621597 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259767745 seconds)
  done (took 1.261017153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300243694 seconds)
  done (took 1.291094469 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.513425821 seconds)
  done (took 4.503893366 seconds)
done (took 50.550277502 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099035118 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127147169 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101968689 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124427995 seconds)
  done (took 1.435510259 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100463818 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122027424 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099944445 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120596996 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126434065 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095386008 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123912031 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101206854 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121204962 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097167717 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12199649 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120840414 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099224119 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123857606 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093069763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123891449 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099269793 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121405599 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124133698 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096104655 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118791665 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097793108 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124719149 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094956851 seconds)
  done (took 3.660694152 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100250467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119438441 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096538497 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118563606 seconds)
  done (took 1.434296318 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10041281 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143234478 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138515568 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099422251 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143966904 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136406132 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093387414 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118213499 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094131289 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126754805 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090678683 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150219766 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138601096 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099731804 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127092946 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089273868 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117846799 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13732602 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099824421 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126266848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092917378 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125212625 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090719845 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139492399 seconds)
  done (took 3.814096537 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.158002088 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151854713 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140369113 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095437541 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156106945 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143062072 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088146246 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141904424 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08777179 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130896528 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119026748 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133142651 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128256788 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08862489 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113920132 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088739111 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127772655 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131434637 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091543247 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145368741 seconds)
  done (took 3.462259806 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096682334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118274196 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088131953 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116693785 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098642679 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120661457 seconds)
  done (took 1.641019204 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090571732 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115518882 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089317553 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114460936 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093712538 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114637823 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088540569 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11529454 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089903088 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115250426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089166671 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113898324 seconds)
  done (took 2.232123086 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457623416 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092236576 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120815872 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112011493 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097294712 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115991071 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102754885 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119250199 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140828124 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089580371 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115853149 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091386315 seconds)
  done (took 2.656977827 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233447152 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125884998 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284317355 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192900554 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15836705 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171835982 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152328789 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165864656 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224040318 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157320519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204311065 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223075825 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126071458 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213167493 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111946775 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144600056 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224996169 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211299527 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154112918 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227919714 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200601877 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16680862 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180119895 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151404415 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139301322 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172664869 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12133152 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103696577 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233381611 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17459672 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215004325 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163031231 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146890446 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207658108 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250281168 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218547466 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189791069 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135656605 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145716728 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163377751 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263077012 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135970956 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230228974 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155317688 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104798423 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217294641 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165935666 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175019586 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150362673 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139177642 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194381697 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239610885 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192579233 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138750821 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164892506 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159328151 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168485935 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154553203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25070371 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197108909 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177118964 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120329864 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145811616 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191995525 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181761469 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167763793 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207084222 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148570573 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192136295 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188775293 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164476422 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217820558 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186647726 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140088193 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167938568 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173641733 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171200857 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253409465 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175761932 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122354535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169282344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15093497 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132919189 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167844359 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124979258 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235148921 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121437059 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134459857 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165220357 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159990095 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160261879 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199025806 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220892148 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147575024 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084449836 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154686217 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1566641 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191390277 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140428652 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159172037 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162274972 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130127512 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1800997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09826211 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20136091 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091266307 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173685557 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211222281 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099445545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159012741 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151590095 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149249871 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173767961 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196469864 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142773082 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13366433 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207832637 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176485017 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150195145 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178384473 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22748062 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11580589 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149862085 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228064428 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243066708 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113769978 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228693992 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157591262 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107711857 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132373853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178785547 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15502891 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161426128 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134934978 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18253241 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234980525 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098144404 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139018981 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182437958 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134286441 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132945331 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16163191 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147724438 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112745743 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147685214 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152797851 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181954255 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202128891 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125816792 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190164009 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152168365 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226712 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141914539 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150314578 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149210586 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093613734 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220142711 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200682915 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131224699 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205579906 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171624192 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159055909 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168554687 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136052919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178554057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129509616 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093025343 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220467077 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166740855 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163220435 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197005666 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159181451 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180776541 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181859151 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198815526 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173982688 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164085507 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156494939 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111675292 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158850565 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166332905 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12350782 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143783057 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13463789 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154108272 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116359663 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134769313 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222586892 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169643057 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120899416 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158759002 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149741347 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181790491 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128649809 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174444222 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175823665 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147540176 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223467817 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193589423 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182937385 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143533655 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233496611 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093924698 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125308762 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142059612 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16991457 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106942112 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135077783 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166255966 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179532498 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206876884 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177144681 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166198233 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173206635 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192341595 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122487982 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140838967 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211920286 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176981034 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183263577 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115827019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150903565 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176578584 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158344073 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254798327 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167238582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174969438 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233480826 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149743144 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105421286 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151652847 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186181847 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181348432 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176868116 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121582866 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141146759 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162213412 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133193914 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16002789 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183202472 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163529286 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21492232 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150437546 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18533812 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127964586 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166481082 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159895451 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166025553 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081652704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174858255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231710077 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149767402 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16762347 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190438601 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131464241 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179017865 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238110491 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19046708 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137744553 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159057614 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160050749 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16192352 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170695599 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177356344 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160049804 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186556102 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159144626 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136433864 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114184286 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149925092 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150481165 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131248404 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148067908 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174802191 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111814199 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212451406 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161094917 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158123868 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171428125 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149678175 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117195496 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150437522 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239013542 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175786977 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23803587 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122749355 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20541901 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206160216 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12570075 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105374868 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132975335 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179006525 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135889939 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190127342 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.148386641 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161102962 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180782949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189776979 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138952722 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092454192 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157296553 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173758601 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16876615 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152399247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158073426 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231124738 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114795461 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132201828 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172406557 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160405955 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147964151 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196922516 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108225959 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121410068 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128243736 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132560107 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136864408 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233717684 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135513555 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182800247 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168755905 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169969424 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16510195 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148655445 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122325928 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166501726 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229275499 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180515816 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132146147 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15411148 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177365977 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193385241 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160771304 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14143391 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203464367 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220179515 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196595043 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143003239 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167562933 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167848511 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156456543 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187431605 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135975214 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206320774 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135732952 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226884624 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153410852 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142825191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17709577 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148034293 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116868587 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214692572 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174300106 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135290294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106189775 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170873725 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203253045 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157141307 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.09984339 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179629484 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125229878 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189505864 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255405181 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135476067 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152779936 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147660872 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108644189 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157311766 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157965652 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141680169 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162859034 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204362939 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135124934 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191330975 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230752096 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169049132 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174893302 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14439272 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693311292 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130682783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19316347 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155741862 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206684779 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149957693 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171781781 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158392475 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16727449 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223382007 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160479247 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230044962 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193813944 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175929706 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13176779 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158338662 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162649974 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144752036 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15182008 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167470086 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160208033 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15236659 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177271805 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168919602 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134723272 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140003126 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198509772 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15502126 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1826943 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179225558 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139549474 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172631068 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186815807 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134326145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17895617 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236851402 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141278196 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151553234 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106518388 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155839757 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260789728 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124390267 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200833768 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176742005 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15850086 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165816346 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146994774 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216600822 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157805148 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1776707 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146210898 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159046355 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15465613 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110788699 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129689695 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154542455 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167800483 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148444072 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159570744 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13821828 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215137998 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095980093 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145332461 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159335547 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191339879 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242867165 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108029827 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136005705 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163375823 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151667471 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17520699 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177931492 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135599478 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136995659 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109356888 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158962755 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112489512 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155862166 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157449663 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164838681 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231081411 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108404519 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278660352 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13979617 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15324328 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089779122 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131180773 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149942646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145004432 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15926838 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123278373 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259894435 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146303505 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132907895 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121620547 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126275933 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134738127 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165231965 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16089522 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176266925 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145496933 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081168065 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157338846 seconds)
  done (took 80.757404045 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161998226 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131164561 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14601242 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201956267 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175714291 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269035703 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208887865 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25352646 seconds)
  done (took 2.633060724 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093024672 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145439654 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15230714 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13274269 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091174616 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119938644 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.330901793 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13240417 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090521641 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139554675 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.14727999 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.116860203 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.509680719 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.11816071 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117434507 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082774464 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115084841 seconds)
  done (took 3.714496646 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.458771178 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711155252 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.486351392 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124827068 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.096351614 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.13383704 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.665211206 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209306389 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095086624 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485967415 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.769429068 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179425616 seconds)
  done (took 18.503004771 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09849937 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121445561 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108328578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136895948 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096357678 seconds)
  done (took 1.648661413 seconds)
done (took 128.577780664 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103628471 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402051919 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072431023 seconds)
  done (took 1.597238248 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10662262 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137115885 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109216849 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136329554 seconds)
  done (took 1.58876171 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097565037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127806505 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110169102 seconds)
  done (took 1.429866681 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322802514 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190358113 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141761892 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106415039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12994315 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10248081 seconds)
  done (took 1.431829281 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097088391 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12783005 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097807962 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129983301 seconds)
  done (took 1.550006042 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094356803 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071669396 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101021098 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074988251 seconds)
  done (took 1.434855269 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113500539 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131835635 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104358794 seconds)
  done (took 1.447462723 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129250406 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138671129 seconds)
  done (took 1.36699897 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10527826 seconds)
  done (took 1.201106345 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117992599 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169989518 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189375567 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164404129 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227195432 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164805804 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141274283 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114175257 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130853828 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143696364 seconds)
  done (took 2.664081369 seconds)
done (took 17.565046631 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10307557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512952672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414056135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116333981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722533967 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380544846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047243466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146466353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165239052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094188464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13952194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676220683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.040550523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468680536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.997423104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371260046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704885117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092504055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120662044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093691519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.031355892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092079221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121765571 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092125573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704545276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426820387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09450107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377720999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092178756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126995491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384437433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122851998 seconds)
  done (took 17.166532984 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097453452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174661135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099421792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137066577 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123984249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094871492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124718776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09357427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180115541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122887706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111523568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121379209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126152918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094462459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14177596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0924929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126086157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093200796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120786329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122501211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111749067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120430427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094108851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122063485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094365591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136544116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123688019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093056979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121590833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098322436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127256469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0948217 seconds)
  done (took 4.836665449 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140202371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182116409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128487371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127156918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168433685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123498741 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20006664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118597671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183392363 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12323788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140090893 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093490365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156714082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124226643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114665614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121640607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096991021 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122515938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092625636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122678763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139887527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092852226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122454454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094037394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123223746 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108020597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123814309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121468204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093731456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1275447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100309828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124405416 seconds)
  done (took 5.158540392 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096749987 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126846871 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10905871 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139440975 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095730803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125590671 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097120375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124914695 seconds)
  done (took 2.020180702 seconds)
done (took 30.281111525 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111673824 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127266221 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107401035 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134596287 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103884425 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132617942 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092199188 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133500079 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135835231 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101718937 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137949186 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091962276 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124202893 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092444964 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135770301 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098833064 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134034949 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103112139 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134135967 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133165068 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09415308 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133939772 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103923512 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133908677 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104305028 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134074637 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138340705 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09935249 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122955573 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095054957 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125952754 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104604071 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125781824 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105292993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12693102 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097222266 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124222429 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094311057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133334711 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133371546 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100477583 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134179768 seconds)
  done (took 6.028707417 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107498514 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141625517 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105060448 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081627366 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117083105 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080700095 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138703902 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079558707 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110863737 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108136614 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075334001 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10712056 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0786037 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102785709 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076677198 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076180046 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109127631 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075959411 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07639445 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106497898 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079645011 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073067361 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109289947 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078841378 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075393602 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110415094 seconds)
  done (took 3.59207282 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100429812 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13686265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112330894 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184388418 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161296916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100205684 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132682103 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140543645 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109222026 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121476566 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096048849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150441435 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110794224 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128956234 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092342334 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137544624 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136536662 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093909879 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128400428 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113449904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139429955 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102323495 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142812757 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133147082 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092057651 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123344213 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096268605 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135731018 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097461582 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131598202 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13490797 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09585548 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123213712 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105628986 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126147822 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094483053 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142692701 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131946504 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101134071 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122578259 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096251342 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123072498 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113810367 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167600057 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092063102 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128721855 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129192876 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102936904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.1217827 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110710237 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1316981 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092811014 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125427712 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09234339 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122500539 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107323796 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123512619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124656163 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101934135 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124342378 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106138463 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125919911 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108094962 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121868923 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10077313 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121110478 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092856915 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120537579 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144371007 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093818338 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164566039 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093310556 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124132124 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131749606 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099742009 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128360305 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092229371 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13774634 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102244719 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126827181 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.1013701 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125553453 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095584489 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14042378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124259673 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09427026 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123439939 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100032569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124910157 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094089001 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13622933 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093699719 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126069134 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111413154 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121848136 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12322627 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100231843 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12656727 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093067143 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135446549 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099191985 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122638355 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131893357 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093696408 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125975331 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102613355 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126859695 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092028973 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127648627 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099394614 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123531023 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095439552 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126211784 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094387378 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132117821 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098286062 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127451088 seconds)
  done (took 14.861337609 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231155851 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215339223 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236716086 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261292793 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135442527 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11471961 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213494129 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155240936 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123837616 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160754317 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16228721 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181028018 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138941501 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179794456 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139528598 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123255666 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11206344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164099687 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215447317 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291045434 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11365878 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132322667 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162857675 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160855926 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107041337 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132391824 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141000705 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105919991 seconds)
  done (took 5.739650993 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107166143 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15644346 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09890802 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144652683 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149736224 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093220969 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128202048 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09428047 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135550014 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135927189 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092350283 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12959066 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101055767 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132450684 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123995267 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102417797 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133228307 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095704762 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126196536 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097743954 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130648694 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102389876 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127280028 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122962255 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102534474 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122225944 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08637625 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142862685 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122659814 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117340387 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12115847 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099962532 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133103376 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094220052 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122586011 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094669866 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125716445 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095237983 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12450608 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091579624 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12231361 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078304712 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122171806 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13643198 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098811884 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079719526 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128757251 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128668536 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094396864 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120895311 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096219356 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124959228 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096553723 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129914782 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098558232 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123791833 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09635504 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116146617 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099280314 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124889634 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084614349 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122198724 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09873382 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118182945 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100402802 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128070159 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091994421 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125471992 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09783743 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129952548 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095227546 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126196053 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091639735 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125472062 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095884455 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128216519 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09647867 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122387633 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123278311 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093535111 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075531967 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12355695 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075160851 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127158397 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091192965 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123077989 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094943888 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129981333 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137756859 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095807674 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131808153 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093491422 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122475769 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096242377 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113835417 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096503982 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138353697 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140479948 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093657265 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121495106 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106662968 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126473323 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093627361 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106450895 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100657897 seconds)
  done (took 12.964254191 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126893262 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152997455 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096245405 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143077981 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155979554 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158181855 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100463679 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131012597 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094701672 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142634291 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093742431 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131802491 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096857356 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13670307 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156775843 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102611737 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125087019 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106070156 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131350799 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170045731 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111408946 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142445711 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108124744 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124226406 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128676015 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110623022 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161592268 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109078673 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136584198 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142542967 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108022874 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16156336 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144022814 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097740996 seconds)
  done (took 5.482809277 seconds)
done (took 49.772635461 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.230326512 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448055112 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202659103 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.102400117 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.217985161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.23625967 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217355779 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202507469 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.801257546 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205205622 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.441555147 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.844197188 seconds)
done (took 60.286040232 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.267121302 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.355475974 seconds)
    (2/2) benchmarking "String"...
    done (took 1.470882764 seconds)
  done (took 3.961022951 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.553165786 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154652224 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.466659652 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.205637516 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204505373 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.498034828 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.879896286 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.570812384 seconds)
  done (took 28.11448573 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.21362191 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.603549164 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.953811336 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.951039481 seconds)
  done (took 18.859493221 seconds)
done (took 60.888618029 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202081192 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.279711278 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.225548458 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.190311052 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.317428263 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.24259581 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.515081573 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.449558618 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.215788284 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.194494729 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227821176 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206655418 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211295294 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.529007661 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.21719023 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.209666857 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.291221754 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.655647669 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.620821872 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.22126963 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.230550234 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237106243 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.238557721 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.211461686 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.258930367 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205351298 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.222406923 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230798101 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.780455569 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.208651133 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21413421 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.734983683 seconds)
  done (took 192.13384195 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207829955 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.205515286 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.288603576 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.245854062 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.638399669 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.4094676 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.367246006 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.704572114 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225967232 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224991732 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.460593415 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.211771618 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.533902568 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.200748317 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.216008764 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.287331924 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.50440316 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.524226674 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.228020939 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.488460783 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.234901203 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.478748423 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.391426804 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.409759814 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.264948478 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.219819438 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.222414383 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.249910876 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399440441 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.434540663 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.231914365 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.24648176 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840947252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070107288 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.233962827 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.211912519 seconds)
  done (took 150.453486052 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.509913416 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208429364 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208574121 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207981916 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24115952 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207492807 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791100576 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797695096 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.709421253 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.624916367 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276943788 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470025617 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208012506 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303792059 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22121628 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209661325 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.223057465 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.253225559 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209962908 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210140183 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794859394 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225201494 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.414895878 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216752704 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210570204 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2406233 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601344372 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209284392 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243524704 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.534517754 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25872912 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210368932 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.572174448 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.15975704 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320722071 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211742497 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242462531 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.210578939 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.209547479 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483362321 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209964106 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21078939 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213228149 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.827281871 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210162558 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.797349536 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215138494 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.144801938 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.210240302 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212390031 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.123444753 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212222401 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.730408541 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.2275603 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.210423869 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214565633 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.211401162 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211520271 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244720821 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.116028833 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.313449389 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226902427 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.215495404 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245988453 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.211745779 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.367685784 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212085332 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.150975744 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271219014 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.429263093 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792058361 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215673271 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307533806 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332835772 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214949112 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212452146 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.212460947 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213333875 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213263361 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321187314 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.21307466 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.635894283 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220498707 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214113034 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213138985 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275504862 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309261957 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214026998 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562226271 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.212536144 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.213141863 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948316983 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308671762 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.213542954 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214019067 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213587864 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.639906928 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798249373 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.467540183 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21930703 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.125982599 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.2170751 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.65641771 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776397712 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.828852164 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215879892 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32237316 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219156553 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.216317191 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215216178 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.243624806 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230791994 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.273651151 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21478808 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613796604 seconds)
  done (took 349.412460689 seconds)
done (took 694.645152494 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.915721268 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866149696 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.003837364 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.877091283 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.866631221 seconds)
  done (took 10.674241795 seconds)
done (took 11.816712451 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403838353 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406871664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279461949 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.403920154 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244748198 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418437274 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382717504 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236497552 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316197348 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295079692 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314150062 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265710571 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240382585 seconds)
  done (took 18.35215145 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548015029 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538978709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277905751 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537567115 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253314291 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573741888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416252243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429302668 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42882435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246630249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227771466 seconds)
  done (took 16.623381042 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539197726 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.555164123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281240531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536726799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254430503 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541495905 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423658109 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435971283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432048437 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246118819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228632946 seconds)
  done (took 16.620048143 seconds)
done (took 52.737190918 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.223683936 seconds)
  done (took 2.369434817 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.260334512 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421291174 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243245886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227909785 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224557779 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.22511747 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22937931 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225695127 seconds)
  done (took 11.204029831 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224492815 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.224075187 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.223982845 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.225443069 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223867319 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222375168 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222072741 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.221975532 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224079954 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.222612865 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.222108784 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220935427 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.221335317 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225113824 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224127383 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223613338 seconds)
  done (took 20.718995851 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223640519 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221796155 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221997092 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.222711876 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22335105 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222931794 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222731121 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.223223144 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223082223 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.222528682 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.222283971 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223058719 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.2226393 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.222637999 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224074137 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.224145412 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221867202 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.222924284 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.228043822 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224464793 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.224360478 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223597638 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.224903197 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.224474948 seconds)
  done (took 30.510595713 seconds)
done (took 65.945879051 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.422892734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.954309144 seconds)
  done (took 9.524609453 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.227208101 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.226468174 seconds)
  done (took 3.60490306 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.227181131 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226171685 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225765705 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22611005 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22736784 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.225732176 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22756264 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.22579786 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.226366143 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.226121297 seconds)
  done (took 13.412855688 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225572345 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.226330096 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.223318006 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227172495 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.227301856 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223895662 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.228134365 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226608241 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.226360906 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22512673 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.228400807 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225347247 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.228065102 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.225370951 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.227684695 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.224495371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225466958 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225937845 seconds)
  done (took 23.219567709 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228063924 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227747809 seconds)
  done (took 3.606763061 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.227139736 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225306654 seconds)
    (3/7) benchmarking "month"...
    done (took 1.225800903 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225864015 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.226954416 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.226787188 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22649447 seconds)
  done (took 9.734660029 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.230371658 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400310918 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.483134551 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.852505245 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229294232 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.232878218 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.105076614 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232466192 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234747029 seconds)
  done (took 14.150456502 seconds)
done (took 78.400040999 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.258396202 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.238294282 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.421854378 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.240236351 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.24208591 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.567223282 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.240819952 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.344462255 seconds)
done (took 37.703162981 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.240642072 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.990195374 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.996313046 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.226468554 seconds)
  done (took 11.364103176 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202415792 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.181741571 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.219666663 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269066077 seconds)
  done (took 18.026897822 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.290877203 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564437342 seconds)
  done (took 5.005501221 seconds)
done (took 41.786008415 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231538524 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231850669 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.230712116 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.228411202 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229924641 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.227759904 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.229247606 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229608541 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232494934 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23214219 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.230616744 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.231841435 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230986774 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229375105 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227409198 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231773334 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.230079459 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229840955 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.229434575 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232769642 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229500029 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232073501 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229276945 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229183859 seconds)
  done (took 30.681944497 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.232171953 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.230098976 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.233073644 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231848916 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.230218679 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231825043 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231090354 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229737772 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.233197104 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.233299117 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229255754 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.229844194 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.233329535 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.230299779 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232996521 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229257738 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.233418715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229711418 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233827634 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229685693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.234024607 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231594951 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229362849 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232580204 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.231416696 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231953379 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.234726949 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.23272766 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234458776 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231563076 seconds)
  done (took 38.106825516 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237721888 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240708976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.235234808 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.233526668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233195543 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.233984615 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.233199244 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.234182731 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.234651236 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.23442774 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23399666 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.234241666 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.233086214 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233537391 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.23401308 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233710088 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235425962 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.236461324 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.235837439 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.235269016 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234535753 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.235323374 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235485921 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.235391162 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.234919028 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.236499184 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.234700712 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.236374248 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.235039871 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.236814227 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.235667083 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.235383668 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.234569851 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.236417082 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.23770547 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.235318668 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.240624503 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242791173 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.234941795 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236228915 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235570274 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.236164273 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.236218686 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.235816916 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.236661673 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.23574507 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.235922926 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234377324 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.236499077 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235309355 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.236663982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.236922661 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.236972247 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.236206618 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.236427156 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237382396 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.236876434 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236091859 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.237133388 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.236670302 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236751926 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237880583 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236385726 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.236228764 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.238082279 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.237034735 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.237280699 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.237990266 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237153466 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237310591 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.238520919 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238706615 seconds)
  done (took 90.1538093 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23644105 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236015806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.235414912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235558985 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236795178 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237481437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235500177 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236854704 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236399533 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.237972337 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238456075 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235116444 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235985114 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237931646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239714751 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.236463543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238075292 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235675562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.238085093 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240737757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238668525 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2369603 seconds)
  done (took 28.376226351 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23976677 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242277491 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.236139965 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238566993 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237324979 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239356526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.239176195 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239671323 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240344913 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237381671 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237862211 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239583028 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237637718 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237109408 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238267035 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239616603 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240502746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239927095 seconds)
  done (took 23.462651683 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240236757 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238476438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.240533891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238359224 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238921073 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.240590938 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239484974 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24115415 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.240177078 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238991324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.241807824 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241920839 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.241758947 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244802707 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242194169 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240024335 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241709417 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238310664 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241588526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238843713 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239482668 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242683235 seconds)
  done (took 28.455353682 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242262217 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.242131945 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239864904 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23840098 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238861873 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.242123485 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.242484376 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.239553474 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.244470384 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.242527538 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239191652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245302622 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.241675831 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.241031243 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.239947003 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241627767 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24489201 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240588693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242764814 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.239278461 seconds)
  done (took 25.992589261 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243102036 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242821526 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242962004 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244129448 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24223695 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.244334136 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243774259 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243434699 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244489667 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244185011 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243506506 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244472698 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244912441 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244734243 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244919925 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245217974 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24557705 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245598858 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244164055 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244554214 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246155748 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246191591 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246306068 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245483538 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245906725 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243865132 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245471178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24514398 seconds)
  done (took 36.013103089 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246947472 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244349021 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.242132072 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.243963431 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.243725732 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.244251515 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.243081868 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.242910062 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245393182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242784881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.246745228 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.245982591 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245649774 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245650434 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246533852 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245943618 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247411396 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.243658223 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244057446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24487538 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.245800658 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247278666 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.24715559 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244244375 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243040768 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247702559 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244026724 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244542373 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246396887 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244285195 seconds)
  done (took 38.517699764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.264702331 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265809219 seconds)
  done (took 3.697222344 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.245045545 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24775628 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24720986 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244746762 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243479208 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248316066 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248669729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246365381 seconds)
  done (took 11.138843158 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247339858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.247790059 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.249086695 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248560916 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246961677 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248012591 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255986329 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266407838 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249842553 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.250123854 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254601729 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.256294053 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250505148 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247620967 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247696852 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250523542 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.24815445 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247974995 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.249164571 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.249547234 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249522453 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251042024 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250720304 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247648555 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.250029324 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.259454566 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27451161 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249036422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249523758 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.254179817 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.249683776 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.248898937 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.250148973 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.250788294 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250777147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250109505 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257938793 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271179148 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.256800133 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270294327 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252111128 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.248176499 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250818421 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251185893 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252091311 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250419515 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.251343399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.248590047 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249898628 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.254083378 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.25689849 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250095219 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250161128 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253968653 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.251351674 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258550592 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.271619612 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.254246685 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259913016 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.261527813 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.283251912 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27659455 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25371063 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.252232007 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261867589 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275711084 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259439396 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.269798274 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25069633 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251738129 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258762111 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282757486 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278300009 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251308698 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252303186 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25432002 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25344105 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252049922 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259672843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.275135318 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.252472588 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253954284 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263362506 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276184233 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253377984 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.254310092 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.254197058 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.253800344 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253911675 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263531505 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.273707137 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.254389503 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252715837 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252554591 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.255407446 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.254275894 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253831175 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254861585 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251982046 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.253979207 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253394397 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256909464 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262956813 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254223821 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254291158 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.261746868 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.274760398 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254973467 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.261881094 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256219671 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254609913 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.256014373 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260667961 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.253366192 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258599333 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263178963 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.255580408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255957738 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255483531 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.256029142 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266317634 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281726051 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256441607 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.257720113 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261175573 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.267675299 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255541551 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.260005397 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256688976 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.254642501 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.254181747 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.257311306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257586191 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256860616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25664267 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258288603 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.255496913 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.256991645 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257268508 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256697641 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257814558 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.256476524 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.258484888 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.259652205 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256409587 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.258168412 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26293319 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.277528242 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259261579 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.258912542 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.256414285 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258541349 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25966654 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.257507367 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25822989 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259020696 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257686434 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.257416884 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259172585 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.259464024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25828376 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259328802 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262358703 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.259073118 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26272903 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257159992 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.257410293 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259178297 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25789881 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.258134726 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.259240765 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.258881802 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261941066 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265442418 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.259644957 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258147636 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.261230119 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259982295 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259225765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259138828 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262646649 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266845959 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259958853 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.265301004 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.279276192 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258996957 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260578226 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26049317 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.260588701 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260468856 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.264481269 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.268159176 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273380615 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285582451 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.261113959 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264985354 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260936265 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26465678 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.264699693 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262204551 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260652802 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260918175 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259708705 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260544918 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.263350188 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.261056687 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.260015841 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.262482835 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261219522 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.261604526 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261435768 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.261643007 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260984104 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.259512917 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261258143 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262027229 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.261938778 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.259961813 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.261107071 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261842462 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.26291472 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260749743 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268336358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260587053 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263653509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26392557 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.26333008 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.261742692 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264609123 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264354995 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.261708833 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270209508 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.281088584 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.263016908 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27072089 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28233139 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.262666816 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.265385306 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263613375 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.260383797 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265678875 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.272450472 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263547582 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263478708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264063184 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263252035 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264714658 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.270258131 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.281493805 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.26242364 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.264933512 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26606116 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.262787733 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266524712 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.265746933 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.264760993 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267064687 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266383175 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266083873 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264449295 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.264141142 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.265398121 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.265458471 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267636267 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273368169 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.269882254 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.264541006 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.268189519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.266695044 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.269818172 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26553794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.265535466 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267512286 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276090473 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.289353939 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271626647 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285943084 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.265475522 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271477195 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.285681635 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.271155373 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265709092 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266114415 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26566699 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.266194813 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.263226277 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266643969 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.266887436 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267873204 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265046499 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.26692887 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.264549066 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.264282059 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.264457476 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264103533 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.265432134 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.264326072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264877242 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.26860855 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266672166 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263378267 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26546468 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270145134 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282346205 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266901123 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264865249 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263984228 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262456375 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266007607 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263179557 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.268281947 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272001076 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.269245509 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272135647 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265333088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273342884 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263208117 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.2669302 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271207356 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.26199817 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264549385 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.265234204 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264443315 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271980392 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282482044 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265296834 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267281816 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263620281 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.265108972 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.265820298 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.264826427 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26335826 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262658722 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271729894 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283132099 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269928184 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266123089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261068427 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264498346 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265237958 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263640194 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268098947 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.26502 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266831282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264752843 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265311793 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.264793413 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264733751 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.265511257 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.261275936 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266347805 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272056127 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.286913224 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269001176 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.26644937 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274001779 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284220346 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271582787 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.284174889 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266861049 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26513916 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265742294 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268945674 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266031118 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266369216 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266244254 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.267601146 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270591089 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266161031 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268110099 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266214301 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266976823 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264755452 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275782131 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28983717 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268547343 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270948314 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264223821 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266758382 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.271904662 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266558096 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265355786 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269620378 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278951819 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275641233 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267396945 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267305585 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266784076 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267001905 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26807626 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267931176 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268380828 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268904749 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268133919 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267893454 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270981954 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266239722 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268029506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269570684 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269804445 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279033682 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288115916 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270140376 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268437525 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.268653911 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269176676 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270248004 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26865522 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269075422 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268123704 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.270045237 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274955652 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275774504 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271209886 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.269910596 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.270408488 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269139587 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270060199 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270135157 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268795927 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270715257 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270751173 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.270262551 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270865196 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.268278285 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.270510331 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270420253 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270564619 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273811365 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.277224237 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271157388 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268554779 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.269621833 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270478913 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269495262 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27114748 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277825383 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293695001 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282154365 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.278752115 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274307782 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270751138 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273197644 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278035997 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269453651 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270947033 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272471957 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.274103367 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272530351 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27349866 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271362499 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276591559 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.290963207 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271673279 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278687288 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.291478422 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270036461 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.273520519 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.274841408 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27241923 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269513975 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272397054 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271573348 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279169189 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292289891 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272424231 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273543145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272216815 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273232817 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276753425 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272748814 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274105438 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269706499 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273583808 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272037645 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273181892 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271185113 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273177921 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271428481 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275397563 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279042857 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270648165 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272962431 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273500043 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272647419 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272606574 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273718201 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270061119 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27038557 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27093582 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271721431 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272850356 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274133567 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270243989 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272528393 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273567777 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272023478 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27391299 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28190203 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280521221 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27069974 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271405155 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273798265 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275110981 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27278363 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273716532 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273045365 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274475184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.274831873 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272405107 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.273205532 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276418119 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287580215 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29210538 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273149395 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272607772 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278330055 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272564766 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270357122 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272955325 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275480949 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276724914 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279564135 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274636077 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281007073 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290888891 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274168221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279120196 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276544096 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279774513 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276950245 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274134332 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275444997 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278287225 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288497231 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273123746 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283730867 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303520947 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291806946 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274929114 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27462458 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272615969 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275326285 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275760779 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274848924 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275819849 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275746043 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273858642 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27601103 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279894304 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275732708 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277129011 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274761707 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27416523 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277116588 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273389582 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275390638 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275116821 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275525949 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274924496 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274668041 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274380227 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287560506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300529252 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277378256 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276071252 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274510681 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278575921 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.277777973 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287484478 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284449587 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274498769 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276599418 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277332644 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276430721 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276115882 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277463079 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277858427 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275926354 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.275025762 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288781528 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302897924 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280350532 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276911249 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276762081 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278076707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277846368 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278287588 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276498405 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277779556 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.280409064 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278251225 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276355282 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277488475 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280394942 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28483481 seconds)
  done (took 756.285773561 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275055989 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274424787 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274962467 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274090231 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273973451 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275206382 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274717277 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274539505 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273233829 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275792991 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274363462 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274691318 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274834465 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274276327 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274696252 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273955586 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275259343 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274405186 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274640983 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275835902 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273588418 seconds)
  done (took 27.960964876 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277500684 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274502065 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275164968 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277027566 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274072208 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277364363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275928217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277902401 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277356487 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274696179 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277158739 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277251819 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274282084 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274858017 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275341667 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278603101 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276565858 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274786358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.277467141 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274090748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277388757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275022758 seconds)
  done (took 29.269972795 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27607504 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275517247 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.276331235 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.273584637 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.27554163 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274197686 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.275640866 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.277918369 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.277689286 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.277073851 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.275211411 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.277094382 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282747797 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.2821156 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.278391584 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.277727396 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.420598976 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276772711 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277102442 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278121957 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.274161677 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.282740504 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.294598082 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.274856701 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.277030318 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277071445 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278934915 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278202134 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27757371 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.278975772 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281543561 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.277540592 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277799521 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.280950748 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277517488 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.279574024 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281974684 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279230174 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.277060783 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279738055 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288286469 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299438161 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279207475 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284585973 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.298439928 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.280287198 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281361079 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286023707 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277061737 seconds)
  done (took 64.042887118 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.278820106 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.280037103 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.275962609 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279498795 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.280793638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.279294174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279607093 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27921254 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277536874 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275770595 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279962151 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.277630718 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277947821 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281260297 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280716629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276531388 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277915519 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27679171 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278057862 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278376511 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.277385799 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.280767869 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282547255 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278161764 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280515682 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277276641 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277819438 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.280602729 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.277930336 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.278469432 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280789449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280286925 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281573423 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279054658 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27804074 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280938805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283178122 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.278963071 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282328474 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277509487 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282145018 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282775725 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282264424 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282012706 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279760463 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279370753 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28000006 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.278844166 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.278946847 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28171005 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.282892309 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281108788 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28205604 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277795686 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282503546 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.282958159 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.278664905 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.27946639 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281007891 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28010377 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.278068052 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280301146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.279692249 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283554287 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.280601651 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.280878512 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278974445 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282297561 seconds)
  done (took 88.225131953 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280712359 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.279723316 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280245823 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280249887 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281031391 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.280761471 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280413097 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280074937 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279479822 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280118168 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280208236 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28264971 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.281301861 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281621105 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281378443 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280709418 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28102269 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280316039 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280485248 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281524291 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281894845 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280730111 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.281414807 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280008945 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281242491 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281356241 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281415149 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281253491 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281093026 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282519042 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281174018 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.279680861 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281171762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280377274 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.282874129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28174712 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281264817 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282028757 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279997417 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280307961 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28074405 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281191105 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281438555 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282656854 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282414265 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281818959 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281326533 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280257863 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282152596 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281742038 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281500275 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281288955 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281853549 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282177313 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281865557 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283194787 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28131547 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281542786 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280656075 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280897358 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282597341 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282968752 seconds)
  done (took 80.636667749 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281618979 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282509736 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279565275 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279148426 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282407968 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281276625 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282976907 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282381697 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282088777 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.28398528 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283031744 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280854196 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280747786 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283503264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28086266 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279888604 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280711015 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279623161 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281571252 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280002226 seconds)
  done (took 26.827456248 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281705033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28371074 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279567138 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280623056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283024458 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279284403 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282578973 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283060277 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280040636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283084901 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283117854 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281647013 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27879175 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280107363 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282434988 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281547108 seconds)
  done (took 21.702643342 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.279424193 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282979946 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282668652 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281523161 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.279821477 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280474994 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283496524 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279920373 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279850126 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283577632 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.282193921 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282719743 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283630129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281966958 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281308405 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282882222 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279287116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279715483 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.283477366 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.282574489 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281234886 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280371542 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283891461 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.283825719 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280254359 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280482119 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281029253 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.280585285 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280417006 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282357099 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280920055 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280719726 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280771665 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279619944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282307938 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279671023 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282319386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283411734 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284200962 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282641301 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283914549 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279291537 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282471925 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.283532348 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281106554 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283627681 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281556839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281294241 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281572849 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28195658 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284699541 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28377776 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284999943 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286483561 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283536836 seconds)
  done (took 71.709437222 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28371612 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284186407 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281408961 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285555206 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283883639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.281232419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283922664 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283084239 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281765289 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284709205 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283353517 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285321314 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281442592 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284060923 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282675172 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2850325 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281988766 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282723303 seconds)
  done (took 24.299818173 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.281763982 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282137864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285110967 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281251145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.281155189 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284947959 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282959767 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285467203 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28558818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283280666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281313708 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286295143 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286036066 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285714981 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282480177 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28252657 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285688131 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284646185 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.282604813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282096908 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286615392 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284605212 seconds)
  done (took 29.445055917 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.283428424 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.284142241 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.284325053 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.300444101 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.300249716 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.306001335 seconds)
  done (took 8.959454553 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291185705 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286114008 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28440544 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287856625 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287462181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283861088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283785516 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284061683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286781265 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284355197 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284473324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286118768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287781821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282760754 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28726785 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286700141 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285123225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283786587 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284424598 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287015452 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28441877 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28800064 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284011652 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283937212 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284075165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284793361 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286914007 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285135688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28530784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288012345 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288955154 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286297171 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286805366 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285405303 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288379333 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289235255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285590151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288319744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288148464 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284873013 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288414905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28828293 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288640824 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286686536 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288509588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285591868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286048856 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286020827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285917391 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2891696 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289174966 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286916646 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288815453 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288267991 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288470166 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288884183 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286247317 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287348967 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289202484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286425423 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28674846 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289205771 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286769441 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287391034 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288710202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286006319 seconds)
  done (took 86.145190941 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286084238 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28808298 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287666994 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289180358 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287579305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287238205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288141304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287348488 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287948528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290479061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288783095 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28802275 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288364487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289184077 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287905213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288037438 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288791398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289834798 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291843015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288570507 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289382506 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290590312 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289498041 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290176604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291628499 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28883263 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289528294 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288659414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291285149 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289729545 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288232161 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289929029 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288877842 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288887853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28858227 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289762638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290766908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289002342 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292511229 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290876454 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29101625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290730851 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289744166 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28934582 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292185855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29068594 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289141174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289463131 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28970853 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288928674 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290807349 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291381864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290960257 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290111223 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291270238 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290310477 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289969326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289933027 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294392836 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290572743 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289076363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294478109 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29061723 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291314512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28957447 seconds)
  done (took 86.329195117 seconds)
done (took 1757.587240274 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.321600311 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.362888517 seconds)
  done (took 13.894164931 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452161745 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.405063072 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.290989075 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.315953057 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.292033778 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.309306163 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.307388945 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.292093349 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291928879 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.292041891 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.29277548 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.479550241 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.347638254 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290660559 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.29068696 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389080996 seconds)
  done (took 42.550007273 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318482156 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.298711729 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.401836801 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314990844 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.319612189 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.471103909 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353399295 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.296453198 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.454336285 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.336509213 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.744023093 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320604563 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.297211949 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.327929478 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314295381 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.471413027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.524444454 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.748223369 seconds)
  done (took 29.523979701 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.711544905 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.310062547 seconds)
  done (took 9.233504587 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.316620489 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.321568507 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.333022946 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.307434845 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.299534547 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.295072223 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.310678106 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.310422027 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.320551175 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.298404564 seconds)
  done (took 64.326009584 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316085308 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299373655 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.298832023 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296052918 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290064321 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.303560165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.298254814 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295351006 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.699654571 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415318247 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.315680172 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.305881817 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314297048 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.299517992 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.296367118 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.334077741 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.482926435 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.314941982 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.294755332 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.304533844 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297708646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.40170125 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338016752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297069424 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.416137334 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.722065992 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302262518 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.305997094 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.414922517 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317151511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298915905 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299537271 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302176245 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.855534791 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.737404996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.307088616 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.323736171 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.308323771 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298887341 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436328962 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.319211297 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.306143159 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.292755499 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.704480792 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450894651 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406796904 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.445381816 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.301451851 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.302508336 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36016165 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.302007245 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.302680204 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.329895576 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.034017834 seconds)
  done (took 108.829552292 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.321863297 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.780841563 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462941411 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313789186 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.137052962 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.077596979 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315437517 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.557884334 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.319447118 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294861671 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.574115647 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.782184841 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315661717 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.358508698 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.843206523 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.31952377 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29731703 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.126539649 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315419772 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297163519 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697954247 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312060665 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29544255 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.553395725 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332601185 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.73538239 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.758062066 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.816233638 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319701284 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.295937347 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.743357494 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323626344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.332488771 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29720267 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.558577932 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636010647 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627725381 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.319286287 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349854358 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296484185 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.31720901 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.738066238 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643591874 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317040357 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.296055162 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75812871 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318015481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.303751111 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.296817368 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50125219 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.195288895 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296108378 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.752851087 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.296655696 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.552107469 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.387346337 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361396534 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769492374 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324553075 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.449465141 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325688143 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297535371 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303220858 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301674499 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298823309 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625759144 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.652886597 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300927912 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628539562 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.760410556 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318905679 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821275916 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.188626534 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306498278 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.358675072 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.29728702 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.899284944 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790421236 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.342131954 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.298694072 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614616395 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.321453082 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.562939041 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312633532 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299265348 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727208372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.31839096 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.327361426 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297715832 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.313904693 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.073065327 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301613338 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.556594186 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.367805414 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299639042 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300905512 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.310724596 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299180222 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.304963855 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.307286556 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810651348 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.321001222 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.616545853 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316887592 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305169922 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305765525 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.299105223 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299930855 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520826028 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.816683592 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.307551513 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301734258 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.309092843 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.304584381 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.492456924 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.305622637 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.585669876 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317607091 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301348377 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302691768 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.11066419 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328903777 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30190963 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.320382132 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.139065317 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.521305291 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.319376475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.300002864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302063073 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316500352 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.738218803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308941914 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.370863321 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.297426633 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973303852 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330117191 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.322325644 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.835896256 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280651871 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.272941744 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288527546 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268995555 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579540091 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.529760291 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.540565638 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.263591922 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.260909437 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923386975 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.280056234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.394465379 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279413447 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.261784907 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.457664273 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.448349583 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.261706465 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.813432763 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.259126925 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472674249 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.257379141 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598718519 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.729498318 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27335555 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.26202113 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945170896 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.965325845 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.924035366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.258811334 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.522661239 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.252461135 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.709051853 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.251397243 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.25154618 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.824471778 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.250201162 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.251633092 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.251264177 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.251315487 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.314493204 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.424586507 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.705237246 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.257992029 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.692654184 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282831934 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263678729 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.258389129 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.25526632 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.602292175 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.25616566 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.253523055 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.290455519 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.251569333 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.25392877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.702140351 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.178127275 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.251798522 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.404746293 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861805602 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.270818887 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.252643666 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.91002309 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.447599018 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781741576 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.298304885 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.540068289 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.267926709 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.291398904 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027707089 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329055959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.703188294 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26708245 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.26859374 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830622695 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.268845448 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.333696688 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.254124207 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.252786039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774364705 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.268580029 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.252857876 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.689151417 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.25787959 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50415998 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.253321982 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.263938621 seconds)
  done (took 1100.916730257 seconds)
done (took 1370.480291103 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.253499329 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.254685279 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.243064964 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.260329097 seconds)
  done (took 26.190070256 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.264268393 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.262077073 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.260852444 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.258857793 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.263705596 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.260739644 seconds)
  done (took 8.748515074 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.328968133 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.256001175 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.260922855 seconds)
  done (took 19.024081212 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.467024037 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.481811245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.610292363 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.34681788 seconds)
  done (took 10.084999311 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.262238799 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.26169592 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.261742215 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.264779381 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.264400939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.266372828 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.265541422 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.265174164 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.266462216 seconds)
  done (took 12.557526767 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.965427367 seconds)
done (took 82.745723218 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.292891178 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.142987315 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.272670331 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.266306723 seconds)
    (5/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.441533231 seconds)
    (6/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.804830702 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.258846507 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.287617909 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.154803791 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.555969991 seconds)
    (11/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.291203243 seconds)
    (12/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.495804153 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.517002371 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.313760665 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.285545554 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.269661828 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.669283905 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.848080787 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.951023114 seconds)
    (20/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.756592245 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.4894147 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.689531554 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.974869751 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.363848563 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.285753997 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.244339698 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.467165814 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.469870265 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.367402193 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.05717463 seconds)
    (31/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279529808 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.590085507 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.97815452 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.059288761 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.389271891 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.261303498 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.248920498 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.324055461 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.436465847 seconds)
    (40/309) benchmarking ("sort", Int8, false)...
    done (took 4.31000997 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.286996742 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.12523261 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.266222227 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.260395437 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.546077076 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.258904387 seconds)
    (47/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.640865507 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.154537302 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.281430159 seconds)
    (50/309) benchmarking ("sort", Float64, false)...
    done (took 5.521617863 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.66742733 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.66704342 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.887265084 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.980632947 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.376367513 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.459684197 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.242767658 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.519851491 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.336364442 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.680259865 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.800313081 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.38595759 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.261649451 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.568301232 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.360397059 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.673210049 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.339288664 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.274001844 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.243396763 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.16082003 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.249023101 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.284234392 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.614756299 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.283514669 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.262349337 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.253644354 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.354236482 seconds)
    (78/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.26114048 seconds)
    (79/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.30849456 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.077050253 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.285670188 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.071179036 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.2694957 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.27655894 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.36233418 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.883354702 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.566882137 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.328500497 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.272235612 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.455815677 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.731655183 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.413138287 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.050056952 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.410136457 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.440954638 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.403126668 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.852637333 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.290032011 seconds)
    (99/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.3483874 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.980394543 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.663780014 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.318487471 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.244165045 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.642533845 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.652715644 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.366873115 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.780976542 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.244528895 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.626319794 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.985865703 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.116806865 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.263496646 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.279762661 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.644357191 seconds)
    (115/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.270289933 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.45507682 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.002906636 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.271431583 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.289376203 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.357112754 seconds)
    (121/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.772605995 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.290995595 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.513911604 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.297002454 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.350272977 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.464661413 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.510456565 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.653365324 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.127732561 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.862737788 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.457446681 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.366763208 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.619634778 seconds)
    (134/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.50747585 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.288253515 seconds)
    (136/309) benchmarking ("sort", Float32, false)...
    done (took 5.252007327 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.84546212 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.336762812 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.637924118 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.271595129 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.264750852 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.372312275 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.814824738 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.784731569 seconds)
    (145/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.050575006 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 1.77289587 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.301137468 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.329458873 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.53931854 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.344682778 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.372025631 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.260574566 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.977290301 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.521456421 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.286307839 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.629721541 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.36372723 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.563772339 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.9830332 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.088909327 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.324583954 seconds)
    (162/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.59953203 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.982564484 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.289135052 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.287348185 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.115901739 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.248097829 seconds)
    (168/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.98931153 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.265579809 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.552177122 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.300777004 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.569939063 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.290408016 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.287007426 seconds)
    (175/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.263608365 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.269188353 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.479110225 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.398948606 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.091979888 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.596498026 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.597750631 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.943922995 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.314203191 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.274943893 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.466338057 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.255117962 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.383215839 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.799866214 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.024966723 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.28395314 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.540693235 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.361854175 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.321031428 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.237194671 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.275653437 seconds)
    (196/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.595583399 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.824695826 seconds)
    (198/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.772533649 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.385235626 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.606015533 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.257563854 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.694846022 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.864655456 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.306369583 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.461549284 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.31697012 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.366600907 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.267744985 seconds)
    (209/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.267783428 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.260752654 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.35357162 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.260235435 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.617745953 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.307138528 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.642358366 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.345712149 seconds)
    (217/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.287355171 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.34146001 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.27374442 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.731613449 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.546749634 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.709261806 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.589382302 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 6.270995598 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.915891783 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.476769057 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.882128645 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.36775314 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.391752712 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.500504772 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.504513106 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.591057664 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.108991472 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.656264646 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.299153448 seconds)
    (236/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.260047229 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.293536804 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.791740708 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.097284961 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.264653186 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.156429348 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.301573811 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.694660813 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.245901006 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.302965077 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.260844467 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.894817452 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.732988276 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.962402714 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.590108792 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.246338713 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.606780151 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.113605012 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.545508571 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.276637851 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.380052865 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.462590368 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.33171528 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.130677637 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.579100745 seconds)
    (261/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.451925098 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.61411277 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.906562839 seconds)
    (264/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.640093341 seconds)
    (265/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.340238554 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.2868986 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.242285504 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.287022123 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.805778347 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.250890564 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.375325074 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.643748664 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.098474574 seconds)
    (274/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.992236092 seconds)
    (275/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.289044415 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.241771744 seconds)
    (277/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.852803868 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.991570643 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.610227337 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.727477171 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.415939933 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.331337024 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.248798533 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.368605683 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.355580791 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.26191149 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.36413859 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.972363066 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.403660456 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.378514679 seconds)
    (291/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.263088269 seconds)
    (292/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895374378 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.348333845 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.06854157 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.243340298 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.716766701 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.511632353 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.305666964 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.348066087 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.272159111 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.052759487 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.578199721 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.472028889 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.272397096 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.285330931 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.290843223 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.811777495 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.273413479 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.289976959 seconds)
  done (took 893.837861306 seconds)
done (took 895.018148534 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.296097467 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292581912 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.273828867 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.295787184 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.38725946 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.298868463 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.285634286 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.27737922 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.323511733 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.325076559 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.273926309 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.297644575 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.276139854 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.27563671 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.275257539 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290447251 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.267254993 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.274930791 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.291518105 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.285651037 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.291559473 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.274309877 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.324601387 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.29811626 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.280229307 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.279247692 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.279493863 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.295147881 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.388044342 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.278846217 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.278788156 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.288262089 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.26712846 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.274061486 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.272618355 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.294508295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.287279861 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.285828269 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.279986926 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.30859702 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.653210716 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.293091789 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.278044047 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.278678778 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.278176036 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.281258227 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.278417451 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.284165001 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290516913 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293526106 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.641605241 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.306923459 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.280131666 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.277384674 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.289011979 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.276770876 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.281333975 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294374479 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.297678528 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295714049 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.255328468 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.283539566 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.279528512 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.294077235 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.284774903 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.679116682 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.289813425 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.28308124 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.654824052 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.299981461 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.679088911 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.304192923 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.280391109 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.293218811 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.311463981 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.269461997 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.274341999 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.27840632 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.286493004 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.277841403 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.289704198 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293352308 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.285220257 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.281220937 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295282672 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.303272639 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.290401216 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.281442627 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.290201827 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.299366668 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.286785047 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.291025294 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.282912688 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.27569391 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.290561383 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.283986959 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.283770197 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.282833106 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.284924464 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.29115244 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.6566467 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314862467 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.276853787 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.278152492 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.281508126 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.294851687 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.657078306 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.298045761 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.30351318 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.329188323 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.282174531 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.27095822 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.290665419 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299602331 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.290116492 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.284856118 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.277695682 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.272288282 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.653163823 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.311640194 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.283727988 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.279786179 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300460824 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.284210521 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.279778148 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.289472961 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.290029195 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297800731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.404789735 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.293741575 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.314843455 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.280650914 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.285136931 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.305768729 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29991492 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.314036078 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.284874501 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299364297 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.299614927 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.279341576 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.294369814 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.293328913 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.285029596 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.29043144 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.278669228 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.306645452 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296995851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297713116 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.30399177 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.405081989 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.281625636 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.275829003 seconds)
done (took 216.455574474 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.342498397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.274785997 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.364504015 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.28041197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.37994204 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.379674028 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.278604421 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.279266988 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.279237152 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.654537087 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.279124978 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.279323045 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.278687517 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279471844 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.361469862 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.281838208 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.278010387 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.621421593 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.281615189 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.351104239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.281617446 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.278805022 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281146282 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.660861155 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.27402315 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.275137701 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.351146952 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.282219042 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.627202226 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.273997764 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.276886478 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.627605908 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.369370553 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.299124046 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.292350137 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.289325215 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.38116199 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.305500426 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.361342011 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.360703139 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.366821113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.32133449 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.275410975 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.278171152 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.283654028 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.282827678 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.279717887 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.308921392 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.283791606 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.281114376 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.623629818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.293200709 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.291190636 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.280539178 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.281903767 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.303508681 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.281495909 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.283087437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.37189059 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.28491809 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.343907669 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.663188758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.657699211 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.28391846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.280138497 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.282114361 seconds)
  done (took 144.92108056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.348900282 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.354468168 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.393341742 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.307030382 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.333837563 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.397575426 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.307853028 seconds)
  done (took 10.641728106 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.290713072 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.285211676 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.335464238 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334048719 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.28562613 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.431506704 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.286324631 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.295694914 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.282964038 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.336864218 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.287141529 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.287996067 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.291937608 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.286350841 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.333217179 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.295897464 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.399000257 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.286072086 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.285990336 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.435685757 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283042046 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.294338391 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.337521395 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.296670168 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.287334914 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.290861217 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855481113 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286944457 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.283427055 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.28621393 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28475434 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.323538274 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.287074044 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.280410929 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284646048 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402025892 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.287004597 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285767861 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288080498 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.281873736 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.287511175 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.288140628 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.288228931 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.286546196 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.288220954 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.309772437 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.287162641 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.288357327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.289378193 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.287207861 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.338258248 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288212597 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.286512757 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.287033171 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.343360832 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295657999 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.289487334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.285278825 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.289633364 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285741993 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438818857 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335218559 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.288813255 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.335548337 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.288637008 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289366249 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289239504 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.290583351 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342764661 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.288252386 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337156049 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.285736608 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.442704015 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.312245743 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.289979561 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.291546297 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.291460821 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289429519 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.290430737 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.295182188 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.28768557 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.290635795 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.293868521 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28775293 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288343154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.391941023 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397793637 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.287374021 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.303183408 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.297014248 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.288543718 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.344458589 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.290625208 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.288170719 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342954999 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.405658045 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.343771142 seconds)
  done (took 148.697056143 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.296573219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.300127524 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.291899971 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.307398323 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.291354291 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.291088829 seconds)
  done (took 8.983940876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.293389579 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.291491995 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.293080591 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292618793 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.292227799 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.292357388 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.291480497 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294125217 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.294817339 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.292715084 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.293720411 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.293781336 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.29386964 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.291465593 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.292906133 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.292221834 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.292541048 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.291176176 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.293961821 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292791883 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.397084131 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.292191591 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292671711 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.293954901 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.297989968 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.29388089 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.300889818 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.29273046 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.293903422 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.298268927 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.311290444 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.294403211 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.294630053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.297976051 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.295727667 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.293952774 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297130669 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.295334608 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292179329 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.29499448 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.295211199 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293635375 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.295653864 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.296442787 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.295531451 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.297246009 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.300302955 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.302329345 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.294488892 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.296572049 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.295973075 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.295598203 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.295514711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.297557286 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.297181395 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314096124 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.300362267 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.295380843 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.295129435 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.296936834 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.296647224 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.296179961 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.296428536 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.298468688 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.293593129 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.297337428 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.296776887 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.299372599 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296694815 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.296795569 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.297793584 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.294522981 seconds)
  done (took 95.599379578 seconds)
done (took 410.035976371 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.593057492 seconds)
  done (took 7.80328757 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.455104914 seconds)
  done (took 7.666497038 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.203048259 seconds)
  done (took 21.418027051 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.377335868 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.41209134 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.290807626 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.304285158 seconds)
  done (took 26.594714932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.581727574 seconds)
  done (took 7.792545722 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.289522023 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.29405137 seconds)
  done (took 13.797248886 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.635851916 seconds)
  done (took 7.847648343 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.483877861 seconds)
  done (took 7.696843441 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.293713911 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.316735518 seconds)
  done (took 14.078691101 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.683358008 seconds)
  done (took 7.896807037 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.270201075 seconds)
  done (took 8.485360184 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.290617811 seconds)
  done (took 7.506784566 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.363184472 seconds)
  done (took 7.576234242 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.101097631 seconds)
  done (took 9.314010852 seconds)
done (took 156.681447144 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.292063534 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.29168507 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.293926443 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.292398228 seconds)
  done (took 26.383135112 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.333955533 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.353341801 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.33378111 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.345028049 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.337182708 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.334500932 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.325533859 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32661109 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.344373944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.338722575 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.335088948 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.338071887 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.334957039 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.328015226 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.336440717 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.337292313 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.344992158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.334994845 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.32808831 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.337653512 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.301345443 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.345752999 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.337942528 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.303200028 seconds)
  done (took 33.230120607 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.821728648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.371951989 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.453657666 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.352047068 seconds)
  done (took 7.215790346 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.351256967 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.354816777 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.365881953 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.404053918 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.434165917 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.365621724 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.329760231 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.323180005 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.310422904 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.354972295 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.431166946 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.371574936 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.447670444 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.302896015 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.491964052 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.302166053 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.303100411 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.355572433 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.407246772 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.424485014 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.303897164 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.353664997 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.358288615 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.372784723 seconds)
  done (took 34.037504774 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.31581466 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.310979278 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.301850719 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.30107369 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.322777055 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.302794616 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.303750537 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.304964465 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.303597842 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.308854967 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.302306604 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.31580962 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.302120296 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.302117722 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.308917347 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.304017283 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.309950349 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.304886734 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.304006812 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.307470438 seconds)
  done (took 27.355761756 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.295776355 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.151186421 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.64838468 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.553254671 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.296743805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.296648802 seconds)
  done (took 27.459582119 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.372040342 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517223983 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.303504856 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.648704175 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.738723936 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.320201304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.305439388 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.538119575 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841785225 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.838505502 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.365388375 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370395142 seconds)
  done (took 19.379288864 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.308885613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.297263813 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.308561272 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.319929561 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.357252134 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.323612615 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.311331121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.299063197 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.364076745 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.376492711 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.325708437 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.358223849 seconds)
  done (took 37.170329424 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386409233 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344009354 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.253671713 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037325061 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024497377 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511524686 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.043301726 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.735288272 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.311591496 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573719099 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304480592 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389339693 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556375624 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3004316 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301473476 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.262086479 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550484836 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779291549 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303143763 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.156264771 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332074771 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310124593 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.255328592 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.336566916 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513144319 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441466364 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.561997268 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.078919137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589518729 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.313336859 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311762511 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301443796 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575323472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965957055 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422842106 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312690618 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995673478 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855310306 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.286212033 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.254927297 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.111541478 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305088274 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312535528 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302602874 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235965637 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315123397 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748178409 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.316159892 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.014867234 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303101292 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313909903 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396982286 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.305983668 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.872844973 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347607694 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310451031 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.301458338 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309207684 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875681 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.63890185 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313238533 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.244205887 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.672498035 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.257236794 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931418353 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.423610335 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.30748631 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.308541259 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238046739 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.226418361 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328727215 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450425551 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.327512424 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954538894 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992821068 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.33274558 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236795075 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855561467 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307408675 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.262113269 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531724292 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07965653 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240256383 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.249968643 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238238216 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017844357 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320202887 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.690467137 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.320513455 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.736201945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.324044928 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322880107 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32828234 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527411691 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.186453452 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304914516 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.121855402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45649984 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327495406 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733160316 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248356752 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.309641063 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561376401 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.518531145 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306588809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.303133674 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5271869 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323575219 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.329097486 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306602855 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323932449 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.868576961 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337178829 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.637794231 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33124936 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.084631473 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046737999 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317381601 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.415422344 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.321885323 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548076708 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.073255024 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475412746 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37555015 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310644135 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307789671 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.263417968 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.907523739 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.466918163 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.304784356 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312834712 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.325206012 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.308896317 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257726046 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.318009595 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32086155 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.085251752 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531114838 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321833681 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59142155 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242535764 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456772452 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317124629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.531391492 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494911747 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.324760792 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566965199 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315704135 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315623438 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329261969 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327606178 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410339568 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332695746 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.309528012 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.572110957 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.313727908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.313337135 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.288750637 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.096416641 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313778292 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.315902078 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.165171213 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877957606 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304021827 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319250108 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198241974 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.325703863 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379076341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316752828 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.320987454 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.077692851 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.139467161 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.322777716 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.308092013 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533833413 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319998828 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.202699814 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397050652 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.502227698 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884229381 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347286859 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.24445439 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.023078699 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.004485147 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312129807 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.514006131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312223769 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322411936 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322678664 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.83098924 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882233982 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337584918 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.208089312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.325309031 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322972878 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.3178025 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312495043 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.073447277 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.682353171 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323899184 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331480122 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456940128 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.3277237 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.246543964 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.829017089 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317919924 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314686969 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.091140511 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347379607 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.199374442 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851256612 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581000081 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.995946264 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332124272 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.311372852 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.354017204 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.312956701 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182369982 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343171713 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.341287815 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338529162 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.324537191 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.215536418 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.684289509 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883269549 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0359342 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859962203 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245059069 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.32421084 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.219783257 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.745263421 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256211033 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971354284 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498072825 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.768199913 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267031037 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509783621 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506030935 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083182939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331975063 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543550049 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229835738 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.199652187 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346109954 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525529908 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350039929 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.319810224 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250691499 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.594939103 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566027894 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.169628832 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395216327 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747974947 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.205245865 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110690206 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.315020623 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.670149094 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508591794 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868836213 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.703289252 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329561228 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323352493 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846222499 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333142264 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841849568 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932179371 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346656656 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.517995627 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260971579 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327233129 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.328578566 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.312363768 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.572598054 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.332597265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.578578007 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329152792 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251255653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328015761 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840922311 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.189678153 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.323815022 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317433974 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081395202 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33580979 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613298378 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.337648009 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.052347749 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345246885 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.25274315 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252856282 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.011777875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321720017 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294031078 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814499063 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.667802081 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348687548 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345415737 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186792926 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573534955 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.331969959 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889194335 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567161984 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.1089299 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348402605 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420042357 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229107156 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.327204298 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.218778741 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.555712775 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173928294 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.543594801 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.301589428 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.228322745 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.319225184 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5391007 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218453892 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326353589 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570931811 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.057243422 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.323062239 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022002813 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370699258 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333855503 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332290542 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.68818869 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335860773 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389858133 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331032501 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.330450351 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.332558643 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489076984 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329024219 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323233316 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.335601388 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415446583 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.694552436 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.079576087 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.096353078 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898559754 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051881793 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909730709 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35078524 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322161196 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320359608 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256181409 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472753752 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.846582416 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596571142 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45519211 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.757479513 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352686098 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254203597 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357102667 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541718021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597106008 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292618322 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328838613 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115321683 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.204868524 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334101155 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.533618723 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82326667 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889743712 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440640703 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322662423 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.780287547 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604121811 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.413541366 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323750421 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914312709 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.335983875 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671208031 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.358548477 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325065563 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490672245 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333165728 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991712033 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359984469 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.483370514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.097758384 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.332740433 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587552409 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.775381025 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.335509798 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899599446 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033318369 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587414959 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394150576 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336205094 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.426397217 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473723963 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.324656299 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.205861003 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32551775 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170914812 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.035098868 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.33523988 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899155765 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612554354 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.323126814 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.327058587 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348288699 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.335142415 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.548659569 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039594481 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558017944 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337192976 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327978151 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316264211 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901561116 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356282618 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261233839 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.331494211 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572279605 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590203285 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349813208 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.781030085 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.039762416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88275847 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.299998917 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350297173 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327778324 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025183302 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900875812 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.110625974 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835179456 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986812391 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328079576 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627649719 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.332685434 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33100263 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612527614 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.332807829 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335330269 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347030868 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.90266893 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111611085 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.338187138 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.266709843 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.27413159 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.553617089 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955227569 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272845212 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338868487 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.502002686 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336686638 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458922109 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340821921 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.334848165 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33603627 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.069874286 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601092358 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.335089488 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.31494988 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.295334779 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333300064 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341995378 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580528758 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344040664 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.003415267 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.681307437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586209049 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.33584349 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.318175772 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.333845209 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330506193 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046378544 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338958852 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.835685246 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91002524 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.339147914 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.349076966 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335004327 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.546065494 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541698607 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341562275 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342466538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330203639 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35294586 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.229743107 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098282073 seconds)
  done (took 1574.339469654 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360651794 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.354826117 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.356226898 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.349065152 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347961295 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38796239 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.396428127 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367977835 seconds)
  done (took 52.170296761 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.342739331 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.492412227 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.361083833 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.339856966 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.340484512 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.334894517 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.792719175 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.365938322 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.339674899 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.341704113 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.33195307 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.343543994 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.9749778 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.348766052 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.338822555 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.320773523 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.339672463 seconds)
  done (took 65.299760551 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.333336715 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.841369803 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.435873682 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.336216358 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.307858202 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.357645251 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.015135797 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.349833252 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.34410552 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.627250289 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.000557469 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.339891735 seconds)
  done (took 84.541243087 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.34067623 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.340578247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.340708029 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.339973006 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.33936226 seconds)
  done (took 7.951732176 seconds)
done (took 1997.746398613 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.580733304 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.014728034 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.956564542 seconds)
  done (took 5.222437119 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.481589915 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.530157812 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.650360233 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.658343366 seconds)
  done (took 7.572992025 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.614810988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.716276013 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.533557631 seconds)
  done (took 6.116753883 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.731528459 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.338271626 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.479654535 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.334835589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.342953899 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.345458768 seconds)
  done (took 20.280178912 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.340145083 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.344309018 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.341713167 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.342248876 seconds)
  done (took 6.623349603 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.316904993 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.036944346 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.325817137 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.343485907 seconds)
  done (took 18.27754013 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.089941161 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.099250606 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.084752157 seconds)
  done (took 7.528278368 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.339461545 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.187669485 seconds)
  done (took 9.780252067 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.627604478 seconds)
  done (took 2.882471193 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.475987608 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.664289548 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.353333643 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.33283951 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.377363485 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.109357993 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.938335007 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.532824265 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.275310394 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.473206187 seconds)
  done (took 27.789091549 seconds)
done (took 125.451932845 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.086885175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.721044933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.546163729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.058648592 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.562446809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.545341577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.541493879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.028120656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.571372065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.559906585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.10249289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.567935248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.487830335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.719212733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.488736579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.341289399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.56656588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.125812089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.749352357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.95053099 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.545804161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.698859982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.928653918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.713493187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.564779506 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.495831991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.274088527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.338368483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.918918273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.295019428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.496410372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.123024053 seconds)
  done (took 188.970910932 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.337725669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360527442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.340429291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.370159228 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.347218515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.341422348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.356351345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.356530894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.340338924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.356358756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.33938449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.350778688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.341506372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.354682081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.341251495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.356817047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356338482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.35373289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.342493014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.341858189 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.341903707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.339050001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.340126967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.341065404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.34442383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.340426032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.341078423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.350375549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.342254455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.362681593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.341175803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.350273013 seconds)
  done (took 204.379493472 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.341121149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340774682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.357513795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.357816401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.340913296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.359686844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.358877571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.342166422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.372785739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.347051425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.341397535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.363232579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.343652594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.342565229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.350619561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.341364775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.373701597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.342058213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.341789566 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.358686131 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.343954576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.343181358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.342631755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.368284712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.355931179 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.343444014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.343714193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.343436797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.34262373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.366746527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.342827526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.343835564 seconds)
  done (took 204.457766031 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.538676527 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.351121925 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.351257548 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.285209185 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.352614546 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.351279243 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.346353817 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.548311969 seconds)
  done (took 14.385922782 seconds)
done (took 613.44580351 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.609800988 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.326706962 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.549601776 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.372588389 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.088121744 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388915395 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.372789425 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.539756954 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.254740467 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.54594523 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.575052385 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.385123593 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.716412198 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.369855437 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.622733727 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.468794232 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.272130843 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.394818979 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.681427183 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.866389571 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.630178309 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.830097857 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.55723032 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.249608942 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.72869257 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.829878557 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.042112234 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.260222991 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.387110392 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.68776251 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.95273612 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.295950653 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.430728936 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.429152247 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.485424223 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.465455635 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267194296 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.427372857 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.568877831 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.602105114 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.851941212 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.077696269 seconds)
  done (took 91.722879503 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.336514892 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.336075424 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.334269744 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.337643165 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.336829083 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.334802266 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.335685237 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.335339164 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.336584441 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.335470012 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.334909691 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.337867344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.335249415 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.337443199 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.334817156 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.336652393 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.336987543 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.339675386 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.336835124 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.336818072 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.337286613 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.337461853 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.335856141 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.337130029 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.338035818 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.336892325 seconds)
  done (took 36.014159983 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.356396429 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.605762926 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.761331039 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.361636006 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.355707127 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.359807988 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.432633692 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.356994816 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.35899361 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.359278014 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.521450239 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.359423384 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39142344 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.786692819 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.358740708 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.35614073 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.35758923 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.356566506 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.613590185 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366423387 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.454681601 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.358614533 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.433634848 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.36595526 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.379091494 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.356936467 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.362709104 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.876156805 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37549206 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.522183033 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.139305358 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.439173484 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.821985686 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.787031816 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.134070371 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.366410896 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.357731194 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.527477954 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.359802529 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.357776383 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.433729061 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.358563783 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.770230724 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.974208349 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376911917 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.358798413 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.896737506 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.546088101 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.593403842 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374502844 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.790604613 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.36175831 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.361042434 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.359416484 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.595989202 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.375074076 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.359013815 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.884111683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.382153754 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.434949866 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361169843 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.359313003 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.620490649 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.362652742 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.61147204 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.362038092 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.369282801 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.378685742 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.771383028 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.362192379 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.993612379 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.385084256 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.361517658 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.524316739 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.610334624 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93473628 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388584272 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.625360071 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.840608684 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.450627137 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.364134761 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.867431321 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.454675688 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.362672049 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.36244409 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.363409429 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.360991526 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.407414164 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.433630146 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.921001521 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.010212739 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.908827099 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.457196981 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.380771487 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.361778471 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.882984606 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387725018 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.360949132 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.770898421 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998927198 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.37776274 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36872555 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.996809938 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.38405283 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.436889722 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.374658998 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.77681204 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.370268024 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.410070064 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.361730387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.370366751 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.383678431 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.439465979 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.365543521 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.36387646 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.968034835 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.552304175 seconds)
  done (took 178.802473318 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.356555242 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.355667068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.357692379 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.357359141 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.354925401 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.36390822 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.356285289 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.355931128 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.361607426 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.357470548 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.356589856 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.356554433 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.35645268 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.374339166 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.368172634 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.363663951 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.966063035 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.355435357 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.357211505 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.356960074 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.150508484 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.364600723 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.355965539 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.356561812 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.35627789 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.355593225 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.376738467 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.359531118 seconds)
  done (took 152.738870286 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.365621921 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.908383945 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.382610209 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.4910168 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.385639742 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.36272206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.488692846 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.426475264 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.380628389 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36289128 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.361923005 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.657953461 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.369700812 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.862741157 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.550601173 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.508609844 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.865519612 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.381631167 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.362063874 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.362225549 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.492417164 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.367931177 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656191474 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.910886397 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.382891275 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.909044189 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.348103685 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.365067756 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.363590809 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.912414577 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.379354733 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.658558694 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.439390775 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.423766129 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930893944 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.881043476 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.884875085 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.51570449 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.364295461 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.363775211 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.365316479 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.349890802 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.912653105 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.384170801 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.366520938 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.902870975 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.383607915 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.367192937 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.372378269 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.364917837 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.423161687 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.439471873 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.677333268 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.918453027 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.459127543 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.385552348 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.492219073 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.760943945 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.367628959 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.863218073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.348692627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.919331395 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.386056497 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.349215566 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.367002368 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.371691519 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.511861769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.497917222 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.86766008 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.382880154 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.864121794 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.527572138 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.37120394 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.365834529 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.369916962 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.917293748 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.881918033 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.526653632 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.50268019 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.560912246 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.352797334 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.365964791 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.34988674 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.441817216 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.374213505 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.919455641 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.883597136 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.386065185 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.369193174 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.369691267 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.370162558 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.539092137 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.937700934 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.460860257 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.862509167 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.679126038 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.662875868 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.370347597 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.423847105 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.383471997 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.664899845 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.370077438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.423788774 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.828401287 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.666435331 seconds)
  done (took 162.569406617 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.601801354 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.607222825 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.458139336 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.496330166 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.956852206 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.915794558 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.613647984 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.512025743 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.476588014 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.631786674 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.499842072 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.467023277 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.536861941 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.449296802 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.07492422 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.452139201 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.476805576 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508250879 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.47841231 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.403456106 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.009671243 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.645920676 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.534065205 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.285290297 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.464687489 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.126103098 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.921095644 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.932692733 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.544989861 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.713733418 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.897801416 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.521496078 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.291916143 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.032238476 seconds)
  done (took 65.818558507 seconds)
done (took 688.924858822 seconds)
SAVING RESULT...
DONE!
